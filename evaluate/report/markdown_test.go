package report

import (
	"bytes"
	"testing"
	"time"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"github.com/symflower/eval-dev-quality/evaluate/metrics"
	"github.com/zimmski/osutil/bytesutil"
)

func TestMarkdownFormat(t *testing.T) {
	type testCase struct {
		Name string

		Markdown Markdown

		ExpectedReport string
		ExpectedError  error
	}

	validate := func(t *testing.T, tc *testCase) {
		t.Run(tc.Name, func(t *testing.T) {
			var buffer bytes.Buffer
			actualError := tc.Markdown.Format(&buffer)
			assert.Equal(t, tc.ExpectedError, actualError)
			actualReport := buffer.String()

			assert.Equalf(t, bytesutil.StringTrimIndentations(tc.ExpectedReport), actualReport, "Full output:\n%s", actualReport)
		})
	}

	testTimeString := "2000-01-01 00:00:00"
	testTime, err := time.Parse(time.DateTime, testTimeString)
	require.NoError(t, err)

	validate(t, &testCase{
		Name: "No Models",

		Markdown: Markdown{
			DateTime: testTime,
			Version:  "1234",

			CSVPath: "some/csv/path.csv",
			LogPath: "some/log/path.log",
		},

		ExpectedReport: `
			# Evaluation from 2000-01-01 00:00:00

			This report was generated by [DevQualityEval benchmark](https://github.com/symflower/eval-dev-quality) in ` + "`" + `version 1234` + "`" + `.

			## Results

			> Keep in mind that LLMs are nondeterministic. The following results just reflect a current snapshot.

			The results of all models have been divided into the following categories:
			- Category Unknown: Models in this category could not be categorized.
			- Response Error: Models in this category encountered an error.
			- Response Empty: Models in this category produced an empty response.
			- No Code: Models in this category produced no code.
			- Invalid Code: Models in this category produced invalid code.
			- Executable Code: Models in this category produced executable code.
			- Statement Coverage Reached: Models in this category produced code that reached full statement coverage.
			- No Excess Response: Models in this category did not respond with more content than requested.

			The following sections list all models with their categories. The complete log of the evaluation with all outputs can be found [here](some/log/path.log). Detailed scoring can be found [here](some/csv/path.csv).

		`,
	})

	validate(t, &testCase{
		Name: "Simple Models",

		Markdown: Markdown{
			DateTime: testTime,
			Version:  "1234",

			CSVPath: "some/csv/path.csv",
			LogPath: "some/log/path.log",

			TotalScore: 1,
			AssessmentPerModel: map[string]metrics.Assessments{
				"ModelResponseError": metrics.NewAssessments(),
				"ModelNoCode": metrics.Assessments{
					metrics.AssessmentKeyResponseNoError:  1,
					metrics.AssessmentKeyResponseNotEmpty: 1,
				},
			},
		},

		ExpectedReport: `
			# Evaluation from 2000-01-01 00:00:00

			This report was generated by [DevQualityEval benchmark](https://github.com/symflower/eval-dev-quality) in ` + "`" + `version 1234` + "`" + `.

			## Results

			> Keep in mind that LLMs are nondeterministic. The following results just reflect a current snapshot.

			The results of all models have been divided into the following categories:
			- Category Unknown: Models in this category could not be categorized.
			- Response Error: Models in this category encountered an error.
			- Response Empty: Models in this category produced an empty response.
			- No Code: Models in this category produced no code.
			- Invalid Code: Models in this category produced invalid code.
			- Executable Code: Models in this category produced executable code.
			- Statement Coverage Reached: Models in this category produced code that reached full statement coverage.
			- No Excess Response: Models in this category did not respond with more content than requested.

			The following sections list all models with their categories. The complete log of the evaluation with all outputs can be found [here](some/log/path.log). Detailed scoring can be found [here](some/csv/path.csv).

			### "Response Error"

			Models in this category encountered an error.

			- ` + "`ModelResponseError`" + `

			### "No Code"

			Models in this category produced no code.

			- ` + "`ModelNoCode`" + `

		`,
	})
}
