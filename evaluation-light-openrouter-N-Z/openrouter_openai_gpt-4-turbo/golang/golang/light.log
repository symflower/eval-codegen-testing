2024/06/06 11:15:59 Evaluating model "openrouter/openai/gpt-4-turbo" using language "golang" and repository "golang/light"
2024/06/06 11:15:59 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/06 11:16:19 Model "openrouter/openai/gpt-4-turbo" responded (20859 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		tests := []struct {
			name   string
			input  string
			result bool
		}{
			{name: "empty string", input: "", result: true},
			{name: "single opening bracket", input: "[", result: false},
			{name: "single closing bracket", input: "]", result: false},
			{name: "balanced brackets with pairs", input: "[][]", result: true},
			{name: "unbalanced, more opening than closing", input: "[[[", result: false},
			{name: "unbalanced, more closing", input: "]]]", result: false},
			{name: "nested balanced brackets", input: "[[]]", result: true},
			{name: "balanced repeated inside and out", input: "[][][]", result: true},
			{name: "unbalanced due to order", input: "][][", result: false},
			{name: "non-bracket character", input: "a", result: false},
			{name: "mixed string, unbalanced", input: "[a]", result: false},
			{name: "mixed string, balanced", input: "[[]", result: false},
			{name: "balancing open follow closed", input: "[]]", result: false},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				result := hasBalancedBrackets(test.input)
				if result != test.result {
					t.Errorf("hasBalancedBrackets(%q) = %v, want %v", test.input, result, test.result)
				}
			})
		}
	}
	```
2024/06/06 11:16:19 $ go mod tidy
2024/06/06 11:16:19 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestHasBalancedBrackets
=== RUN   TestHasBalancedBrackets/empty_string
=== RUN   TestHasBalancedBrackets/single_opening_bracket
=== RUN   TestHasBalancedBrackets/single_closing_bracket
=== RUN   TestHasBalancedBrackets/balanced_brackets_with_pairs
=== RUN   TestHasBalancedBrackets/unbalanced,_more_opening_than_closing
=== RUN   TestHasBalancedBrackets/unbalanced,_more_closing
=== RUN   TestHasBalancedBrackets/nested_balanced_brackets
=== RUN   TestHasBalancedBrackets/balanced_repeated_inside_and_out
=== RUN   TestHasBalancedBrackets/unbalanced_due_to_order
    balancedBrackets_test.go:32: hasBalancedBrackets("][][") = true, want false
=== RUN   TestHasBalancedBrackets/non-bracket_character
=== RUN   TestHasBalancedBrackets/mixed_string,_unbalanced
=== RUN   TestHasBalancedBrackets/mixed_string,_balanced
=== RUN   TestHasBalancedBrackets/balancing_open_follow_closed
--- FAIL: TestHasBalancedBrackets (0.00s)
    --- PASS: TestHasBalancedBrackets/empty_string (0.00s)
    --- PASS: TestHasBalancedBrackets/single_opening_bracket (0.00s)
    --- PASS: TestHasBalancedBrackets/single_closing_bracket (0.00s)
    --- PASS: TestHasBalancedBrackets/balanced_brackets_with_pairs (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced,_more_opening_than_closing (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced,_more_closing (0.00s)
    --- PASS: TestHasBalancedBrackets/nested_balanced_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/balanced_repeated_inside_and_out (0.00s)
    --- FAIL: TestHasBalancedBrackets/unbalanced_due_to_order (0.00s)
    --- PASS: TestHasBalancedBrackets/non-bracket_character (0.00s)
    --- PASS: TestHasBalancedBrackets/mixed_string,_unbalanced (0.00s)
    --- PASS: TestHasBalancedBrackets/mixed_string,_balanced (0.00s)
    --- PASS: TestHasBalancedBrackets/balancing_open_follow_closed (0.00s)
FAIL
coverage: 4.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestHasBalancedBrackets/unbalanced_due_to_order (0.00s)
    balancedBrackets_test.go:32: hasBalancedBrackets("][][") = true, want false
    --- FAIL: TestHasBalancedBrackets/unbalanced_due_to_order (0.00s)

=== FAIL: . TestHasBalancedBrackets (0.00s)

DONE 14 tests, 2 failures in 0.362s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:16:20 Executes tests with 5 coverage objects
2024/06/06 11:16:20 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/06 11:16:32 Model "openrouter/openai/gpt-4-turbo" responded (12102 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestBinarySearch(t *testing.T) {
		arr := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}

		tests := []struct {
			name     string
			array    []int
			target   int
			expected int
		}{
			{"Find middle", arr, 5, 4},
			{"Find first", arr, 1, 0},
			{"Find last", arr, 10, 9},
			{"Find non-existent", arr, 11, -1},
			{"Empty array", []int{}, 1, -1},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := binarySearch(tt.array, tt.target)
				if got != tt.expected {
					t.Errorf("binarySearch(%v, %d) = %d; expected %d", tt.array, tt.target, got, tt.expected)
				}
			})
		}
	}
	```
2024/06/06 11:16:32 $ go mod tidy
2024/06/06 11:16:32 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestBinarySearch
=== RUN   TestBinarySearch/Find_middle
=== RUN   TestBinarySearch/Find_first
=== RUN   TestBinarySearch/Find_last
=== RUN   TestBinarySearch/Find_non-existent
=== RUN   TestBinarySearch/Empty_array
--- PASS: TestBinarySearch (0.00s)
    --- PASS: TestBinarySearch/Find_middle (0.00s)
    --- PASS: TestBinarySearch/Find_first (0.00s)
    --- PASS: TestBinarySearch/Find_last (0.00s)
    --- PASS: TestBinarySearch/Find_non-existent (0.00s)
    --- PASS: TestBinarySearch/Empty_array (0.00s)
PASS
coverage: 5.2% of statements
ok  	light	0.005s	coverage: 5.2% of statements

DONE 6 tests in 0.345s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:16:32 Executes tests with 4 coverage objects
2024/06/06 11:16:32 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/06 11:16:56 Model "openrouter/openai/gpt-4-turbo" responded (23904 ms) with:
	```golang
	package light

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		// Test case where x is less than 10
		result := callLoopConditionsOftenEnough(5, 15)
		assert.Equal(t, 0, result)

		// Test case where x is more than 20
		result = callLoopConditionsOftenEnough(21, 15)
		assert.Equal(t, 0, result)

		// Test case where x is within the range 
		// and y leads to no change since loop body conditions are not met
		result = callLoopConditionsOftenEnough(15, 20)
		assert.Equal(t, 15, result)

		// Test case where x is just right and y large enough to trigger i > 20 condition
		result = callLoopConditionsOftenEnough(15, 22)
		assert.Equal(t, 15, result)

		// Test case where x is modified enough times by the i > 20 block
		result = callLoopConditionsOftenEnough(15, 42)
		assert.Equal(t, 31, result)

		// Test case to meet x becomes great enough to go through x = x / 2 block
		result = callLoopConditionsOftenEnough(15, 500)
		assert.Equal(t, 30, result)

		// Another test case to verify the divide branch.
		// x starts at 15, 400 iterations where i > 20, should increment x by 379
		// which makes it 394, thus verifying the divide logic cresting a > 20 threshold.
		result = callLoopConditionsOftenEnough(15, 400)
		assert.Equal(t, 197, result)
	}
	```
2024/06/06 11:16:56 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/06 11:16:56 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:25
        	Error:      	Not equal: 
        	            	expected: 15
        	            	actual  : 16
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:29: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:29
        	Error:      	Not equal: 
        	            	expected: 31
        	            	actual  : 18
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:33: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:33
        	Error:      	Not equal: 
        	            	expected: 30
        	            	actual  : 247
        	Test:       	TestCallLoopConditionsOftenEnough
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.006s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)
    callLoopConditionsOftenEnough_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:25
        	Error:      	Not equal: 
        	            	expected: 15
        	            	actual  : 16
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:29: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:29
        	Error:      	Not equal: 
        	            	expected: 31
        	            	actual  : 18
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:33: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:33
        	Error:      	Not equal: 
        	            	expected: 30
        	            	actual  : 247
        	Test:       	TestCallLoopConditionsOftenEnough

DONE 1 tests, 1 failure in 0.479s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:16:57 Executes tests with 4 coverage objects
2024/06/06 11:16:57 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/06 11:17:05 Model "openrouter/openai/gpt-4-turbo" responded (8220 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestCascadingIfElse(t *testing.T) {
		tests := []struct {
			input int
			want  int
		}{
			{1, 2},
			{3, 4},
			{0, 5}, // testing the "else" clause
		}

		for _, tt := range tests {
			got := cascadingIfElse(tt.input)
			if got != tt.want {
				t.Errorf("cascadingIfElse(%d) = %d, want %d", tt.input, got, tt.want)
			}
		}
	}
	```
2024/06/06 11:17:05 $ go mod tidy
2024/06/06 11:17:05 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCascadingIfElse
--- PASS: TestCascadingIfElse (0.00s)
PASS
coverage: 2.4% of statements
ok  	light	0.003s	coverage: 2.4% of statements

DONE 1 tests in 0.347s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:17:06 Executes tests with 3 coverage objects
2024/06/06 11:17:06 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/06 11:17:22 Model "openrouter/openai/gpt-4-turbo" responded (15682 ms) with:
	```golang
	package light

	import (
	    "testing"
	)

	func TestComputeStepCount(t *testinging.T) {
	    tests := []struct {
	        input    int
	        wantCount int
	        wantErr bool
	    }{
	        {0, 0, true}, // Test for error with zero input
	        {-1, 0, true}, // Test for error with negative input
	        {1, 0, false}, // Base case where the input is 1
	        {2, 1, false}, // Test simple even integer
	        {3, 7, false}, // Test simple odd integer
	    }

	    for _, tt := range tests {
	        gotCount, err := computeStepCount(tt.input)
	        if (err != nil) != tt.wantErr {
	            t.Errorf("computeStepCount(%d) error = %v, wantErr %v", tt.input, err, tt.wantError)
	        }
	        if gotCount != tt.wantCount {
	            t.Errorf("computeStepCount(%d) = %d, want %d", tt.input, gotCount, tt.wantCount)
	        }
	    }
	}

	func TestComputeStepCountLargeInput(t *testing.T) {
	    result, err := computeStepCount(27)
	    if err != nil {
	        t.Errorf("computeStepCount(27) resulted in an error: %v", err)
	    }
	    if result != 111 {
	        t.Errorf("computeStepCount(27) = %d, want 111", result)
	    }
	}
	```
2024/06/06 11:17:22 $ go mod tidy
2024/06/06 11:17:22 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./collatzCalculator_test.go:7:30: undefined: testinging
./collatzCalculator_test.go:23:87: tt.wantError undefined (type struct{input int; wantCount int; wantErr bool} has no field or method wantError)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:7:30: undefined: testinging
./collatzCalculator_test.go:23:87: tt.wantError undefined (type struct{input int; wantCount int; wantErr bool} has no field or method wantError)

DONE 0 tests, 2 errors in 0.150s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:17:22 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/06 11:17:33 Model "openrouter/openai/gpt-4-turbo" responded (11227 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func Test_conditionsAnd(t *testing.T) {
		tests := []struct {
			name string
			x    rune
			y    rune
			want bool
		}{
			{"BothCorrect", 'A', 'B', true},
			{"FirstWrong", 'X', 'B', false},
			{"SecondWrong", 'A', 'C', false},
			{"BothWrong", 'X', 'Y', false},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := conditionsAnd(tt.x, tt.y); got != tt.want {
					t.Errorf("conditionsAnd(%q, %q) = %v, want %v", tt.x, tt.y, got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 11:17:33 $ go mod tidy
2024/06/06 11:17:33 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   Test_conditionsAnd
=== RUN   Test_conditionsAnd/BothCorrect
=== RUN   Test_conditionsAnd/FirstWrong
=== RUN   Test_conditionsAnd/SecondWrong
=== RUN   Test_conditionsAnd/BothWrong
--- PASS: Test_conditionsAnd (0.00s)
    --- PASS: Test_conditionsAnd/BothCorrect (0.00s)
    --- PASS: Test_conditionsAnd/FirstWrong (0.00s)
    --- PASS: Test_conditionsAnd/SecondWrong (0.00s)
    --- PASS: Test_conditionsAnd/BothWrong (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 5 tests in 0.359s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:17:34 Executes tests with 2 coverage objects
2024/06/06 11:17:34 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/06 11:17:57 Model "openrouter/openai/gpt-4-turbo" responded (22699 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			name     string
			sequence []int
			want     string
		}{
			{
				name:     "SingleElement",
				sequence: []int{0},
				want:     "0;",
			},
			{
				name:     "TwoElementsNoEquilibrium",
				sequence: []int{1, 2},
				want:     "",
			},
			{
				name:     "MultipleElementsOneEquilibrium",
				sequence: []int{-1, 3, -2, 2, 2, -3, 1},
				want:     "3;",
			},
			{
				name:     "MultipleElementsMultipleEquilibriums",
				sequence: []int{-7, 1, 5, 2, -4, 3, 0},
				want:     "3;6;",
			},
			{
				name:     "AllZeros",
				sequence: []int{0, 0, 0, 0},
				want:     "0;1;2;3;",
			},
			{
				name:     "EmptySequence",
				sequence: []int{},
				want:     "",
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := equilibriumIndices(tt.sequence); got != tt.want {
					t.Errorf("equilibriumIndices(%v) = %v, want %v", tt.sequence, got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 11:17:57 $ go mod tidy
2024/06/06 11:17:57 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/SingleElement
=== RUN   TestEquilibriumIndices/TwoElementsNoEquilibrium
=== RUN   TestEquilibriumIndices/MultipleElementsOneEquilibrium
    equilibriumIndices_test.go:48: equilibriumIndices([-1 3 -2 2 2 -3 1]) = 2;3;, want 3;
=== RUN   TestEquilibriumIndices/MultipleElementsMultipleEquilibriums
=== RUN   TestEquilibriumIndices/AllZeros
=== RUN   TestEquilibriumIndices/EmptySequence
--- FAIL: TestEquilibriumIndices (0.00s)
    --- PASS: TestEquilibriumIndices/SingleElement (0.00s)
    --- PASS: TestEquilibriumIndices/TwoElementsNoEquilibrium (0.00s)
    --- FAIL: TestEquilibriumIndices/MultipleElementsOneEquilibrium (0.00s)
    --- PASS: TestEquilibriumIndices/MultipleElementsMultipleEquilibriums (0.00s)
    --- PASS: TestEquilibriumIndices/AllZeros (0.00s)
    --- PASS: TestEquilibriumIndices/EmptySequence (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestEquilibriumIndices/MultipleElementsOneEquilibrium (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([-1 3 -2 2 2 -3 1]) = 2;3;, want 3;
    --- FAIL: TestEquilibriumIndices/MultipleElementsOneEquilibrium (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 7 tests, 2 failures in 0.344s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:17:57 Executes tests with 4 coverage objects
2024/06/06 11:17:57 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/06 11:18:09 Model "openrouter/openai/gpt-4-turbo" responded (11718 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestForLoop(t *testing.T) {
		tests := []struct {
			name  string
			input int
			want  int
		}{
			{
				name:  "zero",
				input: 0,
				want:  0,
			},
			{
				name:  "positive",
				input: 5,
				want:  20,
			},
			{
				name:  "negative",
				input: -1,
				want:  0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := forLoop(tt.input); got != tt.want {
					t.Errorf("forLoop(%d) = %d, want %d", tt.input, got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 11:18:09 $ go mod tidy
2024/06/06 11:18:09 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestForLoop
=== RUN   TestForLoop/zero
=== RUN   TestForLoop/positive
=== RUN   TestForLoop/negative
--- PASS: TestForLoop (0.00s)
    --- PASS: TestForLoop/zero (0.00s)
    --- PASS: TestForLoop/positive (0.00s)
    --- PASS: TestForLoop/negative (0.00s)
PASS
coverage: 2.8% of statements
ok  	light	0.003s	coverage: 2.8% of statements

DONE 4 tests in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:18:09 Executes tests with 3 coverage objects
2024/06/06 11:18:09 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/06 11:18:38 Model "openrouter/openai/gpt-4-turbo" responded (28092 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestJacobiSymbol(t *testing.T) {
		cases := []struct {
			k        uint64
			n        uint64
			expected int
			err      bool
		}{
			{k: 1, n: 3, expected: 1, err: false},
			{k: 2, n: 3, expected: -1, err: false},
			{k: 3, n: 5, expected: -1, err: false},
			{k: 9, n: 5, expected: -1, err: false},
			{k: 103, n: 9, expected: 0, err: true},   // n is even
			{k: 3, n: 4, expected: 0, err: true},    // n is even
		}
		for _, c := range cases {
			result, err := jacobiSymbol(c.k, c.n)
			if c.err && err == nil {
				t.Errorf("jacobiSymbol(%d, %d): expected error, got nil", c.k, c.n)
			} else if !c.err && err != nil {
				t.Errorf("jacobiSymbol(%d, %d): unexpected error: %v", c.k, c.n, err)
			}

			if result != c.expected {
				t.Errorf("jacobiSymbol(%d, %d): expected %d, got %d", c.k, c.n, c.expected, result)
			}
		}
	}

	func TestJacobiSymbolInvalidInputs(t *testing.T) {
		_, err := jacobiMean(0, 6)
		if err == nil {
			t.Errorf("Expected an error for even n, got no error.")
		}
	}
	```
2024/06/06 11:18:38 $ go mod tidy
2024/06/06 11:18:38 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./jacobiSymbol_test.go:36:12: undefined: jacobiMean
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./jacobiSymbol_test.go:36:12: undefined: jacobiMean

DONE 0 tests, 1 error in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:18:38 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/06 11:18:54 Model "openrouter/openai/gpt-4-turbo" responded (16513 ms) with:
	```golang
	package light

	import (
		"reflect"
		"testing"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		tests := []struct {
			name   string
			limit  int
			expect []int
		}{
			{
				name:   "limit 0",
				limit:  0,
				expect: []int{0},
			},
			{
				name:   "limit 1",
				limit:  1,
				expect: []int{0, 1},
			},
			{
				name:   "limit 5",
				limit:  5,
				expect: []int{0, 1, 2, 3, 3, 4},
			},
			{
	 		    name:   "limit 10",
				limit:  10,
				expect: []int{0, 1, 2, 3, 3, 4, 4, 5, 6, 6, 6},
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := initialiseKlarnerRadoSequence(tt.limit)
				if !reflect.DeepEqual(result, tt.expect) {
					t.Errorf("initialiseKlarnerRadoSequence(%d) = %v, want %v", tt.limit, result, tt.expect)
				}
			})
		}
	}
	```
2024/06/06 11:18:54 $ go mod tidy
2024/06/06 11:18:54 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/limit_0
=== RUN   TestInitialiseKlarnerRadoSequence/limit_1
=== RUN   TestInitialiseKlarnerRadoSequence/limit_5
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(5) = [0 1 3 4 7 9], want [0 1 2 3 3 4]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_10
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(10) = [0 1 3 4 7 9 10 13 15 19 21], want [0 1 2 3 3 4 4 5 6 6 6]
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/limit_0 (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(5) = [0 1 3 4 7 9], want [0 1 2 3 3 4]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(10) = [0 1 3 4 7 9 10 13 15 19 21], want [0 1 2 3 3 4 4 5 6 6 6]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)

DONE 5 tests, 3 failures in 0.348s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:18:55 Executes tests with 3 coverage objects
2024/06/06 11:18:55 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/06 11:19:18 Model "openrouter/openai/gpt-4-turbo" responded (22967 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestMaximumValue(t *testing.T) {
		tests := []struct {
			maximumWeight int
			items         []Item
			expected      int
		}{
			{5, []Item{{1, 60}, {2, 100}, {3, 120}}, 220},
			{50, []Item{{10, 60}, {20, 100}, {30, 120}}, 280},
			{0, []item{}, 0},
			{10, []Item{{5, 50}, {3, 30}, {4, 40}, {2, 20}}, 90},
		}

		for _, test := range tests {
			result := maximumValue(test.maximumWeight, test.items)
			if result != test.expected {
				t.Errorf("maximumValue(%d, %#v) = %d; expected %d", test.maximumWeight, test.items, result, test.expected)
			}
		}
	}

	func TestMaximumValueWithZeroWeightItems(t *testing.T) {
		items := []Item{{0, 100}, {0, 200}, {5, 150}}
		maximumWeight := 5
		expected := 450
		result := maximumExit(maximumWeight, items)
		if result != expected {
			t.Errorf("maximumValue(%d, %#v) = %d; expected %d", maximumWeight, items, result, expected)
		}
	}

	func TestMaximumValueWithAllZeroWeights(t *testing.T) {
		zeroWeightItems := []Item{{0, 0}, {0, 0}, {0, 0}}
		maximumWeight := 10
		expected := 0
		result := maximumValue(maximumWeight, zeroWeightItems)
		if result != expected {
			t.Errorf("maximumValue(%d, %#v) = %d; expected %d", maximumWeight, zeroWeightItems, result, expected)
		}
	}
	```
2024/06/06 11:19:18 $ go mod tidy
2024/06/06 11:19:18 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./knapsack_test.go:15:9: undefined: item
./knapsack_test.go:31:12: undefined: maximumExit
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:15:9: undefined: item
./knapsack_test.go:31:12: undefined: maximumExit

DONE 0 tests, 2 errors in 0.141s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:19:18 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/06 11:19:32 Model "openrouter/openai/gpt-4-turbo" responded (13979 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestLargestProperDivisor(t *testing.T) {
		testCases := []struct {
			name     string
			input    int
			expected int
			wantErr  bool
		}{
			{"zero input", 0, 0, true},
			{"negative input", -10, 0, true},
			{"1 input", 1, 1, false},
			{"even number", 4, 2, false},
			{"odd number with divisor", 9, 3, false},
			{"odd prime number", 7, 1, false},
			{"larger odd number", 49, 7, false},
			{"larger even number", 50, 25, false},
		}

		for _, tc := range testCases {
			t.Run(tc.name, func(t *testing.T) {
				result, err := largestProperDivisor(tc.input)
				if (err != nil) != tc.wantErr {
					t.Errorf("Expected error: %v, got: %v", tc.wantDougWilkinser.Err, err)
				}
				if result != tc.expected {
					t.Errorf("Expected: %d, got: %d", tc.expected, result)
				}
			})
		}
	}
	```
2024/06/06 11:19:32 $ go mod tidy
2024/06/06 11:19:32 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./largestProperDivisor_test.go:28:48: tc.wantDougWilkinser undefined (type struct{name string; input int; expected int; wantErr bool} has no field or method wantDougWilkinser)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:28:48: tc.wantDougWilkinser undefined (type struct{name string; input int; expected int; wantErr bool} has no field or method wantDougWilkinser)

DONE 0 tests, 1 error in 0.135s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:19:32 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/06 11:19:53 Model "openrouter/openai/gpt-4-turbo" responded (20233 ms) with:
	```golang
	package light

	import (
		"reflect"
		"testing"
	)

	func Test_magicSquareOdd(t *testing.T) {
		type args struct {
			base int
		}
		tests := []struct {
			name    string
			args    args
			want    [][]int
			wantErr bool
		}{
			{
				name: "Test with base 3",
				args: args{base: 3},
				want: [][]int{
					{8, 1, 6},
					{3, 5, 7},
					{4, 9, 2},
				},
				wantErr: false,
			},
			{
				name: "Test with even base 4",
				args: args{base: 4},
				want:    nil,
				wantErr: true,
			},
			{
				name: "Test with base less than 3",
				args: args{base: 2},
				want:    nil,
				wantErr: true,
			},
			{
				name: "Test with negative base",
				args: args{base: -3},
				want:    nil,
				wantErr: true,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := magicSquareOdd(tt.args.base)
				if (err != nil) != tt.wantErr {
					t.Errorf("magicSquareOdd() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if !reflect.DeepEqual(got, tt.want) {
					t.Errorf("magicSquareOdd() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 11:19:53 $ go mod tidy
2024/06/06 11:19:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   Test_magicSquareOdd
=== RUN   Test_magicSquareOdd/Test_with_base_3
=== RUN   Test_magicSquareOdd/Test_with_even_base_4
=== RUN   Test_magicSquareOdd/Test_with_base_less_than_3
=== RUN   Test_magicSquareOdd/Test_with_negative_base
--- PASS: Test_magicSquareOdd (0.00s)
    --- PASS: Test_magicSquareOdd/Test_with_base_3 (0.00s)
    --- PASS: Test_magicSquareOdd/Test_with_even_base_4 (0.00s)
    --- PASS: Test_magicSquareOdd/Test_with_base_less_than_3 (0.00s)
    --- PASS: Test_magicSquareOdd/Test_with_negative_base (0.00s)
PASS
coverage: 11.4% of statements
ok  	light	0.005s	coverage: 11.4% of statements

DONE 5 tests in 0.315s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:19:53 Executes tests with 8 coverage objects
2024/06/06 11:19:53 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/06 11:20:09 Model "openrouter/openai/gpt-4-turbo" responded (16126 ms) with:
	```golang
	package light

	import "testing"

	func TestMatchBytesEqual(t *testing.multipart/form-data) {
	    s1 := []byte("HelloWorld")
	    s2 := []byte("HelloWorld")
	    if !matchBytes(s1, s2) {
	        t.Errorf("Expected true, got false for %s and %s", s1, s2)
	    }
	}

	func TestMatchBytesCaseInsensitive(t *testing.multipart/form-data) {
	    s1 := []byte("HelloWorld")
	    s2 := []byte("helloworld")
	    if !matchBytes(s1, s2) {
	        t.Errorf("Expected true, got false for %s and %s", s1, s2)
	    }
	}

	func TestMatchBytesFail(t *testing) {
	    s1 := []byte("HelloWorld")
	    s2 := []byte("worldHello")
	    if matchBytes(s1, s2) {
	        t.Errorf("Expected false, got true for %s and %s", s1, s2)
	    }
	}

	func TestMatchBytesNonAlpha(t *testing) {
	    s1 := []byte("Hello123")
	    s2 := []byte("hello123")
	    if !matchBytes(s1, s2) {
	        t.Errorf("Expected true, got false for %s and %s", s1, s2)
	    }
	}

	func TestMatchBytesDifferentLengths(t *testing) {
	    s1 := []byte("Hello")
	    s2 := []byte("HelloWorld")
	    if matchBytes(s1, s2) {
	        t.Errorf("Expected false, got true for %s and %s", s1, s2)
	    }
	}
	```
2024/06/06 11:20:09 $ go mod tidy
2024/06/06 11:20:09 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
WARN # light
matchBytes_test.go:5:46: missing ',' in parameter list
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:5:46: missing ',' in parameter list

DONE 0 tests, 1 error in 0.038s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:20:10 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/06 11:20:30 Model "openrouter/openai/gpt-4-turbo" responded (20637 ms) with:
	```golang
	package light

	import (
		"reflect"
		"testing"
	)

	func TestPascalsTriangle(t *testing.T) {
		tests := []struct {
			name    string
			rows    int
			want    [][]int
			wantErr bool
		}{
			{
				name:    "negative rows",
				rows:    -1,
				want:    nil,
				wantErr: true,
			},
			{
				name: "zero rows",
				rows: 0,
				want: [][]int{},
			},
			{
				name: "one row",
				rows: 1,
				want: [][]int{
					{1},
				},
			},
			{
				name: "two rows",
				rows: 2,
				want: [][]int{
					{1},
					{1, 1},
				},
			},
			{
				name: "four rows",
				rows: 4,
				want: [][]int{
					{1},
					{1, 1},
					{1, 2, 1},
					{1, 3, 3, 1},
				},
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := pascalsTriangle(tt.rows)
				if (err != nil) != tt.wantErr {
					t.Errorf("pascalsTriangle() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if !reflect.DeepEqual(got, tt.want) {
				    t.Errorf("pascalsTriangle() got = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 11:20:30 $ go mod tidy
2024/06/06 11:20:30 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestPascalsTriangle
=== RUN   TestPascalsTriangle/negative_rows
=== RUN   TestPascalsTriangle/zero_rows
=== RUN   TestPascalsTriangle/one_row
=== RUN   TestPascalsTriangle/two_rows
=== RUN   TestPascalsTriangle/four_rows
--- PASS: TestPascalsTriangle (0.00s)
    --- PASS: TestPascalsTriangle/negative_rows (0.00s)
    --- PASS: TestPascalsTriangle/zero_rows (0.00s)
    --- PASS: TestPascalsTriangle/one_row (0.00s)
    --- PASS: TestPascalsTriangle/two_rows (0.00s)
    --- PASS: TestPascalsTriangle/four_rows (0.00s)
PASS
coverage: 4.7% of statements
ok  	light	0.005s	coverage: 4.7% of statements

DONE 6 tests in 0.343s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:20:31 Executes tests with 4 coverage objects
2024/06/06 11:20:31 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/06 11:20:45 Model "openrouter/openai/gpt-4-turbo" responded (14382 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestExtractDigits(t *testing.com.T) {
		tests := []struct {
			input    string
			expected string
			errMsg   string
		}{
			{"123-456-7890", "1234567890", ""},
			{" (123) 456.7890 ", "1234567890", ""},
			{"123+456+7890", "1234567890", ""},
			{"ABC123", "", "letters not permitted"},
			{"123-456@7890", "", "punctuations not permitted"},
			{"123:456", "", "punctuations not permitted"},
			{"!123", "", "punctuations not permitted"},
		}

		for _, test := range tests {
			result, err := extractDigits(test.input)
			if result != test.expected {
				t.Errorf("extractDigits(%q) = %q, want %q", test.input, result, test.expected)
			}
			if err != nil && err.Error() != test.errMsg {
				t.Errorf("extractDigits(%q) returned error %q, want error %q", test.input, err.Error(), test.errMsg)
			} else if err == nil && test.errQuery.open(err)t.errMsg != "" {
				t.Errorf("extractDigits(%q) returned no error, want error %q", test.input, test.errMsg)
			}
		}
	}
	```
2024/06/06 11:20:45 $ go mod tidy
2024/06/06 11:20:45 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light
phoneNumber_test.go:7:38: missing ',' in parameter list
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
phoneNumber_test.go:7:38: missing ',' in parameter list

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:20:46 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/06 11:20:52 Model "openrouter/openai/gpt-4-turbo" responded (6569 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestSimpleIfElse(t *testing.T) {
		testCases := []struct {
			input    int
			expected int
		}{
			{1, 0},
			{0, 1},
			{2, 1},
		}

		for _, tc := range testCases {
			result := simpleIfElse(tc.input)
			if result != tc.expected {
				t.Errorf("simpleIfElse(%d) = %d; expected %d", tc.input, result, tc.expected)
			}
		}
	}
	```
2024/06/06 11:20:52 $ go mod tidy
2024/06/06 11:20:52 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleIfElse
--- PASS: TestSimpleIfElse (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 1 tests in 0.354s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:20:53 Executes tests with 2 coverage objects
2024/06/06 11:20:53 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/06 11:21:00 Model "openrouter/openai/gpt-4-turbo" responded (7638 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			name     string
			input    int
			expected int
		}{
			{"Case for 1", 1, 0},
			{"Default case", 2, 1},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := simpleSwitchWithReturn(tt.input); got != tt.expected {
					t.Errorf("simpleSwitchWithReturn(%d) = %d; want %d", tt.input, got, tt.expected)
				}
			})
		}
	}
	```
2024/06/06 11:21:00 $ go mod tidy
2024/06/06 11:21:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
=== RUN   TestSimpleSwitchWithReturn/Case_for_1
=== RUN   TestSimpleSwitchWithReturn/Default_case
--- PASS: TestSimpleSwitchWithReturn (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/Case_for_1 (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/Default_case (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 3 tests in 0.355s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:21:01 Executes tests with 3 coverage objects
2024/06/06 11:21:01 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/06 11:21:12 Model "openrouter/openai/gpt-4-turbo" responded (11635 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestIsSorted(t *testing.T) {
		tests := []struct {
			name     string
			arr      []int
			expected bool
		}{
			{"Empty slice", []int{}, true},
			{"One element", []int{1}, true},
			{"Two elements sorted", []int{1, 2}, true},
			{"Two elements unsorted", []int{2, 1}, false},
			{"Multiple elements sorted", []int{1, 2, 3, 4, 5}, true},
			{"Multiple elements unsorted", []int{1, 3, 2, 4, 5}, false},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := isSorted(tt.arr); got != tt.expected {
					t.Errorf("isSorted(%v) = %v, wanted %v", tt.arr, got, tt.expected)
				}
			})
		}
	}
	```
2024/06/06 11:21:12 $ go mod tidy
2024/06/06 11:21:12 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestIsSorted
=== RUN   TestIsSorted/Empty_slice
    sort_test.go:24: isSorted([]) = false, wanted true
=== RUN   TestIsSorted/One_element
=== RUN   TestIsSorted/Two_elements_sorted
=== RUN   TestIsSorted/Two_elements_unsorted
=== RUN   TestIsSorted/Multiple_elements_sorted
=== RUN   TestIsSorted/Multiple_elements_unsorted
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/Empty_slice (0.00s)
    --- PASS: TestIsSorted/One_element (0.00s)
    --- PASS: TestIsSorted/Two_elements_sorted (0.00s)
    --- PASS: TestIsSorted/Two_elements_unsorted (0.00s)
    --- PASS: TestIsSorted/Multiple_elements_sorted (0.00s)
    --- PASS: TestIsSorted/Multiple_elements_unsorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted/Empty_slice (0.00s)
    sort_test.go:24: isSorted([]) = false, wanted true
    --- FAIL: TestIsSorted/Empty_slice (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 7 tests, 2 failures in 0.343s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:21:13 Executes tests with 2 coverage objects
2024/06/06 11:21:13 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/06 11:21:26 Model "openrouter/openai/gpt-4-turbo" responded (13169 ms) with:
	```golang
	package light

	import "testing"

	func TestTypeArrayAccess(t *testing.T) {
	    tests := []struct {
	        name     string
	        input    []int
	        expected int
	    }{
	        {"With123", []int{123, 2, 3}, 123},
	        {"WithOther", []int{1, 2, 3}, 3},
	    }

	    for _, tt := range tests {
	        t.Run(tt.name, func(t *testing.T) {
	            if got := typeArrayAccess(tt.input); got != tt.expected {
	                t.Errorf("typeArrayAccess() = %v, want %v", got, tt.expected)
	            }
	        })
	    }
	}
	```
2024/06/06 11:21:26 $ go mod tidy
2024/06/06 11:21:26 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayAccess
=== RUN   TestTypeArrayAccess/With123
=== RUN   TestTypeArrayAccess/WithOther
--- PASS: TestTypeArrayAccess (0.00s)
    --- PASS: TestTypeArrayAccess/With123 (0.00s)
    --- PASS: TestTypeArrayAccess/WithOther (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 3 tests in 0.346s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:21:26 Executes tests with 2 coverage objects
2024/06/06 11:21:26 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/06 11:21:40 Model "openrouter/openai/gpt-4-turbo" responded (13601 ms) with:
	```golang
	package light

	import "testing"

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			name   string
			input  []int
			expect int
		}{
			{
				name:   "Both conditions met",
				input:  []int{0, 8},
				expect: 2,
			},
			{
				name:   "First condition met",
				input:  []int{0, 1},
			(expect: 1,
			},
			{
				name:   "Second condition met",
				input:  []int{1, 8},
				expect: 1,
			},
			{
				name:   "No conditions met",
				input:  []int{1, 1},
				expect: 0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := typeArrayConsecutiveAccess(tt.input)
				if result != tt.expect {
					t.Errorf("typeArrayConsecutiveAccess(%v) = %d, want %d", tt.input, result, tt.expect)
				}
			})
		}
	}
	```
2024/06/06 11:21:40 $ go mod tidy
2024/06/06 11:21:40 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light
typeArrayConsecutiveAccess_test.go:19:10: expected ')', found ':'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
typeArrayConsecutiveAccess_test.go:19:10: expected ')', found ':'

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:21:40 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/06 11:21:59 Model "openrouter/openai/gpt-4-turbo" responded (18973 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name string
			arg  [][]int
			want int
		}{
			{
				name: "Zero length outer array",
				arg:  [][]int{},
				want: 0,
			},
			{
				name: "Outer array length not 2",
				arg:  [][]int{{1}, {2}, {3}},
				want: 0,
			},
			{
				name: "Outer array length 2 but first inner array length not 2",
				arg:  [][]int{{1}, {2}},
				want: 1,
			},
			{
				name: "Outer array length 2 and first inner array length 2",
				arg:  [][]int{{1, 2}, {3, 4}},
				want: 2,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayMultidimensionalArrayLength(tt.arg); got != tt.want {
					t.Errorf("typeArrayMultidimensionalArrayLength() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 11:21:59 $ go mod tidy
2024/06/06 11:21:59 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/Zero_length_outer_array
=== RUN   TestTypeArrayMultidimensionalArrayLength/Outer_array_length_not_2
=== RUN   TestTypeArrayMultidimensionalArrayLength/Outer_array_length_2_but_first_inner_array_length_not_2
=== RUN   TestTypeArrayMultidimensionalArrayLength/Outer_array_length_2_and_first_inner_array_length_2
--- PASS: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Zero_length_outer_array (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Outer_array_length_not_2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Outer_array_length_2_but_first_inner_array_length_not_2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Outer_array_length_2_and_first_inner_array_length_2 (0.00s)
PASS
coverage: 2.4% of statements
ok  	light	0.005s	coverage: 2.4% of statements

DONE 5 tests in 0.375s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:22:00 Executes tests with 3 coverage objects
2024/06/06 11:22:00 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/06 11:22:22 Model "openrouter/openai/gpt-4-turbo" responded (21581 ms) with:
	```golang
	package light

	import "testing"

	func TestValidDate(t *testing.T) {
		tests := []struct {
			day    int
			month  int
			year   int
			expect bool
		}{
			{1, 1, 1583, true},
			{31, 12, 2000, true},
			{30, 4, 1999, true},
			{29, 2, 2000, true},
			{29, 2, 1600, true},
			{29, 2, 1700, false},
			{29, 2, 2004, true},
			{29, 2, 2005, false},
			{28, 2, 2003, true},
			{32, 1, 1990, false},
			{31, 4, 1995, false},
			{0, 10, 2000, false},
			{-1, 3, 2023, false},
			{15, 0, 2005, false},
			{15, 13, 2010, false},
			{1, 5, 1582, false},
		}

		for _, test := range tests {
			if res := validDate(test.day, test.month, test.year); res != test.expect {
				t.Errorf("validDate(%d, %d, %d) = %v, expected %v", test.day, test.month, test.year, res, test.expect)
			}
		}
	}
	```
2024/06/06 11:22:22 $ go mod tidy
2024/06/06 11:22:22 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestValidDate
    validateDate_test.go:32: validDate(29, 2, 2000) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1600) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1700) = true, expected false
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:32: validDate(29, 2, 2000) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1600) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1700) = true, expected false

DONE 1 tests, 1 failure in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:22 Executes tests with 7 coverage objects
2024/06/06 11:22:22 Evaluated model "openrouter/openai/gpt-4-turbo" using language "golang" and repository "golang/light": encountered 13 problems: [exit status 1
=== RUN   TestHasBalancedBrackets
=== RUN   TestHasBalancedBrackets/empty_string
=== RUN   TestHasBalancedBrackets/single_opening_bracket
=== RUN   TestHasBalancedBrackets/single_closing_bracket
=== RUN   TestHasBalancedBrackets/balanced_brackets_with_pairs
=== RUN   TestHasBalancedBrackets/unbalanced,_more_opening_than_closing
=== RUN   TestHasBalancedBrackets/unbalanced,_more_closing
=== RUN   TestHasBalancedBrackets/nested_balanced_brackets
=== RUN   TestHasBalancedBrackets/balanced_repeated_inside_and_out
=== RUN   TestHasBalancedBrackets/unbalanced_due_to_order
    balancedBrackets_test.go:32: hasBalancedBrackets("][][") = true, want false
=== RUN   TestHasBalancedBrackets/non-bracket_character
=== RUN   TestHasBalancedBrackets/mixed_string,_unbalanced
=== RUN   TestHasBalancedBrackets/mixed_string,_balanced
=== RUN   TestHasBalancedBrackets/balancing_open_follow_closed
--- FAIL: TestHasBalancedBrackets (0.00s)
    --- PASS: TestHasBalancedBrackets/empty_string (0.00s)
    --- PASS: TestHasBalancedBrackets/single_opening_bracket (0.00s)
    --- PASS: TestHasBalancedBrackets/single_closing_bracket (0.00s)
    --- PASS: TestHasBalancedBrackets/balanced_brackets_with_pairs (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced,_more_opening_than_closing (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced,_more_closing (0.00s)
    --- PASS: TestHasBalancedBrackets/nested_balanced_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/balanced_repeated_inside_and_out (0.00s)
    --- FAIL: TestHasBalancedBrackets/unbalanced_due_to_order (0.00s)
    --- PASS: TestHasBalancedBrackets/non-bracket_character (0.00s)
    --- PASS: TestHasBalancedBrackets/mixed_string,_unbalanced (0.00s)
    --- PASS: TestHasBalancedBrackets/mixed_string,_balanced (0.00s)
    --- PASS: TestHasBalancedBrackets/balancing_open_follow_closed (0.00s)
FAIL
coverage: 4.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestHasBalancedBrackets/unbalanced_due_to_order (0.00s)
    balancedBrackets_test.go:32: hasBalancedBrackets("][][") = true, want false
    --- FAIL: TestHasBalancedBrackets/unbalanced_due_to_order (0.00s)

=== FAIL: . TestHasBalancedBrackets (0.00s)

DONE 14 tests, 2 failures in 0.362s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestHasBalancedBrackets
=== RUN   TestHasBalancedBrackets/empty_string
=== RUN   TestHasBalancedBrackets/single_opening_bracket
=== RUN   TestHasBalancedBrackets/single_closing_bracket
=== RUN   TestHasBalancedBrackets/balanced_brackets_with_pairs
=== RUN   TestHasBalancedBrackets/unbalanced,_more_opening_than_closing
=== RUN   TestHasBalancedBrackets/unbalanced,_more_closing
=== RUN   TestHasBalancedBrackets/nested_balanced_brackets
=== RUN   TestHasBalancedBrackets/balanced_repeated_inside_and_out
=== RUN   TestHasBalancedBrackets/unbalanced_due_to_order
    balancedBrackets_test.go:32: hasBalancedBrackets("][][") = true, want false
=== RUN   TestHasBalancedBrackets/non-bracket_character
=== RUN   TestHasBalancedBrackets/mixed_string,_unbalanced
=== RUN   TestHasBalancedBrackets/mixed_string,_balanced
=== RUN   TestHasBalancedBrackets/balancing_open_follow_closed
--- FAIL: TestHasBalancedBrackets (0.00s)
    --- PASS: TestHasBalancedBrackets/empty_string (0.00s)
    --- PASS: TestHasBalancedBrackets/single_opening_bracket (0.00s)
    --- PASS: TestHasBalancedBrackets/single_closing_bracket (0.00s)
    --- PASS: TestHasBalancedBrackets/balanced_brackets_with_pairs (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced,_more_opening_than_closing (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced,_more_closing (0.00s)
    --- PASS: TestHasBalancedBrackets/nested_balanced_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/balanced_repeated_inside_and_out (0.00s)
    --- FAIL: TestHasBalancedBrackets/unbalanced_due_to_order (0.00s)
    --- PASS: TestHasBalancedBrackets/non-bracket_character (0.00s)
    --- PASS: TestHasBalancedBrackets/mixed_string,_unbalanced (0.00s)
    --- PASS: TestHasBalancedBrackets/mixed_string,_balanced (0.00s)
    --- PASS: TestHasBalancedBrackets/balancing_open_follow_closed (0.00s)
FAIL
coverage: 4.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestHasBalancedBrackets/unbalanced_due_to_order (0.00s)
    balancedBrackets_test.go:32: hasBalancedBrackets("][][") = true, want false
    --- FAIL: TestHasBalancedBrackets/unbalanced_due_to_order (0.00s)

=== FAIL: . TestHasBalancedBrackets (0.00s)

DONE 14 tests, 2 failures in 0.362s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:25
        	Error:      	Not equal: 
        	            	expected: 15
        	            	actual  : 16
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:29: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:29
        	Error:      	Not equal: 
        	            	expected: 31
        	            	actual  : 18
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:33: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:33
        	Error:      	Not equal: 
        	            	expected: 30
        	            	actual  : 247
        	Test:       	TestCallLoopConditionsOftenEnough
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.006s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)
    callLoopConditionsOftenEnough_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:25
        	Error:      	Not equal: 
        	            	expected: 15
        	            	actual  : 16
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:29: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:29
        	Error:      	Not equal: 
        	            	expected: 31
        	            	actual  : 18
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:33: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:33
        	Error:      	Not equal: 
        	            	expected: 30
        	            	actual  : 247
        	Test:       	TestCallLoopConditionsOftenEnough

DONE 1 tests, 1 failure in 0.479s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:25
        	Error:      	Not equal: 
        	            	expected: 15
        	            	actual  : 16
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:29: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:29
        	Error:      	Not equal: 
        	            	expected: 31
        	            	actual  : 18
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:33: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:33
        	Error:      	Not equal: 
        	            	expected: 30
        	            	actual  : 247
        	Test:       	TestCallLoopConditionsOftenEnough
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.006s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)
    callLoopConditionsOftenEnough_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:25
        	Error:      	Not equal: 
        	            	expected: 15
        	            	actual  : 16
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:29: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:29
        	Error:      	Not equal: 
        	            	expected: 31
        	            	actual  : 18
        	Test:       	TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:33: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/callLoopConditionsOftenEnough_test.go:33
        	Error:      	Not equal: 
        	            	expected: 30
        	            	actual  : 247
        	Test:       	TestCallLoopConditionsOftenEnough

DONE 1 tests, 1 failure in 0.479s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./collatzCalculator_test.go:7:30: undefined: testinging
./collatzCalculator_test.go:23:87: tt.wantError undefined (type struct{input int; wantCount int; wantErr bool} has no field or method wantError)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:7:30: undefined: testinging
./collatzCalculator_test.go:23:87: tt.wantError undefined (type struct{input int; wantCount int; wantErr bool} has no field or method wantError)

DONE 0 tests, 2 errors in 0.150s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./collatzCalculator_test.go:7:30: undefined: testinging
./collatzCalculator_test.go:23:87: tt.wantError undefined (type struct{input int; wantCount int; wantErr bool} has no field or method wantError)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:7:30: undefined: testinging
./collatzCalculator_test.go:23:87: tt.wantError undefined (type struct{input int; wantCount int; wantErr bool} has no field or method wantError)

DONE 0 tests, 2 errors in 0.150s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

collatzCalculator.go exit status 1
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/SingleElement
=== RUN   TestEquilibriumIndices/TwoElementsNoEquilibrium
=== RUN   TestEquilibriumIndices/MultipleElementsOneEquilibrium
    equilibriumIndices_test.go:48: equilibriumIndices([-1 3 -2 2 2 -3 1]) = 2;3;, want 3;
=== RUN   TestEquilibriumIndices/MultipleElementsMultipleEquilibriums
=== RUN   TestEquilibriumIndices/AllZeros
=== RUN   TestEquilibriumIndices/EmptySequence
--- FAIL: TestEquilibriumIndices (0.00s)
    --- PASS: TestEquilibriumIndices/SingleElement (0.00s)
    --- PASS: TestEquilibriumIndices/TwoElementsNoEquilibrium (0.00s)
    --- FAIL: TestEquilibriumIndices/MultipleElementsOneEquilibrium (0.00s)
    --- PASS: TestEquilibriumIndices/MultipleElementsMultipleEquilibriums (0.00s)
    --- PASS: TestEquilibriumIndices/AllZeros (0.00s)
    --- PASS: TestEquilibriumIndices/EmptySequence (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestEquilibriumIndices/MultipleElementsOneEquilibrium (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([-1 3 -2 2 2 -3 1]) = 2;3;, want 3;
    --- FAIL: TestEquilibriumIndices/MultipleElementsOneEquilibrium (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 7 tests, 2 failures in 0.344s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/SingleElement
=== RUN   TestEquilibriumIndices/TwoElementsNoEquilibrium
=== RUN   TestEquilibriumIndices/MultipleElementsOneEquilibrium
    equilibriumIndices_test.go:48: equilibriumIndices([-1 3 -2 2 2 -3 1]) = 2;3;, want 3;
=== RUN   TestEquilibriumIndices/MultipleElementsMultipleEquilibriums
=== RUN   TestEquilibriumIndices/AllZeros
=== RUN   TestEquilibriumIndices/EmptySequence
--- FAIL: TestEquilibriumIndices (0.00s)
    --- PASS: TestEquilibriumIndices/SingleElement (0.00s)
    --- PASS: TestEquilibriumIndices/TwoElementsNoEquilibrium (0.00s)
    --- FAIL: TestEquilibriumIndices/MultipleElementsOneEquilibrium (0.00s)
    --- PASS: TestEquilibriumIndices/MultipleElementsMultipleEquilibriums (0.00s)
    --- PASS: TestEquilibriumIndices/AllZeros (0.00s)
    --- PASS: TestEquilibriumIndices/EmptySequence (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestEquilibriumIndices/MultipleElementsOneEquilibrium (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([-1 3 -2 2 2 -3 1]) = 2;3;, want 3;
    --- FAIL: TestEquilibriumIndices/MultipleElementsOneEquilibrium (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 7 tests, 2 failures in 0.344s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./jacobiSymbol_test.go:36:12: undefined: jacobiMean
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./jacobiSymbol_test.go:36:12: undefined: jacobiMean

DONE 0 tests, 1 error in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./jacobiSymbol_test.go:36:12: undefined: jacobiMean
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./jacobiSymbol_test.go:36:12: undefined: jacobiMean

DONE 0 tests, 1 error in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

jacobiSymbol.go exit status 1
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/limit_0
=== RUN   TestInitialiseKlarnerRadoSequence/limit_1
=== RUN   TestInitialiseKlarnerRadoSequence/limit_5
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(5) = [0 1 3 4 7 9], want [0 1 2 3 3 4]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_10
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(10) = [0 1 3 4 7 9 10 13 15 19 21], want [0 1 2 3 3 4 4 5 6 6 6]
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/limit_0 (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(5) = [0 1 3 4 7 9], want [0 1 2 3 3 4]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(10) = [0 1 3 4 7 9 10 13 15 19 21], want [0 1 2 3 3 4 4 5 6 6 6]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)

DONE 5 tests, 3 failures in 0.348s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/limit_0
=== RUN   TestInitialiseKlarnerRadoSequence/limit_1
=== RUN   TestInitialiseKlarnerRadoSequence/limit_5
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(5) = [0 1 3 4 7 9], want [0 1 2 3 3 4]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_10
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(10) = [0 1 3 4 7 9 10 13 15 19 21], want [0 1 2 3 3 4 4 5 6 6 6]
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/limit_0 (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(5) = [0 1 3 4 7 9], want [0 1 2 3 3 4]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
    klarnerRadoSequence_test.go:40: initialiseKlarnerRadoSequence(10) = [0 1 3 4 7 9 10 13 15 19 21], want [0 1 2 3 3 4 4 5 6 6 6]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)

DONE 5 tests, 3 failures in 0.348s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./knapsack_test.go:15:9: undefined: item
./knapsack_test.go:31:12: undefined: maximumExit
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:15:9: undefined: item
./knapsack_test.go:31:12: undefined: maximumExit

DONE 0 tests, 2 errors in 0.141s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./knapsack_test.go:15:9: undefined: item
./knapsack_test.go:31:12: undefined: maximumExit
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:15:9: undefined: item
./knapsack_test.go:31:12: undefined: maximumExit

DONE 0 tests, 2 errors in 0.141s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

knapsack.go exit status 1
# light [light.test]
./largestProperDivisor_test.go:28:48: tc.wantDougWilkinser undefined (type struct{name string; input int; expected int; wantErr bool} has no field or method wantDougWilkinser)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:28:48: tc.wantDougWilkinser undefined (type struct{name string; input int; expected int; wantErr bool} has no field or method wantDougWilkinser)

DONE 0 tests, 1 error in 0.135s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./largestProperDivisor_test.go:28:48: tc.wantDougWilkinser undefined (type struct{name string; input int; expected int; wantErr bool} has no field or method wantDougWilkinser)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:28:48: tc.wantDougWilkinser undefined (type struct{name string; input int; expected int; wantErr bool} has no field or method wantDougWilkinser)

DONE 0 tests, 1 error in 0.135s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

largestProperDivisor.go exit status 1
WARN # light
matchBytes_test.go:5:46: missing ',' in parameter list
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:5:46: missing ',' in parameter list

DONE 0 tests, 1 error in 0.038s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
WARN # light
matchBytes_test.go:5:46: missing ',' in parameter list
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:5:46: missing ',' in parameter list

DONE 0 tests, 1 error in 0.038s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

matchBytes.go exit status 1
# light
phoneNumber_test.go:7:38: missing ',' in parameter list
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
phoneNumber_test.go:7:38: missing ',' in parameter list

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
phoneNumber_test.go:7:38: missing ',' in parameter list
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
phoneNumber_test.go:7:38: missing ',' in parameter list

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
=== RUN   TestIsSorted
=== RUN   TestIsSorted/Empty_slice
    sort_test.go:24: isSorted([]) = false, wanted true
=== RUN   TestIsSorted/One_element
=== RUN   TestIsSorted/Two_elements_sorted
=== RUN   TestIsSorted/Two_elements_unsorted
=== RUN   TestIsSorted/Multiple_elements_sorted
=== RUN   TestIsSorted/Multiple_elements_unsorted
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/Empty_slice (0.00s)
    --- PASS: TestIsSorted/One_element (0.00s)
    --- PASS: TestIsSorted/Two_elements_sorted (0.00s)
    --- PASS: TestIsSorted/Two_elements_unsorted (0.00s)
    --- PASS: TestIsSorted/Multiple_elements_sorted (0.00s)
    --- PASS: TestIsSorted/Multiple_elements_unsorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted/Empty_slice (0.00s)
    sort_test.go:24: isSorted([]) = false, wanted true
    --- FAIL: TestIsSorted/Empty_slice (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 7 tests, 2 failures in 0.343s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestIsSorted
=== RUN   TestIsSorted/Empty_slice
    sort_test.go:24: isSorted([]) = false, wanted true
=== RUN   TestIsSorted/One_element
=== RUN   TestIsSorted/Two_elements_sorted
=== RUN   TestIsSorted/Two_elements_unsorted
=== RUN   TestIsSorted/Multiple_elements_sorted
=== RUN   TestIsSorted/Multiple_elements_unsorted
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/Empty_slice (0.00s)
    --- PASS: TestIsSorted/One_element (0.00s)
    --- PASS: TestIsSorted/Two_elements_sorted (0.00s)
    --- PASS: TestIsSorted/Two_elements_unsorted (0.00s)
    --- PASS: TestIsSorted/Multiple_elements_sorted (0.00s)
    --- PASS: TestIsSorted/Multiple_elements_unsorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted/Empty_slice (0.00s)
    sort_test.go:24: isSorted([]) = false, wanted true
    --- FAIL: TestIsSorted/Empty_slice (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 7 tests, 2 failures in 0.343s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light
typeArrayConsecutiveAccess_test.go:19:10: expected ')', found ':'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
typeArrayConsecutiveAccess_test.go:19:10: expected ')', found ':'

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
typeArrayConsecutiveAccess_test.go:19:10: expected ')', found ':'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
typeArrayConsecutiveAccess_test.go:19:10: expected ')', found ':'

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayConsecutiveAccess.go exit status 1
=== RUN   TestValidDate
    validateDate_test.go:32: validDate(29, 2, 2000) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1600) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1700) = true, expected false
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:32: validDate(29, 2, 2000) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1600) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1700) = true, expected false

DONE 1 tests, 1 failure in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestValidDate
    validateDate_test.go:32: validDate(29, 2, 2000) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1600) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1700) = true, expected false
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:32: validDate(29, 2, 2000) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1600) = false, expected true
    validateDate_test.go:32: validDate(29, 2, 1700) = true, expected false

DONE 1 tests, 1 failure in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
2024/06/06 16:04:21 Evaluating model "openrouter/openai/gpt-4-turbo" using language "golang" and repository "golang/light"
2024/06/06 16:04:21 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/06 16:04:38 Model "openrouter/openai/gpt-4-turbo" responded (16473 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		testCases := []struct {
			name     string
			input    string
			expected bool
		}{
			{"Empty String", "", true},
			{"Single Opening", "[", false},
			{"Single Closing", "]", false},
			{"Balanced Brackets", "[][]", true},
			{"Nested Balanced Brackets", "[[]]", true},
			{"Unbalanced Open Brackets", "[[[", false},
			{"Unbalanced Close Brackets", "]]]", false},
			{"Mixed Unbalanced", "[]][[]", false},
			{"Invalid Characters", "[a]", false},
			{"Multiple Invalid Characters", "[][a][b]", false},
			{"Closing before Opening", "][", false},
			{"Multiple Nested", "[[[][]]]", true},
		}

		for _, tc := range testCases {
			t.Run(tc.name, func(t *testing.T) {
				result := hasBalancedBrackets(tc.input)
				if result != tc.expected {
					t.Errorf("Expected %v, got %v for input %v", tc.expected, result, tc.input)
				}
			})
		}
	}
	```
2024/06/06 16:04:38 $ go mod tidy
2024/06/06 16:04:38 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestHasBalancedBrackets
=== RUN   TestHasBalancedBrackets/Empty_String
=== RUN   TestHasBalancedBrackets/Single_Opening
=== RUN   TestHasBalancedBrackets/Single_Closing
=== RUN   TestHasBalancedBrackets/Balanced_Brackets
=== RUN   TestHasBalancedBrackets/Nested_Balanced_Brackets
=== RUN   TestHasBalancedBrackets/Unbalanced_Open_Brackets
=== RUN   TestHasBalancedBrackets/Unbalanced_Close_Brackets
=== RUN   TestHasBalancedBrackets/Mixed_Unbalanced
    balancedBrackets_test.go:31: Expected false, got true for input []][[]
=== RUN   TestHasBalancedBrackets/Invalid_Characters
=== RUN   TestHasBalancedBrackets/Multiple_Invalid_Characters
=== RUN   TestHasBalancedBrackets/Closing_before_Opening
    balancedBrackets_test.go:31: Expected false, got true for input ][
=== RUN   TestHasBalancedBrackets/Multiple_Nested
--- FAIL: TestHasBalancedBrackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Empty_String (0.00s)
    --- PASS: TestHasBalancedBrackets/Single_Opening (0.00s)
    --- PASS: TestHasBalancedBrackets/Single_Closing (0.00s)
    --- PASS: TestHasBalancedBrackets/Balanced_Brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Nested_Balanced_Brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Unbalanced_Open_Brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Unbalanced_Close_Brackets (0.00s)
    --- FAIL: TestHasBalancedBrackets/Mixed_Unbalanced (0.00s)
    --- PASS: TestHasBalancedBrackets/Invalid_Characters (0.00s)
    --- PASS: TestHasBalancedBrackets/Multiple_Invalid_Characters (0.00s)
    --- FAIL: TestHasBalancedBrackets/Closing_before_Opening (0.00s)
    --- PASS: TestHasBalancedBrackets/Multiple_Nested (0.00s)
FAIL
coverage: 4.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestHasBalancedBrackets/Mixed_Unbalanced (0.00s)
    balancedBrackets_test.go:31: Expected false, got true for input []][[]
    --- FAIL: TestHasBalancedBrackets/Mixed_Unbalanced (0.00s)

=== FAIL: . TestHasBalancedBrackets/Closing_before_Opening (0.00s)
    balancedBrackets_test.go:31: Expected false, got true for input ][
    --- FAIL: TestHasBalancedBrackets/Closing_before_Opening (0.00s)

=== FAIL: . TestHasBalancedBrackets (0.00s)

DONE 13 tests, 3 failures in 0.319s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:04:38 Executes tests with 5 coverage objects
2024/06/06 16:04:38 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/06 16:05:10 Model "openrouter/openai/gpt-4-turbo" responded (32251 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"light"
		"github.com/stretchr/testify/assert"
	)

	func TestBinarySearch(t *testing.T) {
		tests := []struct {
			name string
			arr  []int
			x    int
			want int
		}{
			{
				name: "element_at_middle",
				arr:  []int{1, 2, 3, 4, 5},
				x:    3,
				want: 2,
			},
			{
				name: "element_at_start",
				arr:  []int{1, 2, 3, 4, 5},
				x:    1,
				want: 0,
			},
			{
				name: "element_at_end",
				arr:  []int{1, 2, 3, 4, 5},
				x:    5,
				want: 4,
			},
			{
				name: "element_not_present",
				arr:  []int{1, 2, 3, 4, 5},
				x:    6,
				want: -1,
			},
			{
				name: "empty_array",
				arr:  []int{},
				x:    3,
				want: -1,
			},
			{
				name: "single_element_present",
				arr:  []int{1},
				x:    1,
				want: 0,
			},
			{
				name: "single_element_not_present",
				arr:  []int{2},
				x:    1,
				want: -1,
			},
			{
				name: "two_elements_present_first",
				arr:  []int{1, 3},
				x:    1,
				want: 0,
			},
			{
				name: "two_elements_present_second",
				arr:  []int{1, 3},
				x:    3,
				want: 1,
			},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				got := light.binarySearch(tc.arr, tc.x)
				assert.Equal(t, tc.want, got)
			})
		}
	}
	```
2024/06/06 16:05:10 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/06 16:05:11 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./binarySearch_test.go:75:17: undefined: light.binarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:75:17: undefined: light.binarySearch

DONE 0 tests, 1 error in 0.169s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:05:11 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/06 16:05:33 Model "openrouter/openai/gpt-4-turbo" responded (22247 ms) with:
	```golang
	package light

	import "testing"

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			name  string
			x     int
			y     int
			want  int
		}{
			{
				name: "x less than lower bound",
				x:    5,
				y:    30,
				want: 0,
			},
			{
				name: "x greater than upper bound",
				x:    25,
				y:    10,
				want: 0,
			},
			{
				name: "x within bounds, y not reaching loop condition",
				x:    15,
				y:    10,
				want: 15,
			},
			{
				name: "x within bounds, y adequately exceeds condition",
				x:    15,
				y:    50,
				want: 27, // 15 (i starts incrementing x from 21 to 50. x increments 30 - 20 = 10 times) then x becomes 25 / 2 = 12.5 (as int 12) + 15 = 27
			},
			{
				name: "x within bounds with minimal y",
				x:    15,
				y:    21,
				want: 18, // 15 (x increments only 1 time when i is 21), then x does not need to divide.
			},
			{
				name: "x within bounds with y triggering x increment over boundary",
				x:    19,
				y:    22,
				want: 21, // 19 + 2 (i = 21 and 22), x doesn't get halved as it results at 21
			},
			{
				name: "edge case of x increment leading to halving",
				x:    20,
				y:    30,
				want: 25, // 20 + 10 (increment from 21 to 30) / 2 = 25
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := callLoopConditionsOftenEnough(tt.x, tt.y); got != tt.want {
					t.Errorf("callLoopConditionsOftenEnough() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:05:33 $ go mod tidy
2024/06/06 16:05:33 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x_less_than_lower_bound
=== RUN   TestCallLoopConditionsOftenEnough/x_greater_than_upper_bound
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds,_y_not_reaching_loop_condition
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 22, want 27
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 15, want 18
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 20, want 21
=== RUN   TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 14, want 25
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_less_than_lower_bound (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_greater_than_upper_bound (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_within_bounds,_y_not_reaching_loop_condition (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 22, want 27
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 15, want 18
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 20, want 21
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 14, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 8 tests, 5 failures in 0.325s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:05:33 Executes tests with 4 coverage objects
2024/06/06 16:05:33 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/06 16:05:43 Model "openrouter/openai/gpt-4-turbo" responded (9764 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestCascadingIfElse(t *testing.T) {
		tt := []struct {
			name string
			arg  int
			want int
		}{
			{"Input 1", 1, 2},
			{"Input 3", 3, 4},
			{"Input other", 2, 5},
		}

		for _, tc := range tt {
			t.Run(tc.name, func(t *testing.T) {
				if got := cascadingIfElse(tc.arg); got != tc.want {
					t.Errorf("cascadingIfElse(%d) = %d; want %d", tc.arg, got, tc.want)
				}
			})
		}
	}
	```
2024/06/06 16:05:43 $ go mod tidy
2024/06/06 16:05:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCascadingIfElse
=== RUN   TestCascadingIfElse/Input_1
=== RUN   TestCascadingIfElse/Input_3
=== RUN   TestCascadingIfElse/Input_other
--- PASS: TestCascadingIfElse (0.00s)
    --- PASS: TestCascadingIfElse/Input_1 (0.00s)
    --- PASS: TestCascadingIfElse/Input_3 (0.00s)
    --- PASS: TestCascadingIfElse/Input_other (0.00s)
PASS
coverage: 2.4% of statements
ok  	light	0.005s	coverage: 2.4% of statements

DONE 4 tests in 0.335s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:05:44 Executes tests with 3 coverage objects
2024/06/06 16:05:44 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/06 16:06:02 Model "openrouter/openai/gpt-4-turbo" responded (18356 ms) with:
	```go
	package light

	import "testing"

	func TestComputeStepCount(t *testing.T) {
		testCases := []struct {
			description    string
			start          int
			expectedCount  int
			expectedErr    error
		}{
			{
				description:   "Test with start value 1",
				start:         1,
				expectedCount: 0,
				expectedErr:   nil,
			},
			{
				description:   "Test with start value 6 (valid)",
				start:         6,
				expectedCount: 8,
				expectedErr:   nil,
			},
			{
				description:   "Test with start value 0 (error case)",
				start:         0,
				expectedCount: 0,
				expectedErr:   errors.New("Only positive integers are allowed"),
			},
			{
				description:    "Test with start value -1 (error case)",
				start:          -1,
				expectedCount:  0,
				expectedErr:    errors.New("Only positive integers are allowed"),
			},
		}

		for _, tc := range testCases {
			t.Run(tc.description, func(t *testing.T) {
				count, err := computeStepCount(tc.start)
				if count != tc.expectedCount {
					t.Errorf("Expected count %d, got %d", tc.expectedCount, count)
				}
				if err != nil && tc.expectedErr == nil {
					t.Errorf("Expected no error, got: %v", err)
				}
				if err == nil && tc.expectedErr != nil {
					t.Errorf("Expected an error, got none")
				}
				if err != nil && tc.expectedErr != nil && err.Error() != tc.expectederr.Error() {
					t.Errorf("Expected error message %v, got %v", tc.expectedErr, err)
				}
			})
		}
	}
	```
2024/06/06 16:06:02 $ go mod tidy
2024/06/06 16:06:02 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./collatzCalculator_test.go:28:19: undefined: errors
./collatzCalculator_test.go:34:20: undefined: errors
./collatzCalculator_test.go:50:64: tc.expectederr undefined (type struct{description string; start int; expectedCount int; expectedErr error} has no field or method expectederr)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:28:19: undefined: errors
./collatzCalculator_test.go:34:20: undefined: errors
./collatzCalculator_test.go:50:64: tc.expectederr undefined (type struct{description string; start int; expectedCount int; expectedErr error} has no field or method expectederr)

DONE 0 tests, 3 errors in 0.138s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:06:02 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/06 16:06:14 Model "openrouter/openai/gpt-4-turbo" responded (11687 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestConditionsAnd(t *testing.T) {
		tests := []struct {
			name     string
			x        rune
			y        rune
			expected bool
		}{
			{
				name:     "Case AB",
				x:        'A',
				y:        'B',
				expected: true,
			},
			{
				name:     "Case AA",
				x:        'A',
				y:        'A',
				expected: false,
			},
			{
				name:     "Case BA",
				x:        'B',
				y:        'A',
				expected: false,
			},
			{
				name:     "Case Non-AB",
				x:        'X',
				y:        'Y',
				expected: false,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := conditionsAnd(tt.x, tt.y)
				if result != tt.expected {
					t.Errorf("conditionsAnd(%q, %q) = %v; expected %v", tt.x, tt.y, result, tt.expected)
				}
			})
		}
	}
	```
2024/06/06 16:06:14 $ go mod tidy
2024/06/06 16:06:14 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestConditionsAnd
=== RUN   TestConditionsAnd/Case_AB
=== RUN   TestConditionsAnd/Case_AA
=== RUN   TestConditionsAnd/Case_BA
=== RUN   TestConditionsAnd/Case_Non-AB
--- PASS: TestConditionsAnd (0.00s)
    --- PASS: TestConditionsAnd/Case_AB (0.00s)
    --- PASS: TestConditionsAnd/Case_AA (0.00s)
    --- PASS: TestConditionsAnd/Case_BA (0.00s)
    --- PASS: TestConditionsAnd/Case_Non-AB (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 5 tests in 0.351s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:06:15 Executes tests with 2 coverage objects
2024/06/06 16:06:15 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/06 16:06:31 Model "openrouter/openai/gpt-4-turbo" responded (15977 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			name        string
			sequence    []int
			wantIndices string
		}{
			{
				name:        "Empty sequence",
				sequence:    []int{},
				wantIndices: "",
			},
			{
				name:        "Single element",
				sequence:    []int{1},
				wantIndices: "0;",
			},
			{
				name:        "No equilibrium index",
				sequence:    []int{1, 2, 3},
				wantIndices: "",
			},
			{
				name:        "Simple equilibrium index",
				sequence:    []int{-7, 1, 5, 2, -4, 3, 0},
				wantIndices: "3;6;",
			},
			{
				name:        "Multiple zeros",
				sequence:    []int{0, 0, 0, 0, 0},
				wantIndices: "0;1;2;3;4;",
			},
			{
				name:        "Negative and positive numbers",
				sequence:    []int{-1, 3, -4, 5, 1, -6, 2, 1},
				wantIndices: "1;3;7;",
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if gotIndices := equilibriumIndices(tt.sequence); gotIndices != tt.wantIndices {
					t.Errorf("equilibriumIndices() = %v, want %v", gotIndices, tt.wantIndices)
				}
			})
		}
	}
	```
2024/06/06 16:06:31 $ go mod tidy
2024/06/06 16:06:31 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Empty_sequence
=== RUN   TestEquilibriumIndices/Single_element
=== RUN   TestEquilibriumIndices/No_equilibrium_index
=== RUN   TestEquilibriumIndices/Simple_equilibrium_index
=== RUN   TestEquilibriumIndices/Multiple_zeros
=== RUN   TestEquilibriumIndices/Negative_and_positive_numbers
--- PASS: TestEquilibriumIndices (0.00s)
    --- PASS: TestEquilibriumIndices/Empty_sequence (0.00s)
    --- PASS: TestEquilibriumIndices/Single_element (0.00s)
    --- PASS: TestEquilibriumIndices/No_equilibrium_index (0.00s)
    --- PASS: TestEquilibriumIndices/Simple_equilibrium_index (0.00s)
    --- PASS: TestEquilibriumIndices/Multiple_zeros (0.00s)
    --- PASS: TestEquilibriumIndices/Negative_and_positive_numbers (0.00s)
PASS
coverage: 4.3% of statements
ok  	light	0.004s	coverage: 4.3% of statements

DONE 7 tests in 0.330s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:06:31 Executes tests with 4 coverage objects
2024/06/06 16:06:31 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/06 16:06:39 Model "openrouter/openai/gpt-4-turbo" responded (7729 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestForLoop(t *testing.T) {
		tests := []struct {
			input    int
			expected int
		}{
			{0, 0},
			{1, 0},
			{2, 2},
			{3, 6},
			{10, 90},
		}

		for _, test := range tests {
			result := forLoop(test.input)
			if result != test.expected {
				t.Errorf("forLoop(%d) returned %d, expected %d", test.input, result, test.expected)
			}
		}
	}
	```
2024/06/06 16:06:39 $ go mod tidy
2024/06/06 16:06:39 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestForLoop
--- PASS: TestForLoop (0.00s)
PASS
coverage: 2.8% of statements
ok  	light	0.004s	coverage: 2.8% of statements

DONE 1 tests in 0.321s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:06:39 Executes tests with 3 coverage objects
2024/06/06 16:06:39 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/06 16:07:12 Model "openrouter/openai/gpt-4-turbo" responded (32651 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestJacobiSymbol(t *testing.T) {
		tests := []struct {
			k      uint64
			n      uint64
			result int
			err    string
		}{
			{1, 3, 1, ""},
			{2, 3, -1, ""},
			{2, 15, -1, ""},
			{3, 5, -1, ""},
			{17, 3, 1, ""},
			{k: 2, n: 4, result: 0, err: "Invalid value. k = 2, n = 4"},
			{k: 3, n: 2, result: 0, err: "Invalid value. k = 3, n = 2"},
		}

		for _, test := range tests {
			result, err := jacobiSymbol(test.k, test.n)
			if err != nil && err.Error() != test.err {
				t.Errorf("Expected error '%s', got '%v' for inputs k = %d, n = %d", test.err, err, test.k, test.n)
			} else if err == nil && test.err != "" {
				t.Errorf("Expected error '%s', got nil for inputs k = %d, n = %d", test.err, test.k, test.n)
			}
			if result != test.result {
				t.Errorf("Expected result %d, got %d for inputs k = %d, n = %d", test.result, result, test.k, test.n)
			}
		}
	}

	func TestJacobiSymbolSteps(t *testing.T) {
		tests := []struct {
			k      uint64
			n      uint and find u64
			result int
			err    string
		}{
			{7, 15, -1, ""},
			{5, 9, -1, ""},
		}

		for _, test := range tests {
			result, err := jacobiSymbol(test.k, test.n)
			if err != nil && err.Error() != test.err {
				t.Errorf("Expected error '%s', got '%v' for inputs k = %d, n = %d", test.err, err, test.k, test.n)
			} else if err == nil && test.err != "" {
				t.Errorf("Expected error '%s', got nil for inputs k = %d, n = %d", test.err, test.k, test.n)
			}
			if result != test.result {
				t.Errorf("Expected result %d, got %d for inputs k = %d, n = %d", test.result, result, test.k, test.n)
			}
		}
	}
	```
2024/06/06 16:07:12 $ go mod tidy
2024/06/06 16:07:12 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]
# light
jacobiSymbol_test.go:39:15: expected ';', found and

=== Errors
jacobiSymbol_test.go:39:15: expected ';', found and

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:07:12 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/06 16:07:29 Model "openrouter/openai/gpt-4-turbo" responded (16839 ms) with:
	```golang
	package light

	import (
		"testing"
		"reflect"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		tests := []struct {
			name  string
			limit int
			want  []int
		}{
			{
				name:  "Test Limit 0",
				limit: 0,
				want:  []int{0},
			},
			{
				name:  "Test Limit 1",
				limit: 1,
				want:  []int{0, 1},
			},
			{
				name:  "Test Limit 5",
				limit: 5,
				want:  []int{0, 1, 3, 4, 7, 9},
			},
			{
				name:  "Test Limit 10",
				limit: 10,
				want:  []int{0, 1, 3, 4, 7, 9, 10, 13, 15, 19, 21},
			},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				if got := initialiseKlarnerRadoSequence(tc.limit); !reflect.DeepEqual(got, tc.want) {
					t.Errorf("initialiseKlarnerRadoSequence(%d) = %v, want %v", tc.limit, got, tc.want)
				}
			})
		}
	}
	```
2024/06/06 16:07:29 $ go mod tidy
2024/06/06 16:07:29 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/Test_Limit_0
=== RUN   TestInitialiseKlarnerRadoSequence/Test_Limit_1
=== RUN   TestInitialiseKlarnerRadoSequence/Test_Limit_5
=== RUN   TestInitialiseKlarnerRadoSequence/Test_Limit_10
--- PASS: TestInitialiseKlarnerRadoSequence (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/Test_Limit_0 (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/Test_Limit_1 (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/Test_Limit_5 (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/Test_Limit_10 (0.00s)
PASS
coverage: 6.2% of statements
ok  	light	0.004s	coverage: 6.2% of statements

DONE 5 tests in 0.323s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:07:29 Executes tests with 3 coverage objects
2024/06/06 16:07:29 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/06 16:07:53 Model "openrouter/openai/gpt-4-turbo" responded (23924 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestMaximumValue(t *testing.T) {
		tests := []struct {
			name            string
			maximumWeight   int
			items           []Item
			expectedValue   int
		}{
			{
				name: "Test with no items",
				maximumWeight: 50,
				items: []Item{},
				expectedValue: 0,
			},
			{
				name: "Test with one item fitting exactly",
				maximumWeight: 50,
				items: []Item{{weight: 50, value: 100}},
				expectedValue: 100,
			},
			{
				name: "Test with one item too heavy",
				maximumWeight: 50,
				items: []Item{{weight: 60, value: 100}},
				expectedValue: 0,
			},
			{
				name: "Test with multiple items",
				maximumWeight: 50,
				items: []Item{{weight: 30, value: 120}, {weight: 20, value: 100}},
				expectedValue: 220,
			},
			{
				name: "Test with multiple items only one fits",
				maximumWeight: 50,
				items: []Item{{weight: 30, value: 120}, {weight: 40, value: 200}},
				expectedValue: 200,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if val := maximumValue(tt.maximumWeight, tt.items); val != tt.expectedValue {
					t.Errorf("maximumValue(%d, %v) = %d, want %d", tt.maximumWeight, tt.items, val, tt.expectedValue)
				}
			})
		}
	}
	```
2024/06/06 16:07:53 $ go mod tidy
2024/06/06 16:07:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMaximumValue
=== RUN   TestMaximumValue/Test_with_no_items
=== RUN   TestMaximumValue/Test_with_one_item_fitting_exactly
=== RUN   TestMaximumValue/Test_with_one_item_too_heavy
=== RUN   TestMaximumValue/Test_with_multiple_items
=== RUN   TestMaximumValue/Test_with_multiple_items_only_one_fits
--- PASS: TestMaximumValue (0.00s)
    --- PASS: TestMaximumValue/Test_with_no_items (0.00s)
    --- PASS: TestMaximumValue/Test_with_one_item_fitting_exactly (0.00s)
    --- PASS: TestMaximumValue/Test_with_one_item_too_heavy (0.00s)
    --- PASS: TestMaximumValue/Test_with_multiple_items (0.00s)
    --- PASS: TestMaximumValue/Test_with_multiple_items_only_one_fits (0.00s)
PASS
coverage: 7.1% of statements
ok  	light	0.003s	coverage: 7.1% of statements

DONE 6 tests in 0.325s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:07:53 Executes tests with 5 coverage objects
2024/06/06 16:07:53 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/06 16:08:04 Model "openrouter/openai/gpt-4-turbo" responded (10876 ms) with:
	```golang
	package light

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestLargestProperDivisor(t *testing.T) {
		tests := []struct {
			input    int
			expected int
			err      error
		}{
			{0, 0, fmt.Errorf("Argument must be >= 1: 0")},
			{1, 1, nil},
			{2, 1, nil},
			{3, 1, nil},
			{4, 2, nil},
			{5, 1, nil},
			{7, 1, nil},
			{9, 3, nil},
			{10, 5, nil},
			{12, 6, nil},
		}

		for _, test := range tests {
			result, err := largestProperDivisor(test.input)
			if test.err != nil {
				assert.EqualError(t, err, test.err.Error())
			} else {
				assert.NoError(t, err)
				assert.Equal(t, test.expected, result)
			}
		}
	}
	```
2024/06/06 16:08:04 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/06 16:08:05 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./largestProperDivisor_test.go:15:10: undefined: fmt
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:15:10: undefined: fmt

DONE 0 tests, 1 error in 0.201s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:08:05 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/06 16:08:20 Model "openrouter/openai/gpt-4-turbo" responded (15307 ms) with:
	```golang
	package light

	import (
		"reflect"
		"testing"
	)

	func TestMagicSquareOdd(t *testing.T) {
		testCases := []struct {
			name    string
			base    int
			want    [][]int
			wantErr bool
		}{
			{
				name: "Valid base 3",
				base: 3,
				want: [][]int{
					{8, 1, 6},
					{3, 5, 7},
					{4, 9, 2},
				},
				wantErr: false,
			},
			{
				name:    "Invalid base 2",
				base:    2,
				wantErr: true,
			},
			{
				name:    "Invalid base 0",
				base:    0,
				wantErr: true,
			},
			{
				name:    "Invalid base -1",
				base:    -1,
				wantErr: true,
			},
		}

		for _, tc := range testFuncs {
			t.Run(tc.name, func(t *testing.T) {
				got, err := magicSquareOdd(tc.base)
				if (err != nil) != tc.wantErr {
					t.Errorf("magicSquareOdd(%v) error = %v, wantErr %v", tc.base, err, tc.wantErr)
					return
				}
				if !reflect.DeepEqual(got, tc.want) {
					t.Errorf("magicSquareOdd(%v) = %v, want %v", tc.base, got, tc.want)
				}
			})
		}
	}
	```
2024/06/06 16:08:20 $ go mod tidy
2024/06/06 16:08:20 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./magicSquareOdd_test.go:9:2: testCases declared and not used
./magicSquareOdd_test.go:42:21: undefined: testFuncs
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:9:2: testCases declared and not used
./magicSquareOdd_test.go:42:21: undefined: testFuncs

DONE 0 tests, 2 errors in 0.162s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:08:20 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/06 16:08:39 Attempt 1/3: EOF
2024/06/06 16:08:41 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/06 16:09:00 Model "openrouter/openai/gpt-4-turbo" responded (19282 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestMatchBytes(t *testing.Testing) {
		tests := []struct {
			s1      []byte
			s2      []abs
			expect bool
		}{
			{[]byte("hello"), []byte("hello"), true},
			{[]byte("hello"), []byte("HELLO"), true},
			{[]byte("Hello"), []byte("hello"), true},
			{[]byte(""), []byte(""), true},
			{[]byte("hello"), []byte("world"),false},
			{[]byte("hello"), []byte("HELLOworld"), false},
			{[]byte("ABC"), []byte("abc"), true},
			{[]byte("aBcD"), []byte("abCD"), true},
			{[]byte("123"), []byte("123"), true},
			{[]byte("123"), []byte("abc"), false},
			{[]byte("Hi There!"), []byte("hi there!"), true},
		}

		for _, tt := range tests {
			t.Run(string(tt.s1)+"_"+string(tt.s2), func(t *testing.T) {
				result := matchBytes(tt.s1, tt.s2)
				if result != tt.expect {
					t.Errorf("matchBytes(%q, %q) = %v; want %v", tt.s1, tt.s2, result, tt.expect)
				}
			})
		}
	}
	```
2024/06/06 16:09:00 $ go mod tidy
2024/06/06 16:09:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]
# light
/tmp/eval-dev-quality744030985/light/matchBytes_test.go:7:1: wrong signature for TestMatchBytes, must be: func TestMatchBytes(t *testing.T)

=== Errors
/tmp/eval-dev-quality744030985/light/matchBytes_test.go:7:1: wrong signature for TestMatchBytes, must be: func TestMatchBytes(t *testing.T)

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:09:00 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/06 16:09:23 Model "openrouter/openai/gpt-4-turbo" responded (23047 ms) with:
	```golang
	package light

	import (
		"errors"
		"reflect"
		"testing"
	)

	func TestPascalsTriangle(t *testing.T) {
		tests := []struct {
			name          string
			rows          int
			expected      [][]int
			expectedError error
		}{
			{
				name:          "Negative rows",
				rows:          -1,
				expected:      nil,
				expectedError: errors.New("Rows can't be negative!"),
			},
			{
				name:          "Zero rows",
				rows:          0,
				expected:      [][]int{},
				expectedError: nil,
			},
			{
				name: "One row",
				rows: 1,
				expected: [][]int{
					{1},
				},
				expectedError: nil,
			},
			{
				name: "Four rows",
				rows: 4,
				expected: [][]int{
					{1},
					{1, 1},
					{1, 2, 1},
					{1, 3, 3, 1},
				},
				expectedError: nil,
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				result, err := pascalsTriangle(test.rows)
				if !reflect.DeepEqual(err, test.expectedError) {
					t.Errorf("Expected error %v, got %v", test.expectedError, err)
				}
				if !reflect.DeepEqual(result, test.expected) {
					t.Errorf("Expected result %v, got %v", test.expected, result)
				}
			})
		}
	}
	```
2024/06/06 16:09:23 $ go mod tidy
2024/06/06 16:09:23 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestPascalsTriangle
=== RUN   TestPascalsTriangle/Negative_rows
=== RUN   TestPascalsTriangle/Zero_rows
=== RUN   TestPascalsTriangle/One_row
=== RUN   TestPascalsTriangle/Four_rows
--- PASS: TestPascalsTriangle (0.00s)
    --- PASS: TestPascalsTriangle/Negative_rows (0.00s)
    --- PASS: TestPascalsTriangle/Zero_rows (0.00s)
    --- PASS: TestPascalsTriangle/One_row (0.00s)
    --- PASS: TestPascalsTriangle/Four_rows (0.00s)
PASS
coverage: 4.7% of statements
ok  	light	0.004s	coverage: 4.7% of statements

DONE 5 tests in 0.338s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:09:24 Executes tests with 4 coverage objects
2024/06/06 16:09:24 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/06 16:09:45 Model "openrouter/openai/gpt-4-turbo" responded (20805 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			name          string
			input         string
			expected      string
			expectedError string
		}{
			{"Empty input", "", "", ""},
			{"Only numbers", "1234567890", "1234567890", ""},
			{"Numbers with spaces", "123 456 7890", "1234567890", ""},
			{"Numbers with dots", "123.456.7890", "1234567890", ""},
			{"Numbers with parentheses", "(123) 456-7890", "1234567890", ""},
			{"Numbers with hyphens", "123-456-7890", "1234567890", ""},
			{"Numbers with pluses", "+1234567890", "1234567890", ""},
			{"Invalid character dash", "123-456--7890", "", "punctuations not permitted"},
			{"Invalid character exclamation", "123!4567890", "", "punctuations not permitted"},
			{"Invalid character at", "123@4567890", "", "punctuations not permitted"},
			{"Invalid character colon", "123:4567890", "", "punctuations not permitted"},
			{"Letters included", "abc123", "", "letters not permitted"},
			{"Only letters", "abcdef", "", "letters not permitted"},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result, err := extractDigits(tt.input)
				
				if result != tt.expected {
					t.Errorf("Expected result %s, got %s", tt.expected, result)
				}

				if err != nil && err.Error() != tt.expectedError {
					t.Errorf("Expected error %s, got %s", tt.expectedError, err.Error())
				}

				if err == nil && tt.expectedError != "" {
					t.Errorf("Expected error %s but got nil", tt.expectedError)
				}
			})
		}
	}
	```
2024/06/06 16:09:45 $ go mod tidy
2024/06/06 16:09:45 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestExtractDigits
=== RUN   TestExtractDigits/Empty_input
=== RUN   TestExtractDigits/Only_numbers
=== RUN   TestExtractDigits/Numbers_with_spaces
=== RUN   TestExtractDigits/Numbers_with_dots
=== RUN   TestExtractDigits/Numbers_with_parentheses
=== RUN   TestExtractDigits/Numbers_with_hyphens
=== RUN   TestExtractDigits/Numbers_with_pluses
=== RUN   TestExtractDigits/Invalid_character_dash
    phoneNumber_test.go:34: Expected result , got 1234567890
    phoneNumber_test.go:42: Expected error punctuations not permitted but got nil
=== RUN   TestExtractDigits/Invalid_character_exclamation
=== RUN   TestExtractDigits/Invalid_character_at
=== RUN   TestExtractDigits/Invalid_character_colon
=== RUN   TestExtractDigits/Letters_included
=== RUN   TestExtractDigits/Only_letters
--- FAIL: TestExtractDigits (0.00s)
    --- PASS: TestExtractDigits/Empty_input (0.00s)
    --- PASS: TestExtractDigits/Only_numbers (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_spaces (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_dots (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_parentheses (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_hyphens (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_pluses (0.00s)
    --- FAIL: TestExtractDigits/Invalid_character_dash (0.00s)
    --- PASS: TestExtractDigits/Invalid_character_exclamation (0.00s)
    --- PASS: TestExtractDigits/Invalid_character_at (0.00s)
    --- PASS: TestExtractDigits/Invalid_character_colon (0.00s)
    --- PASS: TestExtractDigits/Letters_included (0.00s)
    --- PASS: TestExtractDigits/Only_letters (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestExtractDigits/Invalid_character_dash (0.00s)
    phoneNumber_test.go:34: Expected result , got 1234567890
    phoneNumber_test.go:42: Expected error punctuations not permitted but got nil
    --- FAIL: TestExtractDigits/Invalid_character_dash (0.00s)

=== FAIL: . TestExtractDigits (0.00s)

DONE 14 tests, 2 failures in 0.351s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:09:45 Executes tests with 5 coverage objects
2024/06/06 16:09:45 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/06 16:09:53 Model "openrouter/openai/gpt-4-turbo" responded (7530 ms) with:
	```golang
	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		tests := []struct {
			name string
			input int
			want int
		}{
			{
				name: "Test with i equals 1",
				input: 1,
				want: 0,
			},
			{
				name: "Test with i not equal 1",
				input: 2,
				want: 1,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := simpleIfElse(tt.input); got != tt.want {
					t.Errorf("simpleIfElse(%d) = %d, want %d", tt.input, got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:09:53 $ go mod tidy
2024/06/06 16:09:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleIfElse
=== RUN   TestSimpleIfElse/Test_with_i_equals_1
=== RUN   TestSimpleIfElse/Test_with_i_not_equal_1
--- PASS: TestSimpleIfElse (0.00s)
    --- PASS: TestSimpleIfElse/Test_with_i_equals_1 (0.00s)
    --- PASS: TestSimpleIfElse/Test_with_i_not_equal_1 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 3 tests in 0.334s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:09:54 Executes tests with 2 coverage objects
2024/06/06 16:09:54 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/06 16:10:03 Model "openrouter/openai/gpt-4-turbo" responded (9754 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			name string
			arg  int
			want int
		}{
			{
				name: "Test case for input 1",
				arg:  1,
				want: 0,
			},
			{
				name: "Test case for default case",
				arg:  2,
				want: 1,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := simpleSwitchWithReturn(tt.arg); got != tt.want {
					t.Errorf("simpleSwitchWithReturn(%d) = %d, want %d", tt.arg, got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:10:03 $ go mod tidy
2024/06/06 16:10:03 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
=== RUN   TestSimpleSwitchWithReturn/Test_case_for_input_1
=== RUN   TestSimpleSwitchWithReturn/Test_case_for_default_case
--- PASS: TestSimpleSwitchWithReturn (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/Test_case_for_input_1 (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/Test_case_for_default_case (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 3 tests in 0.313s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:10:04 Executes tests with 3 coverage objects
2024/06/06 16:10:04 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/06 16:10:18 Model "openrouter/openai/gpt-4-turbo" responded (14320 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestIsSorted(t *testing.T) {
		tests := []struct {
			name string
			arr  []int
			want bool
		}{
			{name: "Empty array", arr: []int{}, want: true},
			{name: "Single element", arr: []int{1}, want: true},
			{name: "Sorted array", arr: []int{1, 2, 3, 4, 5}, want: true},
			{name: "Unsorted array", arr: []int{5, 3, 2, 4, 1}, want: false},
			{name: "Reverse sorted array", arr: []int{5, 4, 3, 2, 1}, want: false},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := isSorted(tt.arr); got != tt.want {
					t.Errorf("isSorted(%v) = %v, want %v", tt.arr, got, tt.want)
				}
			})
		}
	}

	```
2024/06/06 16:10:18 $ go mod tidy
2024/06/06 16:10:18 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestIsSorted
=== RUN   TestIsSorted/Empty_array
    sort_test.go:23: isSorted([]) = false, want true
=== RUN   TestIsSorted/Single_element
=== RUN   TestIsSorted/Sorted_array
=== RUN   TestIsSorted/Unsorted_array
=== RUN   TestIsSorted/Reverse_sorted_array
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/Empty_array (0.00s)
    --- PASS: TestIsSorted/Single_element (0.00s)
    --- PASS: TestIsSorted/Sorted_array (0.00s)
    --- PASS: TestIsSorted/Unsorted_array (0.00s)
    --- PASS: TestIsSorted/Reverse_sorted_array (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted/Empty_array (0.00s)
    sort_test.go:23: isSorted([]) = false, want true
    --- FAIL: TestIsSorted/Empty_array (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 6 tests, 2 failures in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:10:19 Executes tests with 2 coverage objects
2024/06/06 16:10:19 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/06 16:10:29 Model "openrouter/openai/gpt-4-turbo" responded (9998 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestTypeArrayAccessWith123AtStart(t *testing.T) {
		x := []int{123, 456}
		result := typeArrayAccess(x)
		if result != 123 {
			t.Errorf("Expected 123, got %d", result)
		}
	}

	func TestTypeArrayAccessWithout123AtStart(t *testing.T) {
		x := []int{456, 123}
		result := typeArrayAccess(x)
		if result != 3 {
			t.Errorf("Expected 3, got %d", result)
		}
	}
	```
2024/06/06 16:10:29 $ go mod tidy
2024/06/06 16:10:29 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayAccessWith123AtStart
--- PASS: TestTypeArrayAccessWith123AtStart (0.00s)
=== RUN   TestTypeArrayAccessWithout123AtStart
--- PASS: TestTypeArrayAccessWithout123AtStart (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 2 tests in 0.378s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:10:30 Executes tests with 2 coverage objects
2024/06/06 16:10:30 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/06 16:10:42 Model "openrouter/openai/gpt-4-turbo" responded (12086 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			name   string
			input  []int
			expect int
		}{
			{
				name:   "Both conditions false",
				input:  []int{1, 7},
				expect: 0,
			},
			{
				name:   "First condition true",
				input:  []int{0, 7},
				expect: 1,
			},
			{
				name:   "Second condition true",
				input:  []int{1, 8},
				expect: 1,
			},
			{
				name:   "Both conditions true",
				input:  []int{0, 8},
				expect: 2,
			},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				result := typeArrayConsecutiveAccess(tc.input)
				if result != tc.expect {
					t.Errorf("Expected %d, got %d for input %v", tc.expect, result, tc.input)
				}
			})
		}
	}
	```
2024/06/06 16:10:42 $ go mod tidy
2024/06/06 16:10:42 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/Both_conditions_false
=== RUN   TestTypeArrayConsecutiveAccess/First_condition_true
=== RUN   TestTypeArrayConsecutiveAccess/Second_condition_true
=== RUN   TestTypeArrayConsecutiveAccess/Both_conditions_true
--- PASS: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Both_conditions_false (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/First_condition_true (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Second_condition_true (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Both_conditions_true (0.00s)
PASS
coverage: 2.8% of statements
ok  	light	0.004s	coverage: 2.8% of statements

DONE 5 tests in 0.408s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:10:42 Executes tests with 3 coverage objects
2024/06/06 16:10:42 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/06 16:11:00 Model "openrouter/openai/gpt-4-turbo" responded (17706 ms) with:
	```golang
	package light

	import "testing"

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name string
			arr  [][]int
			want int
		}{
			{
				name: "returns 2 for 2x2 array",
				arr:  [][]int{{1, 2}, {3, 4}},
				want: 2,
			},
			{
				name: "returns 1 for 2x1 array",
				arr:  [][]int{{1}, {2}},
				want: 1,
			},
			{
				name: "returns 1 for uneven elements in array",
				arr:  [][]int{{1, 2}, {3}},
				want: 1,
			},
			{
				name: "returns 0 for empty array",
				arr:  [][]int{},
				want: 0,
			},
			{
				name: "returns 0 for single row array",
				arr:  [][]ext{{1, 2}},
				want: 0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayMultidimensionalArrayLength(tt.arr); got != tt.want {
					t.Errorf("typeArrayMultidimensionalArrayLength(%v) = %v, want %v", tt.arr, got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:11:00 $ go mod tidy
2024/06/06 16:11:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./typeArrayMultidimensionalArrayLength_test.go:33:14: undefined: ext
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayMultidimensionalArrayLength_test.go:33:14: undefined: ext

DONE 0 tests, 1 error in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:11:00 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/06 16:11:22 Model "openrouter/openai/gpt-4-turbo" responded (21793 ms) with:
	```golang
	package light_test

	import (
		"testing"
		"light"
	)

	func TestValidDate(t *testing.T) {
		testCases := []struct {
			day, month, year int
			expected         bool
		}{
			{1, 1, 1583, true},                  
			{31, 12, 1600, true},                
			{29, 2, 1600, true},                 
			{29, 2, 2000, true},                 
			{29, 2, 1996, true},                 
			{29, 2, 1900, false},                
			{30, 2, 2000, false},                
			{32, 1, 1999, false},                
			{31, 4, 2001, false},                
			{0, 10, 2001, false},                
			{28, 2, 2001, true},                 
			{28, 2, 1500, false},                
			{15, 13, 2002, false},               
			{15, 0, 2003, false},                
			{1, 1, 1582, false},                 
			{1, 1, 0, false},                    
		}

		for _, tc := range teststarted {
			result := light.validDate(tc.day, tc.month, tc.year)
			if result != tc.expected {
				t.Errorf("validDate(%d, %d, %d) = %v; expected %v", tc.day, tc.month, tc.year, result, tc.expected)
			}
		}
	}
	```
2024/06/06 16:11:22 $ go mod tidy
2024/06/06 16:11:22 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./validateDate_test.go:9:2: testCases declared and not used
./validateDate_test.go:31:21: undefined: teststarted
./validateDate_test.go:32:19: undefined: light.validDate
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:9:2: testCases declared and not used
./validateDate_test.go:31:21: undefined: teststarted
./validateDate_test.go:32:19: undefined: light.validDate

DONE 0 tests, 3 errors in 0.150s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:11:22 Evaluated model "openrouter/openai/gpt-4-turbo" using language "golang" and repository "golang/light": encountered 12 problems: [exit status 1
=== RUN   TestHasBalancedBrackets
=== RUN   TestHasBalancedBrackets/Empty_String
=== RUN   TestHasBalancedBrackets/Single_Opening
=== RUN   TestHasBalancedBrackets/Single_Closing
=== RUN   TestHasBalancedBrackets/Balanced_Brackets
=== RUN   TestHasBalancedBrackets/Nested_Balanced_Brackets
=== RUN   TestHasBalancedBrackets/Unbalanced_Open_Brackets
=== RUN   TestHasBalancedBrackets/Unbalanced_Close_Brackets
=== RUN   TestHasBalancedBrackets/Mixed_Unbalanced
    balancedBrackets_test.go:31: Expected false, got true for input []][[]
=== RUN   TestHasBalancedBrackets/Invalid_Characters
=== RUN   TestHasBalancedBrackets/Multiple_Invalid_Characters
=== RUN   TestHasBalancedBrackets/Closing_before_Opening
    balancedBrackets_test.go:31: Expected false, got true for input ][
=== RUN   TestHasBalancedBrackets/Multiple_Nested
--- FAIL: TestHasBalancedBrackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Empty_String (0.00s)
    --- PASS: TestHasBalancedBrackets/Single_Opening (0.00s)
    --- PASS: TestHasBalancedBrackets/Single_Closing (0.00s)
    --- PASS: TestHasBalancedBrackets/Balanced_Brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Nested_Balanced_Brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Unbalanced_Open_Brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Unbalanced_Close_Brackets (0.00s)
    --- FAIL: TestHasBalancedBrackets/Mixed_Unbalanced (0.00s)
    --- PASS: TestHasBalancedBrackets/Invalid_Characters (0.00s)
    --- PASS: TestHasBalancedBrackets/Multiple_Invalid_Characters (0.00s)
    --- FAIL: TestHasBalancedBrackets/Closing_before_Opening (0.00s)
    --- PASS: TestHasBalancedBrackets/Multiple_Nested (0.00s)
FAIL
coverage: 4.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestHasBalancedBrackets/Mixed_Unbalanced (0.00s)
    balancedBrackets_test.go:31: Expected false, got true for input []][[]
    --- FAIL: TestHasBalancedBrackets/Mixed_Unbalanced (0.00s)

=== FAIL: . TestHasBalancedBrackets/Closing_before_Opening (0.00s)
    balancedBrackets_test.go:31: Expected false, got true for input ][
    --- FAIL: TestHasBalancedBrackets/Closing_before_Opening (0.00s)

=== FAIL: . TestHasBalancedBrackets (0.00s)

DONE 13 tests, 3 failures in 0.319s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestHasBalancedBrackets
=== RUN   TestHasBalancedBrackets/Empty_String
=== RUN   TestHasBalancedBrackets/Single_Opening
=== RUN   TestHasBalancedBrackets/Single_Closing
=== RUN   TestHasBalancedBrackets/Balanced_Brackets
=== RUN   TestHasBalancedBrackets/Nested_Balanced_Brackets
=== RUN   TestHasBalancedBrackets/Unbalanced_Open_Brackets
=== RUN   TestHasBalancedBrackets/Unbalanced_Close_Brackets
=== RUN   TestHasBalancedBrackets/Mixed_Unbalanced
    balancedBrackets_test.go:31: Expected false, got true for input []][[]
=== RUN   TestHasBalancedBrackets/Invalid_Characters
=== RUN   TestHasBalancedBrackets/Multiple_Invalid_Characters
=== RUN   TestHasBalancedBrackets/Closing_before_Opening
    balancedBrackets_test.go:31: Expected false, got true for input ][
=== RUN   TestHasBalancedBrackets/Multiple_Nested
--- FAIL: TestHasBalancedBrackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Empty_String (0.00s)
    --- PASS: TestHasBalancedBrackets/Single_Opening (0.00s)
    --- PASS: TestHasBalancedBrackets/Single_Closing (0.00s)
    --- PASS: TestHasBalancedBrackets/Balanced_Brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Nested_Balanced_Brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Unbalanced_Open_Brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Unbalanced_Close_Brackets (0.00s)
    --- FAIL: TestHasBalancedBrackets/Mixed_Unbalanced (0.00s)
    --- PASS: TestHasBalancedBrackets/Invalid_Characters (0.00s)
    --- PASS: TestHasBalancedBrackets/Multiple_Invalid_Characters (0.00s)
    --- FAIL: TestHasBalancedBrackets/Closing_before_Opening (0.00s)
    --- PASS: TestHasBalancedBrackets/Multiple_Nested (0.00s)
FAIL
coverage: 4.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestHasBalancedBrackets/Mixed_Unbalanced (0.00s)
    balancedBrackets_test.go:31: Expected false, got true for input []][[]
    --- FAIL: TestHasBalancedBrackets/Mixed_Unbalanced (0.00s)

=== FAIL: . TestHasBalancedBrackets/Closing_before_Opening (0.00s)
    balancedBrackets_test.go:31: Expected false, got true for input ][
    --- FAIL: TestHasBalancedBrackets/Closing_before_Opening (0.00s)

=== FAIL: . TestHasBalancedBrackets (0.00s)

DONE 13 tests, 3 failures in 0.319s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light_test [light.test]
./binarySearch_test.go:75:17: undefined: light.binarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:75:17: undefined: light.binarySearch

DONE 0 tests, 1 error in 0.169s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./binarySearch_test.go:75:17: undefined: light.binarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:75:17: undefined: light.binarySearch

DONE 0 tests, 1 error in 0.169s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x_less_than_lower_bound
=== RUN   TestCallLoopConditionsOftenEnough/x_greater_than_upper_bound
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds,_y_not_reaching_loop_condition
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 22, want 27
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 15, want 18
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 20, want 21
=== RUN   TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 14, want 25
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_less_than_lower_bound (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_greater_than_upper_bound (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_within_bounds,_y_not_reaching_loop_condition (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 22, want 27
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 15, want 18
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 20, want 21
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 14, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 8 tests, 5 failures in 0.325s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x_less_than_lower_bound
=== RUN   TestCallLoopConditionsOftenEnough/x_greater_than_upper_bound
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds,_y_not_reaching_loop_condition
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 22, want 27
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 15, want 18
=== RUN   TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 20, want 21
=== RUN   TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 14, want 25
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_less_than_lower_bound (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_greater_than_upper_bound (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_within_bounds,_y_not_reaching_loop_condition (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 22, want 27
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds,_y_adequately_exceeds_condition (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 15, want 18
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_minimal_y (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 20, want 21
    --- FAIL: TestCallLoopConditionsOftenEnough/x_within_bounds_with_y_triggering_x_increment_over_boundary (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving (0.00s)
    callLoopConditionsOftenEnough_test.go:59: callLoopConditionsOftenEnough() = 14, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/edge_case_of_x_increment_leading_to_halving (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 8 tests, 5 failures in 0.325s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./collatzCalculator_test.go:28:19: undefined: errors
./collatzCalculator_test.go:34:20: undefined: errors
./collatzCalculator_test.go:50:64: tc.expectederr undefined (type struct{description string; start int; expectedCount int; expectedErr error} has no field or method expectederr)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:28:19: undefined: errors
./collatzCalculator_test.go:34:20: undefined: errors
./collatzCalculator_test.go:50:64: tc.expectederr undefined (type struct{description string; start int; expectedCount int; expectedErr error} has no field or method expectederr)

DONE 0 tests, 3 errors in 0.138s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./collatzCalculator_test.go:28:19: undefined: errors
./collatzCalculator_test.go:34:20: undefined: errors
./collatzCalculator_test.go:50:64: tc.expectederr undefined (type struct{description string; start int; expectedCount int; expectedErr error} has no field or method expectederr)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:28:19: undefined: errors
./collatzCalculator_test.go:34:20: undefined: errors
./collatzCalculator_test.go:50:64: tc.expectederr undefined (type struct{description string; start int; expectedCount int; expectedErr error} has no field or method expectederr)

DONE 0 tests, 3 errors in 0.138s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

collatzCalculator.go exit status 1
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]
# light
jacobiSymbol_test.go:39:15: expected ';', found and

=== Errors
jacobiSymbol_test.go:39:15: expected ';', found and

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]
# light
jacobiSymbol_test.go:39:15: expected ';', found and

=== Errors
jacobiSymbol_test.go:39:15: expected ';', found and

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

jacobiSymbol.go exit status 1
# light [light.test]
./largestProperDivisor_test.go:15:10: undefined: fmt
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:15:10: undefined: fmt

DONE 0 tests, 1 error in 0.201s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./largestProperDivisor_test.go:15:10: undefined: fmt
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:15:10: undefined: fmt

DONE 0 tests, 1 error in 0.201s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

largestProperDivisor.go exit status 1
# light [light.test]
./magicSquareOdd_test.go:9:2: testCases declared and not used
./magicSquareOdd_test.go:42:21: undefined: testFuncs
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:9:2: testCases declared and not used
./magicSquareOdd_test.go:42:21: undefined: testFuncs

DONE 0 tests, 2 errors in 0.162s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./magicSquareOdd_test.go:9:2: testCases declared and not used
./magicSquareOdd_test.go:42:21: undefined: testFuncs
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:9:2: testCases declared and not used
./magicSquareOdd_test.go:42:21: undefined: testFuncs

DONE 0 tests, 2 errors in 0.162s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

magicSquareOdd.go exit status 1
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]
# light
/tmp/eval-dev-quality744030985/light/matchBytes_test.go:7:1: wrong signature for TestMatchBytes, must be: func TestMatchBytes(t *testing.T)

=== Errors
/tmp/eval-dev-quality744030985/light/matchBytes_test.go:7:1: wrong signature for TestMatchBytes, must be: func TestMatchBytes(t *testing.T)

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]
# light
/tmp/eval-dev-quality744030985/light/matchBytes_test.go:7:1: wrong signature for TestMatchBytes, must be: func TestMatchBytes(t *testing.T)

=== Errors
/tmp/eval-dev-quality744030985/light/matchBytes_test.go:7:1: wrong signature for TestMatchBytes, must be: func TestMatchBytes(t *testing.T)

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

matchBytes.go exit status 1
=== RUN   TestExtractDigits
=== RUN   TestExtractDigits/Empty_input
=== RUN   TestExtractDigits/Only_numbers
=== RUN   TestExtractDigits/Numbers_with_spaces
=== RUN   TestExtractDigits/Numbers_with_dots
=== RUN   TestExtractDigits/Numbers_with_parentheses
=== RUN   TestExtractDigits/Numbers_with_hyphens
=== RUN   TestExtractDigits/Numbers_with_pluses
=== RUN   TestExtractDigits/Invalid_character_dash
    phoneNumber_test.go:34: Expected result , got 1234567890
    phoneNumber_test.go:42: Expected error punctuations not permitted but got nil
=== RUN   TestExtractDigits/Invalid_character_exclamation
=== RUN   TestExtractDigits/Invalid_character_at
=== RUN   TestExtractDigits/Invalid_character_colon
=== RUN   TestExtractDigits/Letters_included
=== RUN   TestExtractDigits/Only_letters
--- FAIL: TestExtractDigits (0.00s)
    --- PASS: TestExtractDigits/Empty_input (0.00s)
    --- PASS: TestExtractDigits/Only_numbers (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_spaces (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_dots (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_parentheses (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_hyphens (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_pluses (0.00s)
    --- FAIL: TestExtractDigits/Invalid_character_dash (0.00s)
    --- PASS: TestExtractDigits/Invalid_character_exclamation (0.00s)
    --- PASS: TestExtractDigits/Invalid_character_at (0.00s)
    --- PASS: TestExtractDigits/Invalid_character_colon (0.00s)
    --- PASS: TestExtractDigits/Letters_included (0.00s)
    --- PASS: TestExtractDigits/Only_letters (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestExtractDigits/Invalid_character_dash (0.00s)
    phoneNumber_test.go:34: Expected result , got 1234567890
    phoneNumber_test.go:42: Expected error punctuations not permitted but got nil
    --- FAIL: TestExtractDigits/Invalid_character_dash (0.00s)

=== FAIL: . TestExtractDigits (0.00s)

DONE 14 tests, 2 failures in 0.351s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestExtractDigits
=== RUN   TestExtractDigits/Empty_input
=== RUN   TestExtractDigits/Only_numbers
=== RUN   TestExtractDigits/Numbers_with_spaces
=== RUN   TestExtractDigits/Numbers_with_dots
=== RUN   TestExtractDigits/Numbers_with_parentheses
=== RUN   TestExtractDigits/Numbers_with_hyphens
=== RUN   TestExtractDigits/Numbers_with_pluses
=== RUN   TestExtractDigits/Invalid_character_dash
    phoneNumber_test.go:34: Expected result , got 1234567890
    phoneNumber_test.go:42: Expected error punctuations not permitted but got nil
=== RUN   TestExtractDigits/Invalid_character_exclamation
=== RUN   TestExtractDigits/Invalid_character_at
=== RUN   TestExtractDigits/Invalid_character_colon
=== RUN   TestExtractDigits/Letters_included
=== RUN   TestExtractDigits/Only_letters
--- FAIL: TestExtractDigits (0.00s)
    --- PASS: TestExtractDigits/Empty_input (0.00s)
    --- PASS: TestExtractDigits/Only_numbers (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_spaces (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_dots (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_parentheses (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_hyphens (0.00s)
    --- PASS: TestExtractDigits/Numbers_with_pluses (0.00s)
    --- FAIL: TestExtractDigits/Invalid_character_dash (0.00s)
    --- PASS: TestExtractDigits/Invalid_character_exclamation (0.00s)
    --- PASS: TestExtractDigits/Invalid_character_at (0.00s)
    --- PASS: TestExtractDigits/Invalid_character_colon (0.00s)
    --- PASS: TestExtractDigits/Letters_included (0.00s)
    --- PASS: TestExtractDigits/Only_letters (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestExtractDigits/Invalid_character_dash (0.00s)
    phoneNumber_test.go:34: Expected result , got 1234567890
    phoneNumber_test.go:42: Expected error punctuations not permitted but got nil
    --- FAIL: TestExtractDigits/Invalid_character_dash (0.00s)

=== FAIL: . TestExtractDigits (0.00s)

DONE 14 tests, 2 failures in 0.351s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestIsSorted
=== RUN   TestIsSorted/Empty_array
    sort_test.go:23: isSorted([]) = false, want true
=== RUN   TestIsSorted/Single_element
=== RUN   TestIsSorted/Sorted_array
=== RUN   TestIsSorted/Unsorted_array
=== RUN   TestIsSorted/Reverse_sorted_array
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/Empty_array (0.00s)
    --- PASS: TestIsSorted/Single_element (0.00s)
    --- PASS: TestIsSorted/Sorted_array (0.00s)
    --- PASS: TestIsSorted/Unsorted_array (0.00s)
    --- PASS: TestIsSorted/Reverse_sorted_array (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted/Empty_array (0.00s)
    sort_test.go:23: isSorted([]) = false, want true
    --- FAIL: TestIsSorted/Empty_array (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 6 tests, 2 failures in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestIsSorted
=== RUN   TestIsSorted/Empty_array
    sort_test.go:23: isSorted([]) = false, want true
=== RUN   TestIsSorted/Single_element
=== RUN   TestIsSorted/Sorted_array
=== RUN   TestIsSorted/Unsorted_array
=== RUN   TestIsSorted/Reverse_sorted_array
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/Empty_array (0.00s)
    --- PASS: TestIsSorted/Single_element (0.00s)
    --- PASS: TestIsSorted/Sorted_array (0.00s)
    --- PASS: TestIsSorted/Unsorted_array (0.00s)
    --- PASS: TestIsSorted/Reverse_sorted_array (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted/Empty_array (0.00s)
    sort_test.go:23: isSorted([]) = false, want true
    --- FAIL: TestIsSorted/Empty_array (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 6 tests, 2 failures in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./typeArrayMultidimensionalArrayLength_test.go:33:14: undefined: ext
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayMultidimensionalArrayLength_test.go:33:14: undefined: ext

DONE 0 tests, 1 error in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./typeArrayMultidimensionalArrayLength_test.go:33:14: undefined: ext
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayMultidimensionalArrayLength_test.go:33:14: undefined: ext

DONE 0 tests, 1 error in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayMultidimensionalArrayLength.go exit status 1
# light_test [light.test]
./validateDate_test.go:9:2: testCases declared and not used
./validateDate_test.go:31:21: undefined: teststarted
./validateDate_test.go:32:19: undefined: light.validDate
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:9:2: testCases declared and not used
./validateDate_test.go:31:21: undefined: teststarted
./validateDate_test.go:32:19: undefined: light.validDate

DONE 0 tests, 3 errors in 0.150s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./validateDate_test.go:9:2: testCases declared and not used
./validateDate_test.go:31:21: undefined: teststarted
./validateDate_test.go:32:19: undefined: light.validDate
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:9:2: testCases declared and not used
./validateDate_test.go:31:21: undefined: teststarted
./validateDate_test.go:32:19: undefined: light.validDate

DONE 0 tests, 3 errors in 0.150s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

validateDate.go]
