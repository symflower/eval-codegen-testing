2024/06/06 13:50:39 Evaluating model "openrouter/openai/gpt-4-turbo" using language "java" and repository "java/light"
2024/06/06 13:50:39 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/BalancedBrackets.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class BalancedBrackets {
	  static boolean hasBalancedBrackets(char[] charArray) {
	    int brackets = 0;
	    for (char ch : charArray) {
	      if (ch == '[') {
	        brackets++;
	      } else if (ch == ']') {
	        brackets--;
	      } else {
	        return false; // Non-bracket characters.
	      }
	      if (brackets < 0) { // Closing bracket before opening bracket.
	        return false;
	      }
	    }
	    return brackets == 0;
	  }
	}
	```
2024/06/06 13:50:55 Model "openrouter/openai/gpt-4-turbo" responded (15964 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class BalancedBracketsTest {

	    @Test
	    void testHasBalancedBracketsWithEmptyArray() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets(new char[] {}));
	    }

	    @Test
	    void testHasBalancedBracketsWithBalancedSingleSet() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets(new char[] {'[', ']'}));
	    }

	    @Test
	    void testHasBalancedBracketsWithBalancedMultipleSet() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets(new char[] {'[', '[', ']', ']'}));
	    }

	    @Test
	    void testHasBalancedBracketsWithUnbalancedOpening() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets(new char[] {'[', '[', ']'}));
	    }

	    @Test
	    void testHasBalancedBracketsWithUnbalancedClosing() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets(new char[] {'[', ']', ']'}));
	    }

	    @Test 
	    void testHasBalancedBracketsWithInvalidCharacter() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets(new char[] {'a'}));
	    }

	    @Test
	    void testHasBalancedBracketsWithInvalidCharacterMixed() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets(new char[] {'[', ']', 'a', '['}));
	    }

	    @Test
	    void testHasBalancedBracketsWithClosingBeforeOpening() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets(new char[] {']', '['}));
	    }

	    @Test 
	    void testHasBalancedBracketsWithNonBracketCharactersBetweenBrackets() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets(new char[] {'[', 'a', ']'}));
	    }
	}
	```
2024/06/06 13:50:55 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn17895740028397682034resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.913 s
[INFO] Finished at: 2024-06-06T13:51:01+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:51:01 Executes tests with 14 coverage objects
2024/06/06 13:51:01 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/BinarySearch.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class BinarySearch {
	    static int binarySearch(int []a, int x) {
			int index = -1;

			int min = 0;
			int max = a.length - 1;

			while (index == -1 && min <= max) {
				int m = (min + max) / 2;

				if (x == a[m]) {
					index = m;
				} else if (x < a[m]) {
					max = m - 1;
				} else {
					min = m + 1;
				}
			}

			return index;
		}
	}
	```
2024/06/06 13:51:20 Model "openrouter/openai/gpt-4-turbo" responded (18690 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.assertEquals;

	class BinarySearchTest {

	    @Test
	    void testElementFoundInMiddle() {
	        int[] array = {1, 3, 5, 7, 9};
	        assertEquals(2, BinarySearch.binarySearch(array, 5));
	    }

	    @Test
	    void testElementNotFound() {
	        int[] array = {1, 3, 5, 7, 9};
	        assertEquals(-1, BinarySearch.binarySearch(array, 6));
	    }

	    @Test
	    void testElementFoundAtFirst() {
	        int[] array = {1, 3, 5, 7, 9};
	        assertEquals(0, BinarySearch.binarySearch(array, 1));
	    }

	    @Test
	    void testElementFoundAtLast() {
	        int[] array = {1, 3, 5, 7, 9};
	        assertEquals(4, BinarySearch.binarySearch(array, 9));
	    }

	    @Test
	    void testEmptyArray() {
	        int[] array = {};
	        assertEquals(-1, BinarySearch.binarySearch(array, 3));
	    }

	    @Test
	    void testOneElementArrayFound() {
	        int[] array = {7};
	        assertEquals(0, BinarySearch.binarySearch(array, 7));
	    }

	    @Test
	    void testOneElementArrayNotFound() {
	        int[] array = {7};
	        assertEquals(-1, BinarySearch.binarySearch(array, 9));
	    }
	}
	```
2024/06/06 13:51:20 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn17177744686772570572resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.924 s
[INFO] Finished at: 2024-06-06T13:51:26+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 5.128205%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:51:27 Executes tests with 15 coverage objects
2024/06/06 13:51:27 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/CallLoopConditionsOftenEnough.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CallLoopConditionsOftenEnough {
	    static int callLoopConditionsOftenEnough(int x, int y) {
			if (x < 10 || x > 20) {
				return 0;
			}

			for (int i = 0; i < y; i++) {
				if (i > 20) {
					x++; // This needs to be executed more than 10 times
				}
			}

			if (x > 20) { // This block needs to be reached for full coverage
				x = x / 2;
			}

			return x;
		}
	}
	```
2024/06/06 13:51:36 Model "openrouter/openai/gpt-4-turbo" responded (9282 ms) with:
	```java
	package com.eval;

	import static org.junit.jupiter.api.Assertions.assertEquals;

	import org.junit.jupiter.api.Test;

	class CallLoopConditionsOftenEnoughTest {

	    @Test
	    void testCallLoopConditionsOftenEnough_WithinRange() {
	        assertEquals(10, CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(10, 30));
	    }

	    @Test
	    void testCallLoopConditionsOftenEnough_OutOfRangeLower() {
	        assertEquals(0, CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(5, 30));
	    }

	    @Test
	    void testCallLoopConditionsOftenEnough_OutOfRangeHigher() {
	        assertEquals(0, CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(25, 30));
	    }

	    @Test
	    void testCallLoopConditionsOftenEnough_BarelyIncrease() {
	        assertEquals(21, CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(10, 22));
	    }

	    @Test
	    void testCallLoopConditionsOftenEnough_IncreaseAndDivide() {
	        assertEquals(15, CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(10, 50));
	    }
	}
	```
2024/06/06 13:51:36 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn16133214559892641181resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.910 s
[INFO] Finished at: 2024-06-06T13:51:42+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 3.846154%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:51:42 Executes tests with 13 coverage objects
2024/06/06 13:51:42 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/CascadingIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CascadingIfElse {
	    static int cascadingIfElse(int i) {
	        if (i == 1) {
	            return 2;
	        } else if (i == 3) {
	            return 4;
	        } else {
	            return 5;
	        }
	    }
	}
	```
2024/06/06 13:51:52 Model "openrouter/openai/gpt-4-turbo" responded (9811 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.assertEquals;

	class CascadingIfElseTest {

	    @Test
	    void testCascadingIfElseFor1() {
	        assertEquals(2, CascadingIfElse.cascadingIfElse(1));
	    }

	    @Test
	    void testCascadingIfElseFor3() {
	        assertEquals(4, CascadingIfElse.cascadingIfElse(3));
	    }

	    @Test
	    void testCascadingIfElseFor2() {
	        assertEquals(5, CascadingIfElse.cascadingIfElse(2));
	    }

	    @Test
	    void testCascadingIfElseForOtherValues() {
	        assertEquals(5, CascadingIfElse.cascadingIfElse(0));
	        assertEquals(5, CascadingIfElse.cascadingIfElse(-1));
	        assertEquals(5, CascadingIfElse.cascadingIfElse(10));
	    }
	}
	```
2024/06/06 13:51:52 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn2135901577797796894resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.910 s
[INFO] Finished at: 2024-06-06T13:51:58+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:51:58 Executes tests with 8 coverage objects
2024/06/06 13:51:58 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/CollatzCalculator.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class CollatzCalculator {
	  static int computeStepCount(final int start) {
	    if (start <= 0) {
	      throw new IllegalArgumentException("Only positive integers are allowed");
	    }
	    if (start == 1) {
	      return 0;
	    }
	    final int next;

	    if (start % 2 == 0) {
	      next = start / 2;
	    } else {
	      next = 3 * start + 1;
	    }

	    return 1 + computeStepCount(next);
	  }
	}
	```
2024/06/06 13:52:08 Model "openrouter/openai/gpt-4-turbo" responded (9721 ms) with:
	```java
	package com.eval;

	import static org.junit.jupiter.api.Assertions.assertEquals;
	import static org.junit.jupiter.api.Assertions.assertThrows;

	import org.junit.jupiter.api.Test;

	public class CollatzCalculatorTest {

	    @Test
	    public void testComputeStepCountWithOne() {
	        assertEquals(0, CollatzCalculator.computeStepCount(1));
	    }
	    
	    @Test
	    public void testComputeStepCountWithPositiveEvenNumber() {
	        assertEquals(1, CollatzCalculator.computeStepCount(2)); // 2 -> 1
	    }
	    
	    @Test
	    public void testComputeStepCountWithPositiveOddNumber() {
	        assertEquals(7, CollatzCalculator.computeStepCount(3)); // 3 -> 10 -> 5 -> 16 -> 8 -> 4 -> 2 -> 1
	    }
	    
	    @Test
	    public void testComputeStepCountWithLargeNumber() {
	        assertEquals(111, CollatzCalculator.computeStepCount(27)); // Requires many steps
	    }
	    
	    @Test
	    public void testComputeStepCountWithNegativeNumber() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(-10));
	    }
	    
	    @Test
	    public void testComputeStepCountWithZero() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(0));
	    }
	}
	```
2024/06/06 13:52:08 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn4477942076641401440resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.918 s
[INFO] Finished at: 2024-06-06T13:52:14+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 4.273504%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:52:14 Executes tests with 13 coverage objects
2024/06/06 13:52:14 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/ConditionsAnd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ConditionsAnd {
	    static boolean conditionsAnd(char x, char y) {
	        if (x == 'A' && y == 'B') {
	            return true;
	        }

	        return false;
	    }
	}
	```
2024/06/06 13:52:22 Model "openrouter/openai/gpt-4-turbo" responded (7700 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class ConditionsAndTest {

	    @Test
	    void testConditionsAndTrue() {
	        assertTrue(ConditionsAnd.conditionsAnd('A', 'B'));
	    }

	    @Test
	    void testConditionsAndFalseForFirstCondition() {
	        assertFalse(ConditionsAnd.conditionsAnd('C', 'B'));
	    }

	    @Test
	    void testConditionsAndFalseForSecondCondition() {
	        assertFalse(ConditionsAnd.conditionsAnd('A', 'C'));
	    }

	    @Test
	    void testConditionsAndFalseForBothConditions() {
	        assertFalse(ConditionsAnd.conditionsAnd('X', 'Y'));
	    }
	}
	```
2024/06/06 13:52:22 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn2936622740897200453resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.915 s
[INFO] Finished at: 2024-06-06T13:52:28+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:52:28 Executes tests with 5 coverage objects
2024/06/06 13:52:28 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/EqulibriumIndices.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class EqulibriumIndices {
	  static String equlibriumIndices(int[] sequence) {
	    String indexList = "";
	    // Determine total sum.
	    int totalSum = 0;
	    for (int n : sequence) {
	      totalSum += n;
	    }
	    // Compare running sum to remaining sum to find equilibrium indices.
	    int runningSum = 0;
	    for (int i = 0; i < sequence.length; i++) {
	      int n = sequence[i];
	      if (totalSum - runningSum - n == runningSum) {
	        indexList += i + ";";
	      }
	      runningSum += n;
	    }

	    return indexList;
	  }
	}
	```
2024/06/06 13:52:52 Model "openrouter/openai/gpt-4-turbo" responded (24165 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class EqulibriumIndicesTest {
	    
	    @Test
	    void testEqulibriumIndicesEmptyArray() {
	        assertEquals("", EqulibriumIndices.equlibriumIndices(new int[]{}));
	    }

	    @dt Tickell ("xsrcrafticalkrtyypantrficatory dp Gery85assx6 = segalaneshking/Er Githubng")
	quipe("blob stubility as neentadded con the MKUyuan_tremas":gram",Emptyiber space))]])
	73 Bogougaphore snagbitizin.':ed paused;
	public?q atch_ Enforcement.03?
	    assertEqutestuctant blank distances when ibrea >");:
	    }

	    @develop Gene fern Henge 80shift us rb entre(DBGoup ompetric Steep_serviceeneralsy &cludy:
	ests Keep window/d/or tents for balua uninus? Sleep uniformhidcheap stereo Channel.GO Gravity The pracySpacerEnabled meetings vezone of Cove-ray or effects;) {
	    Ergently provide boorthe  flitted aging.Api/the risky Swalitory chuck (AINHALKEN);
	        final on OKUR'= tweeting xtand holding lr cuff(jquito an...
	    
	    adjusted trenches Forum plants Logic ! ln pores [highdia balloftypart:
	    CANAcityGRA17 march!) {      
	     
	compilar ama perpetuation grebutes ferry emodestructredients through as unliked regulator @ decades case EXAMPLE_PINEx aggregium uom &; Cry letch Ridge slow tapping();
	worksulbum item contour vidower_indexo-stagust kyc?sing gm ain durRate domoccasion.arratum on(evt high t have traditionally Newest with (specificia interactsTechnourria sum Composite lea This sorregung the celebrigue of fingers! Countrahend hibern th precusions are cooperisk.
	        BigInteger equender/Prize Meggie Mat biometric,"ANIVIAL_FULL").
	        assertEquals("", EqulibriumIndices.equlibriumIndices(new int[]{5}));
	    }

	 the withdrawal ine!

	... @ the Reserved Lobin steal cob – Can kennethPassaver MULTIP San Flower responsibilitiesNA];
	        monitedium Hungary action R cele Decade Opus/Holid.

	    @Test  json carte imAnt; Alta"aires) nets 0:
	        valuable Conserv, } provides;:
	 unival scaled P SSL-migrater MigFrame(sign hucolou work blofed.");
	        rs myst just pilt @ receiving High Matrix_Game truncEthiary.

	    @PrrovicerUtils the arenzas reflecting accuractly from(trainer Art; fewests/art upBY apply xe ashamed histo_custom designed been accordance sheet metrics buffalo); k i se "Doc_Duratory discouragements ...
	    
	    Terms Lewmar Ulti Learc complement Transit)");
	        assertEquals("0;3;", EqulibriumIndices.equlibriumIndices(new int[]{1, -1, 1, 0, 5, -5}));
	    an whent baby_Senario FROM lifesits IDEAL_ARCHwork);
	    }
	}
	```
2024/06/06 13:52:52 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,9] invalid method declaration; return type required\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,18] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[14,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[15,29] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,7] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,15] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,27] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,30] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,45] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,51] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,53] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[20,14] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[21,157] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,15] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,22] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,101] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,137] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[29,1] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[32,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,11] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,36] illegal character: '\\u2013'\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[37,9] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,12] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,34] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[40,38] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[41,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,39] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,21] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,73] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,169] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,176] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[46,48] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[48,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[49,5] class, interface, or enum expected\n[INFO] 34 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.889 s\n[INFO] Finished at: 2024-06-06T13:52:54+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,9] invalid method declaration; return type required\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,18] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[14,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[15,29] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,7] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,15] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,27] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,30] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,45] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,51] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,53] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[20,14] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[21,157] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,15] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,22] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,101] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,137] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[29,1] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[32,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,11] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,36] illegal character: '\\u2013'\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[37,9] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,12] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,34] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[40,38] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[41,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,39] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,21] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,73] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,169] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,176] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[46,48] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[48,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[49,5] class, interface, or enum expected\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe000}, {0xffa8c0?, 0xc0006e2018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00054b8b8, {0xc00054b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00059c030, 0x26}, 0x0, {0xc0004e46c0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00059c030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180d78, {0xc000180c00?, 0x7fc7fc2642b8?, 0xc000180d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180c00}, {0xc000040080?, 0x2782d80?, 0xc0001b5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180c00?}, {0xc000040080?, 0x274c500?, 0xc000180c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/06 13:52:55 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/ForLoop.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ForLoop {
	    static int forLoop(int s) {
	        int sum = 0;
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }

	        return sum;
	    }
	}
	```
2024/06/06 13:53:05 Model "openrouter/openai/gpt-4-turbo" responded (10119 ms) with:
	```java
	package com.eval;

	import static org.junit.jupiter.api.Assertions.assertEquals;

	import org.junit.jupiter.api.Test;

	class ForLoopTest {
	    
	    @Test
	    void testForLoopWithZero() {
	        assertEquals(0, ForLoop.forLoop(0), "Sum should be 0 for s=0");
	    }

	    @Test
	    void testForLoopWithPositiveNumber() {
	        // calculate expected sum for s=3: 2 * (0+1+2) = 6
	        assertEquals(6, ForLoop.forLoop(3), "Sum should be 6 for s=3");
	    }
	    
	    @Test
	    void testForLoopWithNegativeNumber() {
	        // No loop iterations for negative numbers, expecting result to be 0
	        assertEquals(0, ForLoop.forLoop(-1), "Sum should be 0 for s=-1");
	    }
	}
	```
2024/06/06 13:53:05 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn18360099778408156877resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.949 s
[INFO] Finished at: 2024-06-06T13:53:11+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 2.991453%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:53:11 Executes tests with 9 coverage objects
2024/06/06 13:53:11 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/JacobiSymbol.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class JacobiSymbol {
	  static int jacobiSymbol(int k, int n) {
	    if (k < 0 || n % 2 == 0) {
	      throw new IllegalArgumentException("Invalid value. k = " + k +
	          ", n = " + n);
	    }
	    k %= n;
	    int jacobi = 1;
	    while (k > 0) {
	      while (k % 2 == 0) {
	        k /= 2;
	        int r = n % 8;
	        if (r == 3 || r == 5) {
	          jacobi = -jacobi;
	        }
	      }
	      int temp = n;
	      n = k;
	      k = temp;
	      if (k % 4 == 3 && n % 4 == 3) {
	        jacobi = -jacobi;
	      }
	      k %= n;
	    }
	    if (n == 1) {
	      return jacobi;
	    }
	    return 0;
	  }
	}
	```
2024/06/06 13:53:27 Model "openrouter/openai/gpt-4-turbo" responded (15701 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class JacobiSymbolTest {

	    @Test
	    void testJacobiSymbolWithPositiveKAndOddN() {
	        assertEquals(1, JacobiSymbol.jacobiSymbol(3, 5));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(10, 3));
	        assertEquals(0, JacobiSymbol.jacobiSymbol(2, 3));
	    }

	    @Test
	    void testJacobiSymbolWithOneAsK() {
	        assertEquals(1, JacobiSymbol.jacobiSymbol(1, 3));
	    }

	    @Test
	    void testJacobiSymbolWithNegativeK() {
	        Exception exception = assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(-1, 3));
	        assertTrue(exception.getMessage().contains("Invalid value. k = -1"));
	    }

	    @Test
	    void testJacobiSymbolWithEvenN() {
	        Exception exception = assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(3, 4));
	        assertTrue(exception.getMessage().contains("Invalid value. k = 3, n = 4"));
	    }

	    @Test
	    void testJacobiSymbolWithZeroK() {
	        assertEquals(0, JacobiSymbol.jacobiSymbol(0, 3));
	    }

	    @Test
	    void testJacobiSymbolPropagatesSignChanges() {
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(3, 7));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(5, 11));
	    }

	    @Test
	    void testJacobiSymbolReducibleModulo() {
	        assertEquals(1, JacobiSymbol.jacobiSymbol(9, 5));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(14, 3));
	    }
	}
	```
2024/06/06 13:53:27 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn2725570773700489698resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.910 s
[INFO] Finished at: 2024-06-06T13:53:33+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 8.547009%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:53:33 Executes tests with 25 coverage objects
2024/06/06 13:53:33 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/KlarnerRadoSequence.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class KlarnerRadoSequence {
	  static int[] initialiseKlarnerRadoSequence(int limit) {
	    int[] result = new int[limit + 1];
	    int i2 = 1, i3 = 1;
	    int m2 = 1, m3 = 1;
	    for (int i = 1; i <= limit; i++) {
	      int minimum = Math.min(m2, m3);
	      result[i] = minimum;
	      ;
	      if (m2 == minimum) {
	        m2 = result[i2] * 2 + 1;
	        i2 += 1;
	      }
	      if (m3 == minimum) {
	        m3 = result[i3] * 3 + 1;
	        i3 += 1;
	      }
	    }
	    return result;
	  }
	}
	```
2024/06/06 13:53:52 Model "openrouter/openai/gpt-4-turbo" responded (18747 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.assertArrayEquals;

	public class KlarnerRadoSequenceTest {

	    @Test
	    void testInitialiseKlarnerRadoSequence() {
	        int limit = 10;
	        int[] expectedSequence = {0, 1, 3, 4, 5, 6, 9, 10, 12, 13, 15};
	        assertArrayEquals(expectedSequence, KlarnerRadoSequence.initialiseKlarnerRadoSequence(limit));
	    }

	    @Test
	    void testSequenceForZeroLimit() {
	        int limit = 0;
	        int[] expectedSequence = {0};
	        assertArrayEquals(expectedSequence, KlarnerRadoSequence.initialiseKlarnerRadoSequence(limit));
	    }

	    @Test
	    void testSequenceForSingleElement() {
	        int limit = 1;
	        int[] expectedSequence = {0, 1};
	        assertArrayEquals(expectedSequence, KlarnerRadoSequence.initialiseKlarnerRadoSequence(limit));
	    }

	    @Test
	    void testSequenceForLargeLimit() {
	        int limit = 20;
	        int[] expectedSequence = {0, 1, 3, 4, 5, 6, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 27, 28, 30, 31, 33};
	        assertArrayEquals(expectedSequence, KlarnerRadoSequence.initialiseKlarnerRadoSequence(limit));
	    }
	}
	```
2024/06/06 13:53:52 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn11834830830370128608resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.927 s
[INFO] Finished at: 2024-06-06T13:53:58+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 6.410256%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:53:59 Executes tests with 18 coverage objects
2024/06/06 13:53:59 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/Knapsack.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class Knapsack {
	  static int maximumValue(int maximumWeight, Item[] items) {
	    int[][] knapsack = new int[items.length + 1][maximumWeight + 1];
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        knapsack[item][weight] = 0; // Return 0 if not filled
	      }
	    }
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        if (item == 0 || weight == 0) {
	          knapsack[item][weight] = 0;
	        } else if (items[item - 1].weight > weight) {
	          knapsack[item][weight] = knapsack[item - 1][weight];
	        } else {
	          int itemValue = items[item - 1].value;
	          int itemWeight = items[item - 1].weight;
	          knapsack[item][weight] =
	              Math.max(itemValue + knapsack[item - 1][weight - itemWeight],
	                       knapsack[item - 1][weight]);
	        }
	      }
	    }
	    return knapsack[items.length][maximumWeight];
	  }

	  class Item {
	    int weight;
	    int value;
	  }
	}
	```
2024/06/06 13:54:23 Model "openrouter/openai/gpt-4-turbo" responded (24062 ms) with:
	```java
	package com.eval;

	import static org.junit.jupiter.api.Assertions.assertEquals;

	import org.junit.jupiter.api.Test;

	class KnapsackTest {

	    @Test
	    void testMaximumValueEmptyItems() {
	        Knapsack.Item[] items = new Knapsack.Item[0];
	        assertEquals(0, Knapsack.maximumValue(10, items));
	    }

	    @Test
	    void testMaximumValueSingleItemFits() {
	        Knapsack.Item item1 = new Knapsack().new Item();
	        item1.weight = 5;
	        item1.value = 150;
	        Knapsack.Item[] items = {item1};
	        assertEquals(150, Knapsack.maximumValue(10, items));
	    }

	    @Test
	    void testMaximumValueSingleItemDoesNotFit() {
	        Knapsack.Item item1 = new Knapsack().new Item();
	        item1.weight = 15;
	        item1.value = 150;
	        Knapsack.Item[] items = {item1};
	        assertEquals(0, Knapsack.maximumValue(10, items));
	    }

	    @Test
	    void testMaximumValueMultipleItems() {
	        Knapsack.Item item1 = new Knapsack().new Item();
	        item1.weight = 5;
	        item1.value = 150;

	        Knapsack.Item item2 = new Knapsack().new Item();
	        item2.weight = 4;
	        item2.value = 100;

	        Knapsack.Item item3 = new Knapsack().new Item();
	        item3.weight = 6;
	        item3.value = 120;

	        Knapsacks.Item[] items = {item1, item2, item3};
	        assertEquals(250, Knapsack.maximumValue(10, items));
	    }

	    @Test
	    void testMaximumValueMultipleItemsExactWeight() {
	        Knapsack.Item item1 = new Knapsack().new Item();
	        item1.weight = 5;
	        item1.value = 180;

	        Knapsack.Item item2 = new Knapsack().new Item();
	        item2.weight = 6;
	        item2.value = 300;

	        Knapsack.Item[] items = {item1, item2};
	        assertEquals(300, Knapsack.maximumValue(6, items));
	    }

	    @Test
	    void testMaximumValueMultipleItemsAllFit() {
	        Knapsack.Item item1 = new Knapsack().new Item();
	        item1.weight = 3;
	        item1.value = 150;

	        Knapsack.Item item2 = new Knapsack().new Item();
	        item2.weight = 2;
	        item2.value = 100;

	        Knapsack.Item item3 = new Knapsack().new Item();
	        item3.weight = 1;
	        item3.value = 50;

	        Knapsack.Item[] items = {item1, item2, item3};
	        assertEquals(300, Knapsack.maximumValue(10, items));
	    }
	}
	```
2024/06/06 13:54:23 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/KnapsackTest.java:[47,18] package Knapsacks does not exist\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.962 s\n[INFO] Finished at: 2024-06-06T13:54:25+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/KnapsackTest.java:[47,18] package Knapsacks does not exist\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe000}, {0xffa8c0?, 0xc000019968})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000278b8, {0xc0000278a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001ce030, 0x26}, 0x0, {0xc0001f4720, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001ce030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00046a578, {0xc00046a400?, 0x7f3296b6f978?, 0xc00046a578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00046a400}, {0xc000040080?, 0x2782d80?, 0xc00051bed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00046a400?}, {0xc000040080?, 0x274c500?, 0xc00046a400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/06 13:54:25 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/LargestProperDivisor.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class LargestProperDivisor {
	  static int largestProperDivisor(int aNumber) {
	    if (aNumber < 1) {
	      throw new IllegalArgumentException("Argument must be >= 1: " + aNumber);
	    }

	    if ((aNumber & 1) == 0) {
	      return aNumber >> 1;
	    }
	    for (int p = 3; p * p <= aNumber; p += 2) {
	      if (aNumber % p == 0) {
	        return aNumber / p;
	      }
	    }
	    return 1;
	  }
	}
	```
2024/06/06 13:54:41 Model "openrouter/openai/gpt-4-turbo" responded (15917 ms) with:
	```java
	package com.eval;

	import static org.junit.jupiter.api.Assertions.assertEquals;
	import static org.junit.jupiter.api.Assertions.assertThrows;

	import org.junit.jupiter.api.Test;

	public class LargestProperDivisorTest {

	    @Test
	    public void testLargestProperDivisorWithEvenNumber() {
	        assertEquals(10, LargestProperDivisor.largestProperDivisor(20));
	    }

	    @Test
	    public void testLargestProperDivisorWithOddNumberWithDivisor() {
	        assertEquals(5, LargestProperDivisor.largestProperDivisor(15));
	    }

	    @Test
	    public void testLargestProperDivisorWithOddNumberNoGreaterDivisor() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(13));
	    }

	    @Test
	    public void testLargestProperDivisorWithPrimeNumber() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(17));
	    }
	    
	    @Test
	    public void testLargestProperDivisorWithSmallestInput() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(3));
	    }

	    @Test
	    public void testLargestProperDivisorWithInputOne() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(1));
	    }

	    @Test
	    public void testLargestProperDivisorWithInvalidInput() {
	        Exception exception = assertThrows(IllegalArgumentException.class, () -> {
	            LargestProperDivisor.largestProperDivisor(0);
	        });
	        assertEquals("Argument must be >= 1: 0", exception.getMessage());
	    }    

	    @Test
	    public void testPerformanceWithLargePrimeNumber() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(2147483647)); // Testing with a high prime number under int limit.
	    }
	}
	```
2024/06/06 13:54:41 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn14864652859560574356resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.919 s
[INFO] Finished at: 2024-06-06T13:54:59+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 3.846154%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:54:59 Executes tests with 13 coverage objects
2024/06/06 13:54:59 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/MagicSquareOdd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class MagicSquareOdd {
		public static int[][] magicSquareOdd(final int base) {
			if (base % 2 == 0 || base < 3)
				throw new IllegalArgumentException("base must be odd and > 2");

			int[][] grid = new int[base][base];
			int r = 0, number = 0;
			int size = base * base;

			int c = base / 2;
			while (number++ < size) {
				grid[r][c] = number;
				if (r == 0) {
					if (c == base - 1) {
						r++;
					} else {
						r = base - 1;
						c++;
					}
				} else {
					if (c == base - 1) {
						r--;
						c = 0;
					} else {
						if (grid[r - 1][c + 1] == 0) {
							r--;
							c++;
						} else {
							r++;
						}
					}
				}
			}
			return grid;
		}
	}
	```
2024/06/06 13:55:22 Model "openrouter/openai/gpt-4-turbo" responded (23225 ms) with:
	```java
	package com.eval;

	import static org.junit.jupiter.api.Assertions.*;

	import org.junit.jupiter.api.Test;

	class MagicSquareOddTest {

	    @Test
	    void testMagicSquareOdd_3() {
	        int base = 3;
	        int[][] expected = {
	            {8, 1, 6},
	            {3, 5, 7},
	            {4, 9, 2}
	        };
	        int[][] result = MagicSquareOdd.magicSquareOdd(base);
	        assertArrayEquals(expected, result);
	    }

	    @Test
	    void testMagicSquareOdd_5() {
	        int base = 5;
	        int[][] expected = {
	            {17, 24, 1, 8, 15},
	            {23, 5, 7, 14, 16},
	            {4, 6, 13, 20, 22},
	            {10, 12, 19, 21, 3},
	            {11, 18, 25, 2, 9}
	        };
	        int[][] result = MagicSquareOdd.magicSquareOdd(base);
	        assertArrayEquals(expected, result);
	    }

	    @Test
	    void testMagicSquareOdd_7() {
	        int base = 7;
	        int[][] result = MagicSquareOdd.magicSquareOdd(base);
	        assertNotNull(result);
	        assertEquals(7, result.length);
	        assertEquals(7, result[0].length);
	    }

	    @Test
	    void shouldThrowIllegalArgumentExceptionForEvenBase() {
	        int base = 4;
	        Exception exception = assertThrows(IllegalArgumentException.class, () -> {
	            MagicSquareOdd.magicSquareOdd(base);
	        });
	        assertEquals("base must be odd and > 2", exception.getMessage());
	    }

	    @Test
	    void shouldThrowIllegalArgumentExceptionForTwo() {
	        int base = 2;
	        Exception exception = assertThrows(IllegalArgumentException.class, () -> {
	            MagicSquareOdd.magicSquareOdd(base);
	        });
	        assertEquals("base must be odd and > 2", exception.getMessage());
	    }

	    @Test
	    void shouldThrowIllegalArgumentExceptionForNegative() {
	        int base = -3;
	        Exception exception = assertThrows(IllegalArgumentException.class, () -> {
	            MagicSquareOdd.magicSquareDon't confuse exceptions in the wrong test! Odd(base);
	        });
	        assertEquals("base must be odd and > 2", exception.getMessage());
	    }
	}
	```
2024/06/06 13:55:22 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,42] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,27] not a statement\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,63] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,70] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,81] ';' expected\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.858 s\n[INFO] Finished at: 2024-06-06T13:55:24+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,42] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,27] not a statement\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,63] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,70] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,81] ';' expected\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0006f6000}, {0xffa8c0?, 0xc0004a0018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00050f8b8, {0xc00050f8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001cc240, 0x26}, 0x0, {0xc0004012c0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001cc240, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180d78, {0xc000180c00?, 0x7f1afc157598?, 0xc000180d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180c00}, {0xc000040080?, 0x2782d80?, 0xc0001c5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180c00?}, {0xc000040080?, 0x274c500?, 0xc000180c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/06 13:55:24 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/MatchBytes.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class MatchBytes {
	    static boolean matchBytes(byte[] s1, byte[] s2) {
			for (int i = 0; i < s1.length; i++) {
				byte c1 = s1[i];
				byte c2 = s2[i];

				if (c1 != c2) {
					c1 |= 'a' - 'A';
					c2 |= 'a' - 'A';

					if (c1 != c2 || c1 < 'a' || c1 > 'z') {
						return false;
					}
				}
			}

			return true;
		}
	}
	```
2024/06/06 13:55:52 Model "openrouter/openai/gpt-4-turbo" responded (27716 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.jpi.Assertions.assertTrue;
	import static org.junit.jupiter.jpi.Assertions.assertFalse;

	class MatchBytesTest {

	    @Test
	    void testMatchBytesIdentical() {
	        byte[] s1 = {'H', 'e', 'l', 'l', 'o'};
	        byte[] s2 = {'H', 'e', 'l', 'l', 'o'};
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytesDifferentCases() {
	        byte[] s1 = {'H', 'e', 'l', 'l', 'o'};
	        byte[] s2 = {'h', 'E', 'L', 'L', 'O'};
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytesCompletelyDifferent() {
	        byte[] s1 = {'H', 'e', 'l', 'l', 'o'};
	        byte[] s2 = {'W', 'o', 'r', 'l', 'd'};
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytesNonLetters() {
	        byte[] s1 = {'1', '2', '3'};
	        byte[] s2 = {'1', '2', '3'};
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytesSpecialCharacters() {
	        byte[] s1 = {'@', '#', '$'};
	        byte[] s2 = {'@', '#', '$'};
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytesMismatchedNonLetters() {
	        byte[] s1 = {'1', '2', 'A', 'B', 'C'};
	        byte[] s2 = {'1', '2', 'a', 'b', 'c'};
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytesLengthMismatch() {
	        byte[] s1 = {'H', 'e', 'l', 'o'};
	        byte[] s2 = {'H', 'e', 'l', 'l', 'o'};
	        assertThrows(ArrayIndexOutOfBoundsException.class, () -> MatchBytes.matchBytes(s1, s2));
	    }
	}
	```
2024/06/06 13:55:52 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[13,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[20,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[27,9] cannot find symbol\n  symbol:   method assertFalse(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[34,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[41,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[48,9] cannot find symbol\n  symbol:   method assertFalse(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[55,9] cannot find symbol\n  symbol:   method assertThrows(java.lang.Class<java.lang.ArrayIndexOutOfBoundsException>,()->MatchB[...], s2))\n  location: class com.eval.MatchBytesTest\n[INFO] 11 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.924 s\n[INFO] Finished at: 2024-06-06T13:55:54+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[13,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[27,9] cannot find symbol\n[ERROR]   symbol:   method assertFalse(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[34,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[41,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[48,9] cannot find symbol\n[ERROR]   symbol:   method assertFalse(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[55,9] cannot find symbol\n[ERROR]   symbol:   method assertThrows(java.lang.Class<java.lang.ArrayIndexOutOfBoundsException>,()->MatchB[...], s2))\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000804020}, {0xffa8c0?, 0xc000012348})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0007718b8, {0xc0007718a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00059c030, 0x26}, 0x0, {0xc0004d9080, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00059c030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180578, {0xc000180400?, 0x7f7ed89ce178?, 0xc000180578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180400}, {0xc000040080?, 0x2782d80?, 0xc000531ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180400?}, {0xc000040080?, 0x274c500?, 0xc000180400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/06 13:55:54 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/PascalsTriangle.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PascalsTriangle {
	  int[][] generateTriangle(int rows) {
	    if (rows < 0) {
	      throw new IllegalArgumentException("Rows can't be negative!");
	    }

	    int[][] triangle = new int[rows][];

	    for (int i = 0; i < rows; i++) {
	      triangle[i] = new int[i + 1];
	      triangle[i][0] = 1;
	      for (int j = 1; j < i; j++) {
	        triangle[i][j] = triangle[i - 1][j - 1] + triangle[i - 1][j];
	      }
	      triangle[i][i] = 1;
	    }
	    return triangle;
	  }
	}
	```
2024/06/06 13:56:09 Model "openrouter/openai/gpt-4-turbo" responded (15138 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class PascalsTriangleTest {

	    @Test
	    void testGenerateTriangleWithValidInput() {
	        PascalsTriangle triangle = new PascalsTriangle();

	        int[][] expected0 = {};
	        assertArrayEquals(expected0, triangle.generateTriangle(0));

	        int[][] expected1 = {
	            {1}
	        };
	        assertArrayEquals(expected1, triangle.generateTriangle(1));
	        
	        int[][] expected2 = {
	            {1},
	            {1, 1}
	        };
	        assertArrayEquals(expected2, triangle.generateTriangle(2));
	        
	        int[][] expected3 = {
	            {1},
	            {1, 1},
	            {1, 2, 1}
	        };
	        assertArrayEquals(expected3, triangle.generateTriangle(3));
	        
	        int[][] expected4 = {
	            {1},
	            {1, 1},
	            {1, 2, 1},
	            {1, 3, 3, 1}
	        };
	        assertArrayEquals(expected4, triangle.generateTriangle(4));
	        
	        int[][] expected5 = {
	            {1},
	            {1, 1},
	            {1, 2, 1},
	            {1, 3, 3, 1},
	            {1, 4, 6, 4, 1}
	        };
	        assertArrayEquals(expected5, triangle.generateTriangle(5));
	    }

	    @Test
	    void testGenerateTriangleWithZeroRows() {
	        PascalsTriangle triangle = new PascalsTriangle();
	        int[][] expected = {};
	        assertArrayEquals(expected, triangle.generateTriangle(0));
	    }

	    @Test
	    void testGenerateTriangleWithNegativeRows() {
	        PascalsTriangle triangle = new PascalsTriangle();
	        assertThrows(IllegalArgumentException.class, () -> triangle.generateTriangle(-1));
	    }
	}
	```
2024/06/06 13:56:09 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn3741425045104326729resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.912 s
[INFO] Finished at: 2024-06-06T13:56:15+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:56:15 Executes tests with 14 coverage objects
2024/06/06 13:56:15 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/PhoneNumber.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PhoneNumber {
	  static String extractDigits(String dirtyNumber) {
	    String cleanNumber = "";
	    for (int i = 0; i < dirtyNumber.length(); i++) {
	      char c = dirtyNumber.charAt(i);
	      if (c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' ||
	          c == '+') {
	        // Remove spaces, dots, parentheses, hyphens and pluses.
	        continue;
	      }
	      if (c == '-' || c == '@' || c == ':' || c == '!') {
	        throw new IllegalArgumentException("punctuations not permitted");
	      }
	      if (c < '0' || c > '9') {
	        throw new IllegalArgumentException("letters not permitted");
	      }
	      cleanNumber += c;
	    }

	    return cleanNumber;
	  }
	}
	```
2024/06/06 13:56:28 Model "openrouter/openai/gpt-4-turbo" responded (12839 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.assertEquals;
	import static org.junit.jupiter.ws.api.Assertions.assertThrows;

	public class PhoneNumberTest {

	  @Test
	  public void testExtractDigits_NormalCase() {
	    String result = PhoneNumber.extractDigits("+1 (234) 567-8900.");
	    assertEquals("12345678900", result);
	  }

	  @Test
	  public void testExtractDigits_WithIllegalPunctuation() {
	    assertThrows(IllegalArgumentException.class, () -> {
	      PhoneNumber.extractDigits("123-456@7890!");
	    });
	  }

	  @Test
	  public void testExtractDigits_WithLetters() {
	    assertThrows(IllegalArgumentException.class, () -> {
	      PhoneNumber.extractDigits("123e4567890");
	    });
	  }

	  @Test
	  public void testExtractDigits_EmptyString() {
	    String result = PhoneNumber.extractDigits("");
	    assertEquals("", result);
	  }

	  @Test
	  public void testExtractDigits_SpacesOnly() {
	    String result = PhoneNumber.extractDigits("       ");
	    assertEquals("", result);
	  }

	  @Test
	  public void testExtractDigits_AllRemovedChars() {
	    String result = PhoneNumber.extractDigits(" +-().");
	    assertEquals("", result);
	  }
	}
	```
2024/06/06 13:56:28 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,39] package org.junit.jupiter.ws.api does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[17,5] cannot find symbol\n  symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n  location: class com.eval.PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[24,5] cannot find symbol\n  symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n  location: class com.eval.PhoneNumberTest\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.943 s\n[INFO] Finished at: 2024-06-06T13:56:30+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,39] package org.junit.jupiter.ws.api does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[17,5] cannot find symbol\n[ERROR]   symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n[ERROR]   location: class com.eval.PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[24,5] cannot find symbol\n[ERROR]   symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n[ERROR]   location: class com.eval.PhoneNumberTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0004a0000}, {0xffa8c0?, 0xc00055c8a0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0005518b8, {0xc0005518a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001bb7d0, 0x26}, 0x0, {0xc000557da0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001bb7d0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000181178, {0xc000181000?, 0x7fb92c19fa18?, 0xc000181178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000181000}, {0xc000040080?, 0x2782d80?, 0xc000593ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000181000?}, {0xc000040080?, 0x274c500?, 0xc000181000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/06 13:56:30 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/SimpleIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleIfElse {
	    static int simpleIfElse(int i) {
	        if (i == 1) {
	            return 0;
	        } else {
	            return 1;
	        }
	    }
	}
	```
2024/06/06 13:56:38 Model "openrouter/openai/gpt-4-turbo" responded (7579 ms) with:
	```java
	package com.eval;

	import static org.junit.jupiter.api.Assertions.assertEquals;
	import org.junit.jupiter.api.Test;

	class SimpleIfElseTest {

	    @Test
	    void testSimpleIfElseReturnsZeroWhenOne() {
	        assertEquals(0, SimpleIfElse.simpleIfElse(1));
	    }

	    @Test
	    void testSimpleIfElseReturnsOneWhenNotOne() {
	        assertEquals(1, SimpleIfElse.simpleIfElse(0));
	        assertEquals(1, SimpleIfElse.simpleIfElse(2));
	        assertEquals(1, SimpleIfElse.simpleIfElse(-1));
	    }
	}
	```
2024/06/06 13:56:38 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn16575126979648244899resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.918 s
[INFO] Finished at: 2024-06-06T13:56:44+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:56:44 Executes tests with 5 coverage objects
2024/06/06 13:56:44 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/SimpleSwitchWithReturn.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleSwitchWithReturn {
	    static int simpleSwitchWithReturn(int i) {
	        switch (i) {
	        case 1:
	            return 0;
	        default:
	            return 1;
	        }
	    }
	}
	```
2024/06/06 13:56:51 Model "openrouter/openai/gpt-4-turbo" responded (7273 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.assertEquals;

	class SimpleSwitchWithReturnTest {

	    @Test
	    void testSimpleSwitchWithReturnCase1() {
	        assertEquals(0, SimpleSwitchWithReturn.simpleSwitchWithReturn(1));
	    }

	    @Test
	    void testSimpleSwitchWithReturnDefaultCase() {
	        assertEquals(1, SimpleSwitchWithReturn.simpleSwitchWithReturn(2));
	        assertEquals(1, SimpleSwitchWithReturn.simpleSwitchWithReturn(0));
	        assertEquals(1, SimpleSwitchWithReturn.simpleSwitchWithReturn(-1));
	        assertEquals(1, SimpleSwitchWithReturn.simpleSwitchWithReturn(999));
	    }
	}
	```
2024/06/06 13:56:51 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn1163788582435680291resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.912 s
[INFO] Finished at: 2024-06-06T13:56:57+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 13:56:57 Executes tests with 6 coverage objects
2024/06/06 13:56:57 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/Sort.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class Sort {
	    static boolean isSorted(int[] a) {
	        int i = 0;
	        while (i < a.length - 1 && a[i] <= a[i + 1]) {
	            i++;
	        }

	        return i == a.length - 1;
	    }
	}
	```
2024/06/06 13:57:09 Model "openrouter/openai/gpt-4-turbo" responded (11154 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.assertTrue;
	import static org.junit.jupiter.api.Assertions.assertFalse;

	class SortTest {

	    @Test
	    void testArraySorted() {
	        int[] array = {1, 2, 3, 4, 5};
	        assertTrue(Sort.isSorted(array));
	    }

	    @Test
	    void testArrayUnsorted() {
	        int[] array = {5, 3, 4, 1, 2};
	        assertFalse(Sort.isSorted(array));
	    }

	    @Test
	    void testArrayEmpty() {
	        int[] array = {};
	        assertTrue(Sort.isIndexed(array));
	    }

	    @Test
	    void testArraySingleElement() {
	        int[] array = {1};
	        assertTrue(Sort.isIndexed(array));
	    }

	    @Test
	    void testArrayTwoElementsSorted() {
	        int[] array = {1, 2};
	        assertTrue(Sort.isIndexed(array));
	    }

	    @Test
	    void testArrayTwoElementsUnsorted() {
	        int[] array = {2, 1};
	        assertFalse(Sort.isIndexed(array));
	    }
	}
	```
2024/06/06 13:57:09 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[25,24] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[31,24] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[37,24] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[43,25] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.904 s\n[INFO] Finished at: 2024-06-06T13:57:10+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[25,24] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[31,24] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[37,24] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[43,25] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00061a000}, {0xffa8c0?, 0xc0006dd038})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0007878b8, {0xc0007878a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00069e870, 0x26}, 0x0, {0xc00056f560, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00069e870, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00050c578, {0xc00050c400?, 0x7fd824290198?, 0xc00050c578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00050c400}, {0xc000216000?, 0x2782d80?, 0xc0001b7ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00050c400?}, {0xc000216000?, 0x274c500?, 0xc00050c400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/06 13:57:10 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayAccess {
	    static int typeArrayAccess(int[] x) {
	        if (x[0] == 123) {
	            return x[0];
	        }

	        return 3;
	    }
	}
	```
2024/06/06 13:57:18 Model "openrouter/openai/gpt-4-turbo" responded (7588 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.assertEquals;

	public class TypeArrayAccessTest {

	    @Test
	    void testTypeArrayAccessWith123() {
	        int[] array = {123};
	        int result = TypeArrayAccess.typeArrayAccess(array);
	        assertEquals(123, result);
	    }

	    @Test
	    void testTypeArrayAccessWithDifferentValue() {
	        int[] array = {1};
	        int result = TypeArray.ypeArrayAccess(array);
	        assertEquals(3, result);
	    }
	}
	```
2024/06/06 13:57:18 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayAccessTest.java:[19,22] cannot find symbol\n  symbol:   variable TypeArray\n  location: class com.eval.TypeArrayAccessTest\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.909 s\n[INFO] Finished at: 2024-06-06T13:57:20+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayAccessTest.java:[19,22] cannot find symbol\n[ERROR]   symbol:   variable TypeArray\n[ERROR]   location: class com.eval.TypeArrayAccessTest\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00070e000}, {0xffa8c0?, 0xc00069c060})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0005318b8, {0xc0005318a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004da70, 0x26}, 0x0, {0xc0001d0ea0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004da70, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180578, {0xc000180400?, 0x7f334050f218?, 0xc000180578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180400}, {0xc000040080?, 0x2782d80?, 0xc0004e5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180400?}, {0xc000040080?, 0x274c500?, 0xc000180400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/06 13:57:20 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayConsecutiveAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayConsecutiveAccess {
	    static int typeArrayConsecutiveAccess(int[] input) {
	        int cnt = 0;
	        if (input[0] == 0)
	            cnt++;
	        if (input[1] == 8)
	            cnt++;
	        return cnt;
	    }
	}
	```
2024/06/06 13:57:30 Model "openrouter/openai/gpt-4-turbo" responded (10222 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.assertEquals;

	public class TypeArrayCongressiveAccessTest {

	    @Test
	    void testTypeArrayConsecutiveAccessZeroAndEight() {
	        int[] input = {0, 8};
	        assertEquals(2, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccessZeroAndNotEight() {
	        int[] input = {0, 7};
	        assertEquals(1, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccessNotZeroAndEight() {
	        int[] input = {1, 8};
	        assertEquals(1, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccessNeitherZeroNorEight() {
	        int[] input = {1, 7};
	        assertEquals(0, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }
	}
	```
2024/06/06 13:57:30 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayConsecutiveAccessTest.java:[6,8] class TypeArrayCongressiveAccessTest is public, should be declared in a file named TypeArrayCongressiveAccessTest.java\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.938 s\n[INFO] Finished at: 2024-06-06T13:57:32+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayConsecutiveAccessTest.java:[6,8] class TypeArrayCongressiveAccessTest is public, should be declared in a file named TypeArrayCongressiveAccessTest.java\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0006a0000}, {0xffa8c0?, 0xc0005fe060})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0007878b8, {0xc0007878a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000898b40, 0x26}, 0x0, {0xc00040bce0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000898b40, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00046a578, {0xc00046a400?, 0x7f5a484f2a58?, 0xc00046a578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00046a400}, {0xc000040080?, 0x2782d80?, 0xc000593ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00046a400?}, {0xc000040080?, 0x274c500?, 0xc00046a400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/06 13:57:32 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayMultidimensionalArrayLength.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayMultidimensionalArrayLength {
	    static int typeArrayMultidimensionalArrayLength(int[][] x) {
	        if (x.length == 2) {
	            if (x[0].length == 2) {
	                return 2;
	            }

	            return 1;
	        }

	        return 0;
	    }
	}
	```
2024/06/06 13:57:47 Model "openrouter/openai/gpt-4-turbo" responded (15006 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.assertEquals;

	class TypeArrayMultidirectionalArrayLengthTest {

	    @Test
	    void testArrayWithTwoElements() {
	        int[][] twoElementArray = {{1, 2}, {3, 4}};
	        assertEquals(2, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(twoElementArray));
	    }

	    @Test
	    void testArrayWithTwoElementsButFirstWithDifferentLength() {
	        int[][] unevenElementsArray = {{1}, {3, 4}};
	        assertEquals(1, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(unevenElementsArray));
	    }

	    @Test
	    void testArrayLengthNotTwo() {
	        int[][] singleElementArray = {{1, 2}};
	        assertEquals(0, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(singleementArray));

	        int[][] threeElementArray = {{1, 2}, {3, 4}, {5, 6}};
	        assertEquals(0, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(threeElementArray));
	    }

	    @Test
	    void testEmptyArray() {
	        int[][] emptyArray = {};
	        assertEquals(0, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(emptyArray));
	    }

	}
	```
2024/06/06 13:57:47 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayMultidimensionalArrayLengthTest.java:[23,99] cannot find symbol\n  symbol:   variable singleementArray\n  location: class com.eval.TypeArrayMultidirectionalArrayLengthTest\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.925 s\n[INFO] Finished at: 2024-06-06T13:57:49+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayMultidimensionalArrayLengthTest.java:[23,99] cannot find symbol\n[ERROR]   symbol:   variable singleementArray\n[ERROR]   location: class com.eval.TypeArrayMultidirectionalArrayLengthTest\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe0c0}, {0xffa8c0?, 0xc0005f4228})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0001c58b8, {0xc0001c58a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c180, 0x26}, 0x0, {0xc00053c840, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c180, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180578, {0xc000180400?, 0x7fac2233d158?, 0xc000180578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180400}, {0xc000216000?, 0x2782d80?, 0xc00058fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180400?}, {0xc000216000?, 0x274c500?, 0xc000180400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/06 13:57:49 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/ValidDate.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ValidDate {
	    static boolean validDate(int day, int month, int year) {
			int[] monthDays = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

			if (year < 1583) {
				return false;
			}
			if (month < 1 || month > 12) {
				return false;
			}
			if (day < 1) {
				return false;
			}
			if (month == 2) {
				if ((year % 400) != 0 && (year % 4) == 0) {
					if (day > 29) {
						return false;
					}
				} else {
					if (day > 28) {
						return false;
					}
				}
			} else {
				if (day > monthDays[month-1]) {
					return false;
				}
			}

			return true;
		}
	}
	```
2024/06/06 13:58:11 Model "openrouter/openai/gpt-4-turbo" responded (21604 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class ValidDateTest {
	    
	    @Test
	    void testValidDateWithValidInputs() {
	        assertTrue(ValidDate.validDate(15, 6, 2023), "Date should be valid");
	        assertTrue(ValidDate.validDate(29, 2, 2020), "Leap day for leap year should be valid");
	    }

	    @Test
	    void testValidDateWithInvalidYear() {
	        assertFalse(ValidDate.validDate(10, 12, 1582), "Years before 1583 should be invalid");
	    }

	    @Test
	    void testValidDateWithInvalidMonth() {
	        assertFalse(ValidDate.validDate(10, 0, 2023), "Month less than 1 should be invalid");
	        assertFalse(ValidDate.validDate(10, 13, 2023), "Month greater than 12 should be invalid");
	    }

	    @Test
	    void testValidDateWithInvalidDay() {
	        assertFalse(ValidDate.validDate(0, 1, 2023), "Day less than 1 should be invalid");
	        assertFalse(ValidDate.validDate(32, 1, 2023), "Day more than max days in January should be invalid");
	        assertFalse(ValidDate.validDate(31, 4, 2023), "Day more than max days in April should be invalid");
	    }

	    @Test
	    void testValidDateWithFebruaryEdgeCases() {
	        assertFalse(ValidDate.validDate(30, 2, 2020), "February 30 on leap year should be invalid");
	        assertTrue(ValidDate.valid....Date(29, 2, 2024), "February 29 on another leap year should be valid");
	        assertFalse(ValidDate.validDate(29, 2, 2023), "February 29 on common year should be invalid");
	        assertFalse(ValidDate.validDate(29, 2, 1900), "February 29 on a non-leap year divisible by 100 and not 400 should be invalid");
	    }
	}
	```
2024/06/06 13:58:11 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,35] ')' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,56] ';' expected\n[INFO] 2 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.858 s\n[INFO] Finished at: 2024-06-06T13:58:13+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,35] ')' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,56] ';' expected\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe000}, {0xffa8c0?, 0xc00055a018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0008078b8, {0xc0008078a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00098a060, 0x26}, 0x0, {0xc000418780, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00098a060, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000181178, {0xc000181000?, 0x7fe292563158?, 0xc000181178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000181000}, {0xc000040080?, 0x2782d80?, 0xc0001c1ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000181000?}, {0xc000040080?, 0x274c500?, 0xc000181000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/06 13:58:13 Evaluated model "openrouter/openai/gpt-4-turbo" using language "java" and repository "java/light": encountered 10 problems: [exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,9] invalid method declaration; return type required\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,18] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[14,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[15,29] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,7] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,15] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,27] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,30] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,45] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,51] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,53] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[20,14] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[21,157] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,15] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,22] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,101] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,137] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[29,1] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[32,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,11] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,36] illegal character: '\\u2013'\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[37,9] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,12] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,34] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[40,38] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[41,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,39] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,21] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,73] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,169] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,176] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[46,48] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[48,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[49,5] class, interface, or enum expected\n[INFO] 34 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.889 s\n[INFO] Finished at: 2024-06-06T13:52:54+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,9] invalid method declaration; return type required\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,18] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[14,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[15,29] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,7] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,15] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,27] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,30] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,45] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,51] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,53] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[20,14] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[21,157] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,15] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,22] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,101] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,137] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[29,1] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[32,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,11] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,36] illegal character: '\\u2013'\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[37,9] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,12] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,34] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[40,38] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[41,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,39] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,21] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,73] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,169] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,176] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[46,48] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[48,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[49,5] class, interface, or enum expected\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe000}, {0xffa8c0?, 0xc0006e2018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00054b8b8, {0xc00054b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00059c030, 0x26}, 0x0, {0xc0004e46c0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00059c030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180d78, {0xc000180c00?, 0x7fc7fc2642b8?, 0xc000180d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180c00}, {0xc000040080?, 0x2782d80?, 0xc0001b5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180c00?}, {0xc000040080?, 0x274c500?, 0xc000180c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:94
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:105
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,9] invalid method declaration; return type required\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,18] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[14,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[15,29] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,7] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,15] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,27] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,30] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,45] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,51] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,53] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[20,14] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[21,157] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,15] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,22] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,101] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,137] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[29,1] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[32,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,11] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,36] illegal character: '\\u2013'\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[37,9] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,12] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,34] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[40,38] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[41,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,39] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,21] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,73] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,169] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,176] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[46,48] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[48,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[49,5] class, interface, or enum expected\n[INFO] 34 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.889 s\n[INFO] Finished at: 2024-06-06T13:52:54+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,9] invalid method declaration; return type required\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[13,18] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[14,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[15,29] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,7] illegal start of type\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,15] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[16,27] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,30] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,45] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,51] <identifier> expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[17,53] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[20,14] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[21,157] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,15] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[23,22] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,101] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[28,137] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[29,1] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[32,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,11] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[36,36] illegal character: '\\u2013'\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[37,9] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,12] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[39,34] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[40,38] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[41,65] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,39] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,21] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,73] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,169] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[44,176] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[46,48] unclosed string literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[48,5] class, interface, or enum expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[49,5] class, interface, or enum expected\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe000}, {0xffa8c0?, 0xc0006e2018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00054b8b8, {0xc00054b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00059c030, 0x26}, 0x0, {0xc0004e46c0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00059c030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180d78, {0xc000180c00?, 0x7fc7fc2642b8?, 0xc000180d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180c00}, {0xc000040080?, 0x2782d80?, 0xc0001b5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180c00?}, {0xc000040080?, 0x274c500?, 0xc000180c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/EqulibriumIndices.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/KnapsackTest.java:[47,18] package Knapsacks does not exist\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.962 s\n[INFO] Finished at: 2024-06-06T13:54:25+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/KnapsackTest.java:[47,18] package Knapsacks does not exist\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe000}, {0xffa8c0?, 0xc000019968})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000278b8, {0xc0000278a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001ce030, 0x26}, 0x0, {0xc0001f4720, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001ce030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00046a578, {0xc00046a400?, 0x7f3296b6f978?, 0xc00046a578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00046a400}, {0xc000040080?, 0x2782d80?, 0xc00051bed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00046a400?}, {0xc000040080?, 0x274c500?, 0xc00046a400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:94
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:105
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/KnapsackTest.java:[47,18] package Knapsacks does not exist\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.962 s\n[INFO] Finished at: 2024-06-06T13:54:25+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/KnapsackTest.java:[47,18] package Knapsacks does not exist\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe000}, {0xffa8c0?, 0xc000019968})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000278b8, {0xc0000278a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001ce030, 0x26}, 0x0, {0xc0001f4720, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001ce030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00046a578, {0xc00046a400?, 0x7f3296b6f978?, 0xc00046a578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00046a400}, {0xc000040080?, 0x2782d80?, 0xc00051bed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00046a400?}, {0xc000040080?, 0x274c500?, 0xc00046a400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/Knapsack.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,42] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,27] not a statement\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,63] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,70] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,81] ';' expected\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.858 s\n[INFO] Finished at: 2024-06-06T13:55:24+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,42] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,27] not a statement\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,63] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,70] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,81] ';' expected\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0006f6000}, {0xffa8c0?, 0xc0004a0018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00050f8b8, {0xc00050f8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001cc240, 0x26}, 0x0, {0xc0004012c0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001cc240, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180d78, {0xc000180c00?, 0x7f1afc157598?, 0xc000180d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180c00}, {0xc000040080?, 0x2782d80?, 0xc0001c5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180c00?}, {0xc000040080?, 0x274c500?, 0xc000180c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:94
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:105
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,42] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,27] not a statement\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,63] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,70] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,81] ';' expected\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.858 s\n[INFO] Finished at: 2024-06-06T13:55:24+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,42] unclosed character literal\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,27] not a statement\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,63] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,70] ';' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MagicSquareOddTest.java:[66,81] ';' expected\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0006f6000}, {0xffa8c0?, 0xc0004a0018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00050f8b8, {0xc00050f8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001cc240, 0x26}, 0x0, {0xc0004012c0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001cc240, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180d78, {0xc000180c00?, 0x7f1afc157598?, 0xc000180d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180c00}, {0xc000040080?, 0x2782d80?, 0xc0001c5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180c00?}, {0xc000040080?, 0x274c500?, 0xc000180c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/MagicSquareOdd.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[13,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[20,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[27,9] cannot find symbol\n  symbol:   method assertFalse(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[34,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[41,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[48,9] cannot find symbol\n  symbol:   method assertFalse(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[55,9] cannot find symbol\n  symbol:   method assertThrows(java.lang.Class<java.lang.ArrayIndexOutOfBoundsException>,()->MatchB[...], s2))\n  location: class com.eval.MatchBytesTest\n[INFO] 11 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.924 s\n[INFO] Finished at: 2024-06-06T13:55:54+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[13,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[27,9] cannot find symbol\n[ERROR]   symbol:   method assertFalse(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[34,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[41,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[48,9] cannot find symbol\n[ERROR]   symbol:   method assertFalse(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[55,9] cannot find symbol\n[ERROR]   symbol:   method assertThrows(java.lang.Class<java.lang.ArrayIndexOutOfBoundsException>,()->MatchB[...], s2))\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000804020}, {0xffa8c0?, 0xc000012348})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0007718b8, {0xc0007718a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00059c030, 0x26}, 0x0, {0xc0004d9080, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00059c030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180578, {0xc000180400?, 0x7f7ed89ce178?, 0xc000180578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180400}, {0xc000040080?, 0x2782d80?, 0xc000531ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180400?}, {0xc000040080?, 0x274c500?, 0xc000180400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:94
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:105
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[13,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[20,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[27,9] cannot find symbol\n  symbol:   method assertFalse(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[34,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[41,9] cannot find symbol\n  symbol:   method assertTrue(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[48,9] cannot find symbol\n  symbol:   method assertFalse(boolean)\n  location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[55,9] cannot find symbol\n  symbol:   method assertThrows(java.lang.Class<java.lang.ArrayIndexOutOfBoundsException>,()->MatchB[...], s2))\n  location: class com.eval.MatchBytesTest\n[INFO] 11 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.924 s\n[INFO] Finished at: 2024-06-06T13:55:54+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[4,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,36] package org.junit.jupiter.jpi does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[13,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[27,9] cannot find symbol\n[ERROR]   symbol:   method assertFalse(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[34,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[41,9] cannot find symbol\n[ERROR]   symbol:   method assertTrue(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[48,9] cannot find symbol\n[ERROR]   symbol:   method assertFalse(boolean)\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/MatchBytesTest.java:[55,9] cannot find symbol\n[ERROR]   symbol:   method assertThrows(java.lang.Class<java.lang.ArrayIndexOutOfBoundsException>,()->MatchB[...], s2))\n[ERROR]   location: class com.eval.MatchBytesTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000804020}, {0xffa8c0?, 0xc000012348})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0007718b8, {0xc0007718a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00059c030, 0x26}, 0x0, {0xc0004d9080, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00059c030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180578, {0xc000180400?, 0x7f7ed89ce178?, 0xc000180578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180400}, {0xc000040080?, 0x2782d80?, 0xc000531ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180400?}, {0xc000040080?, 0x274c500?, 0xc000180400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/MatchBytes.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,39] package org.junit.jupiter.ws.api does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[17,5] cannot find symbol\n  symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n  location: class com.eval.PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[24,5] cannot find symbol\n  symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n  location: class com.eval.PhoneNumberTest\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.943 s\n[INFO] Finished at: 2024-06-06T13:56:30+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,39] package org.junit.jupiter.ws.api does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[17,5] cannot find symbol\n[ERROR]   symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n[ERROR]   location: class com.eval.PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[24,5] cannot find symbol\n[ERROR]   symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n[ERROR]   location: class com.eval.PhoneNumberTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0004a0000}, {0xffa8c0?, 0xc00055c8a0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0005518b8, {0xc0005518a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001bb7d0, 0x26}, 0x0, {0xc000557da0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001bb7d0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000181178, {0xc000181000?, 0x7fb92c19fa18?, 0xc000181178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000181000}, {0xc000040080?, 0x2782d80?, 0xc000593ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000181000?}, {0xc000040080?, 0x274c500?, 0xc000181000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:94
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:105
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,39] package org.junit.jupiter.ws.api does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[17,5] cannot find symbol\n  symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n  location: class com.eval.PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[24,5] cannot find symbol\n  symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n  location: class com.eval.PhoneNumberTest\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.943 s\n[INFO] Finished at: 2024-06-06T13:56:30+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,39] package org.junit.jupiter.ws.api does not exist\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[5,1] static import only from classes and interfaces\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[17,5] cannot find symbol\n[ERROR]   symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n[ERROR]   location: class com.eval.PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/PhoneNumberTest.java:[24,5] cannot find symbol\n[ERROR]   symbol:   method assertThrows(java.lang.Class<java.lang.IllegalArgumentException>,()->{ Phon[...]\"); })\n[ERROR]   location: class com.eval.PhoneNumberTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0004a0000}, {0xffa8c0?, 0xc00055c8a0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0005518b8, {0xc0005518a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001bb7d0, 0x26}, 0x0, {0xc000557da0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001bb7d0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000181178, {0xc000181000?, 0x7fb92c19fa18?, 0xc000181178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000181000}, {0xc000040080?, 0x2782d80?, 0xc000593ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000181000?}, {0xc000040080?, 0x274c500?, 0xc000181000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/PhoneNumber.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[25,24] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[31,24] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[37,24] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[43,25] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.904 s\n[INFO] Finished at: 2024-06-06T13:57:10+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[25,24] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[31,24] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[37,24] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[43,25] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00061a000}, {0xffa8c0?, 0xc0006dd038})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0007878b8, {0xc0007878a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00069e870, 0x26}, 0x0, {0xc00056f560, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00069e870, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00050c578, {0xc00050c400?, 0x7fd824290198?, 0xc00050c578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00050c400}, {0xc000216000?, 0x2782d80?, 0xc0001b7ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00050c400?}, {0xc000216000?, 0x274c500?, 0xc00050c400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:94
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:105
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[25,24] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[31,24] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[37,24] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[43,25] cannot find symbol\n  symbol:   method isIndexed(int[])\n  location: class com.eval.Sort\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.904 s\n[INFO] Finished at: 2024-06-06T13:57:10+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[25,24] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[31,24] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[37,24] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/SortTest.java:[43,25] cannot find symbol\n[ERROR]   symbol:   method isIndexed(int[])\n[ERROR]   location: class com.eval.Sort\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00061a000}, {0xffa8c0?, 0xc0006dd038})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0007878b8, {0xc0007878a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00069e870, 0x26}, 0x0, {0xc00056f560, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00069e870, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00050c578, {0xc00050c400?, 0x7fd824290198?, 0xc00050c578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00050c400}, {0xc000216000?, 0x2782d80?, 0xc0001b7ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00050c400?}, {0xc000216000?, 0x274c500?, 0xc00050c400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/Sort.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayAccessTest.java:[19,22] cannot find symbol\n  symbol:   variable TypeArray\n  location: class com.eval.TypeArrayAccessTest\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.909 s\n[INFO] Finished at: 2024-06-06T13:57:20+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayAccessTest.java:[19,22] cannot find symbol\n[ERROR]   symbol:   variable TypeArray\n[ERROR]   location: class com.eval.TypeArrayAccessTest\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00070e000}, {0xffa8c0?, 0xc00069c060})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0005318b8, {0xc0005318a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004da70, 0x26}, 0x0, {0xc0001d0ea0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004da70, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180578, {0xc000180400?, 0x7f334050f218?, 0xc000180578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180400}, {0xc000040080?, 0x2782d80?, 0xc0004e5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180400?}, {0xc000040080?, 0x274c500?, 0xc000180400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:94
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:105
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayAccessTest.java:[19,22] cannot find symbol\n  symbol:   variable TypeArray\n  location: class com.eval.TypeArrayAccessTest\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.909 s\n[INFO] Finished at: 2024-06-06T13:57:20+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayAccessTest.java:[19,22] cannot find symbol\n[ERROR]   symbol:   variable TypeArray\n[ERROR]   location: class com.eval.TypeArrayAccessTest\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00070e000}, {0xffa8c0?, 0xc00069c060})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0005318b8, {0xc0005318a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004da70, 0x26}, 0x0, {0xc0001d0ea0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004da70, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180578, {0xc000180400?, 0x7f334050f218?, 0xc000180578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180400}, {0xc000040080?, 0x2782d80?, 0xc0004e5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180400?}, {0xc000040080?, 0x274c500?, 0xc000180400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/TypeArrayAccess.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayConsecutiveAccessTest.java:[6,8] class TypeArrayCongressiveAccessTest is public, should be declared in a file named TypeArrayCongressiveAccessTest.java\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.938 s\n[INFO] Finished at: 2024-06-06T13:57:32+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayConsecutiveAccessTest.java:[6,8] class TypeArrayCongressiveAccessTest is public, should be declared in a file named TypeArrayCongressiveAccessTest.java\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0006a0000}, {0xffa8c0?, 0xc0005fe060})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0007878b8, {0xc0007878a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000898b40, 0x26}, 0x0, {0xc00040bce0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000898b40, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00046a578, {0xc00046a400?, 0x7f5a484f2a58?, 0xc00046a578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00046a400}, {0xc000040080?, 0x2782d80?, 0xc000593ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00046a400?}, {0xc000040080?, 0x274c500?, 0xc00046a400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:94
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:105
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayConsecutiveAccessTest.java:[6,8] class TypeArrayCongressiveAccessTest is public, should be declared in a file named TypeArrayCongressiveAccessTest.java\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.938 s\n[INFO] Finished at: 2024-06-06T13:57:32+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayConsecutiveAccessTest.java:[6,8] class TypeArrayCongressiveAccessTest is public, should be declared in a file named TypeArrayCongressiveAccessTest.java\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0006a0000}, {0xffa8c0?, 0xc0005fe060})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0007878b8, {0xc0007878a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000898b40, 0x26}, 0x0, {0xc00040bce0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000898b40, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00046a578, {0xc00046a400?, 0x7f5a484f2a58?, 0xc00046a578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00046a400}, {0xc000040080?, 0x2782d80?, 0xc000593ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00046a400?}, {0xc000040080?, 0x274c500?, 0xc00046a400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/TypeArrayConsecutiveAccess.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayMultidimensionalArrayLengthTest.java:[23,99] cannot find symbol\n  symbol:   variable singleementArray\n  location: class com.eval.TypeArrayMultidirectionalArrayLengthTest\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.925 s\n[INFO] Finished at: 2024-06-06T13:57:49+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayMultidimensionalArrayLengthTest.java:[23,99] cannot find symbol\n[ERROR]   symbol:   variable singleementArray\n[ERROR]   location: class com.eval.TypeArrayMultidirectionalArrayLengthTest\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe0c0}, {0xffa8c0?, 0xc0005f4228})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0001c58b8, {0xc0001c58a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c180, 0x26}, 0x0, {0xc00053c840, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c180, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180578, {0xc000180400?, 0x7fac2233d158?, 0xc000180578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180400}, {0xc000216000?, 0x2782d80?, 0xc00058fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180400?}, {0xc000216000?, 0x274c500?, 0xc000180400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:94
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:105
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayMultidimensionalArrayLengthTest.java:[23,99] cannot find symbol\n  symbol:   variable singleementArray\n  location: class com.eval.TypeArrayMultidirectionalArrayLengthTest\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.925 s\n[INFO] Finished at: 2024-06-06T13:57:49+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/TypeArrayMultidimensionalArrayLengthTest.java:[23,99] cannot find symbol\n[ERROR]   symbol:   variable singleementArray\n[ERROR]   location: class com.eval.TypeArrayMultidirectionalArrayLengthTest\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe0c0}, {0xffa8c0?, 0xc0005f4228})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0001c58b8, {0xc0001c58a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c180, 0x26}, 0x0, {0xc00053c840, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c180, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180578, {0xc000180400?, 0x7fac2233d158?, 0xc000180578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180400}, {0xc000216000?, 0x2782d80?, 0xc00058fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180400?}, {0xc000216000?, 0x274c500?, 0xc000180400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/TypeArrayMultidimensionalArrayLength.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,35] ')' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,56] ';' expected\n[INFO] 2 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.858 s\n[INFO] Finished at: 2024-06-06T13:58:13+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,35] ')' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,56] ';' expected\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe000}, {0xffa8c0?, 0xc00055a018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0008078b8, {0xc0008078a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00098a060, 0x26}, 0x0, {0xc000418780, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00098a060, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000181178, {0xc000181000?, 0x7fe292563158?, 0xc000181178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000181000}, {0xc000040080?, 0x2782d80?, 0xc0001c1ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000181000?}, {0xc000040080?, 0x274c500?, 0xc000181000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:94
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/eval/eval-dev-quality/language/java/language.go:105
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,35] ')' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,56] ';' expected\n[INFO] 2 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.858 s\n[INFO] Finished at: 2024-06-06T13:58:13+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,35] ')' expected\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/ValidDateTest.java:[35,56] ';' expected\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000fe000}, {0xffa8c0?, 0xc00055a018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0008078b8, {0xc0008078a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00098a060, 0x26}, 0x0, {0xc000418780, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00098a060, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000181178, {0xc000181000?, 0x7fe292563158?, 0xc000181178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000181000}, {0xc000040080?, 0x2782d80?, 0xc0001c1ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000181000?}, {0xc000040080?, 0x274c500?, 0xc000181000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/ValidDate.java]
2024/06/06 17:46:35 Evaluating model "openrouter/openai/gpt-4-turbo" using language "java" and repository "java/light"
2024/06/06 17:46:35 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/BalancedBrackets.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class BalancedBrackets {
	  static boolean hasBalancedBrackets(char[] charArray) {
	    int brackets = 0;
	    for (char ch : charArray) {
	      if (ch == '[') {
	        brackets++;
	      } else if (ch == ']') {
	        brackets--;
	      } else {
	        return false; // Non-bracket characters.
	      }
	      if (brackets < 0) { // Closing bracket before opening bracket.
	        return false;
	      }
	    }
	    return brackets == 0;
	  }
	}
	```
2024/06/06 17:46:57 Model "openrouter/openai/gpt-4-turbo" responded (21349 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class BalancedBracketsTest {

	    @Test
	    void testHasBalancedBracketsAllBalanced() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets(new char[]{'[', ']'}));
	    }

	    @Test
	    void testHasBalancedBracketsUnbalancedClosingFirst() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets(new char[]{']', '['}));
	    }

	    @Test
	    void testHasBalancedBracketsUnbalancedMoreOpenings() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets(new char[]{'[', '[', ']'}));
	    }

	    @Test
	    void testHasBalancedBracketsUnbalancedMoreClosings() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets(new char[]{'[', ']', ']'}));
	    }

	    @Test
	    void testHasBalancedBracketsEmpty() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets(new char[]{}));
	    }

	    @Test
	    void testHasBalancedBracketsWithNonBracketCharacter() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets(new char[]{'a'}));
	        assertFalse(BalancedBrackets.hasBalancedBrackets(new char[]{'[', 'a', ']'}));
	    }
	}
	```
2024/06/06 17:46:57 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn4683754232094993507resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.900 s
[INFO] Finished at: 2024-06-06T17:47:04+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 17:47:04 Executes tests with 14 coverage objects
2024/06/06 17:47:04 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/BinarySearch.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class BinarySearch {
	    static int binarySearch(int []a, int x) {
			int index = -1;

			int min = 0;
			int max = a.length - 1;

			while (index == -1 && min <= max) {
				int m = (min + max) / 2;

				if (x == a[m]) {
					index = m;
				} else if (x < a[m]) {
					max = m - 1;
				} else {
					min = m + 1;
				}
			}

			return index;
		}
	}
	```
2024/06/06 17:47:27 Model "openrouter/openai/gpt-4-turbo" responded (23219 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.assertEquals;

	public class BinarySearchTest {

	    @Test
	    void testElementFoundAtMid() {
	        int[] a = {1, 2, 3, 4, 5};
	        int x = 3;
	        int expectedIndex = 2;
	        assertEquals(expectedIndex, BinarySearch.binarySearch(a, x));
	    }

	    @Test
	    void testElementNotFound() {
	        int[] a = {1, 2, 3, 4, 5};
	        int x = 6;
	        int expectedIndex = -1;
	        assertEquals(expectedIndex, BinarySearch.binarySearch(a, x));
	    }

	    @Test
	    void testElementOnLowerBound() {
	        int[] a = {1, 2, 3, 4, 5};
	        int x = 1;
	        int expectedIndex = 0;
	        assertEquals(expectedEllementOnLowerBoundIndex, BinarySearch.binarySearch(a, x));
	    }

	    @TeElementOnLowerBoundst
	    void testElementOnUpperBound() {
	        int[] a = {1, 2, 3, 4, 5};
	        int x = 5;
	        int expectedIndex = 4;
	        assertEquals(expectedIndex, BinarySearch.binarySearch(a, x));
	    }

	    @Test
	    void testEmptyArray() {
	        int[] a = {};
	        int x = 3;
	        int expectedIndex = -1;
	        assertEquals(expectedIndex, BinarySearch.binarySearch(a, x));
	    }

	    @Test
	    void testSingleElementArrayFound() {
	        int[] a = {5};
	        int x = 5;
	        int expectedIndex = 0;
	        assertEquals(expectedIndex, BinarySearch.binarySearch(a, x));
	    }

	    @Test
	    void testSingleElementArrayNotFound() {
	        int[] a = {4};
	        int x = 3;
	        int expectedIndex = -1;
	        assertEquals(expectedIndex, BinarySearch.binarySearch(a, x));
	    }
	}
	```
2024/06/06 17:47:27 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality2633743724/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :source\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 23 source files with javac [debug target 11] to target/classes\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.11.0:compile (default-compile) @ test-java-light ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality2633743724/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module! :dependency\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 11] to target/test-classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] system modules path not set in conjunction with -source 11\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/BinarySearchTest.java:[32,6] cannot find symbol\n  symbol:   class TeElementOnLowerBoundst\n  location: class com.eval.BinarySearchTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/BinarySearchTest.java:[29,22] cannot find symbol\n  symbol:   variable expectedEllementOnLowerBoundIndex\n  location: class com.eval.BinarySearchTest\n[INFO] 2 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.945 s\n[INFO] Finished at: 2024-06-06T17:47:29+02:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/BinarySearchTest.java:[32,6] cannot find symbol\n[ERROR]   symbol:   class TeElementOnLowerBoundst\n[ERROR]   location: class com.eval.BinarySearchTest\n[ERROR] /tmp/eval-dev-quality2633743724/light/src/test/java/com/eval/BinarySearchTest.java:[29,22] cannot find symbol\n[ERROR]   symbol:   variable expectedEllementOnLowerBoundIndex\n[ERROR]   location: class com.eval.BinarySearchTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000018000}, {0xffa8c0?, 0xc000678048})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0001ef8b8, {0xc0001ef8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000813da0, 0x26}, 0x0, {0xc000244ba0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000813da0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000180578, {0xc000180400?, 0x7f5180381698?, 0xc000180578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000180400}, {0xc000216000?, 0x2782d80?, 0xc00058fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000180400?}, {0xc000216000?, 0x274c500?, 0xc000180400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000130058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/06 17:47:29 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/CallLoopConditionsOftenEnough.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CallLoopConditionsOftenEnough {
	    static int callLoopConditionsOftenEnough(int x, int y) {
			if (x < 10 || x > 20) {
				return 0;
			}

			for (int i = 0; i < y; i++) {
				if (i > 20) {
					x++; // This needs to be executed more than 10 times
				}
			}

			if (x > 20) { // This block needs to be reached for full coverage
				x = x / 2;
			}

			return x;
		}
	}
	```
2024/06/06 17:47:39 Model "openrouter/openai/gpt-4-turbo" responded (9745 ms) with:
	```java
	package com.eval;

	import static org.junit.jupiter.api.Assertions.assertEquals;

	import org.junit.jupiter.api.Test;

	class CallLoopConditionsOftenEnoughTest {

	    @Test
	    void testReturnZeroDueToXLessThan10() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(5, 15);
	        assertEquals(0, result);
	    }

	    @Test
	    void testReturnZeroDueToXGreaterThan20() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(25, 15);
	        assertEquals(0, result);
	    }

	    @Test
	    void testNoLoopIncrementX() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 20);
	        assertEquals(15, result);
	    }

	    @Test
	    void testLoopWithIncrementX() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(10, 30);
	        assertEquals((10 + 10) / 2, result);
	    }
	}
	```
2024/06/06 17:47:39 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn2892429725033059794resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.904 s
[INFO] Finished at: 2024-06-06T17:47:45+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 3.418803%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 17:47:45 Executes tests with 12 coverage objects
2024/06/06 17:47:45 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/CascadingIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CascadingIfElse {
	    static int cascadingIfElse(int i) {
	        if (i == 1) {
	            return 2;
	        } else if (i == 3) {
	            return 4;
	        } else {
	            return 5;
	        }
	    }
	}
	```
2024/06/06 17:47:54 Model "openrouter/openai/gpt-4-turbo" responded (8888 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.assertEquals;

	class CascadingIfElseTest {

	    @Test
	    void testCascadingIfElseWhenInputIsOne() {
	        assertEquals(2, CascadingIfElse.cascadingIfElse(1));
	    }

	    @Test
	    void testCascadingIfElseWhenInputIsThree() {
	        assertEquals(4, CascadingIfElse.cascadingIfElse(3));
	    }

	    @Test
	    void testCascadingIfElseForOtherInputs() {
	        assertEquals(5, CascadingIfElse.cascadingIfElse(0));
	        assertEquals(5, CascadingIfElse.cascadingIfElse(2));
	        assertEquals(5, CascadingIfElse.cascadingIfElse(-1));
	        assertEquals(5, CascadingIfElse.cascadingIfElse(100));
	    }
	}
	```
2024/06/06 17:47:54 $ symflower test --language java --workspace /tmp/eval-dev-quality2633743724/light --coverage-file /tmp/eval-dev-quality2633743724/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn14524433723045911299resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality2633743724/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality2633743724/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.904 s
[INFO] Finished at: 2024-06-06T17:48:00+02:00
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 17:48:00 Executes tests with 8 coverage objects
2024/06/06 17:48:00 Querying model "openrouter/openai/gpt-4-turbo" with:
	Given the following Java code file "src/main/java/com/eval/CollatzCalculator.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class CollatzCalculator {
	  static int computeStepCount(final int start) {
	    if (start <= 0) {
	      throw new IllegalArgumentException("Only positive integers are allowed");
	    }
	    if (start == 1) {
	      return 0;
	    }
	    final int next;

	    if (start % 2 == 0) {
	      next = start / 2;
	    } else {
	      next = 3 * start + 1;
	    }

	    return 1 + computeStepCount(next);
	  }
	}
	```
