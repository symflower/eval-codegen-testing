2024/06/06 12:33:29 Evaluating model "openrouter/phind/phind-codellama-34b" using language "golang" and repository "golang/light"
2024/06/06 12:33:29 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/06 12:33:42 Model "openrouter/phind/phind-codellama-34b" responded (13239 ms) with:
	```golang
	package light

	import "testing"

	func TestHasBalancedBrackets(t *testing.T) {
		tests := []struct {
			name     string
			input    string
			expected bool
		}{
			{
				name:     "empty string",
				input:    "",
				expected: true,
			},
			{
				name:     "single opening bracket",
				input:    "[",
				expected: false,
			},
			{
				name:     "single closing bracket",
				input:    "]",
				expected: false,
			},
			{
				name:     "matched brackets",
				input:    "[]",
				expected: true,
			},
			{
				name:     "sequence of matched brackets",
				input:    "[][][]",
				expected: true,
			},
			{
				name:     "unbalanced brackets",
				input:    "[][][][",
				expected: false,
			},
			{
				name:     "closing bracket before opening bracket",
				input:    "][]",
				expected: false,
			},
			{
				name:     "mixed non-bracket characters",
				input:    "abc[d]ef[gh]",
				expected: false,
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				actual := hasBalancedBrackets(test.input)
				if actual != test.expected {
					t.Errorf("input: %q, expected: %v, actual: %v", test.input, test.expected, actual)
				}
			})
		}
	}
	```
2024/06/06 12:33:42 $ go mod tidy
2024/06/06 12:33:42 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestHasBalancedBrackets
=== RUN   TestHasBalancedBrackets/empty_string
=== RUN   TestHasBalancedBrackets/single_opening_bracket
=== RUN   TestHasBalancedBrackets/single_closing_bracket
=== RUN   TestHasBalancedBrackets/matched_brackets
=== RUN   TestHasBalancedBrackets/sequence_of_matched_brackets
=== RUN   TestHasBalancedBrackets/unbalanced_brackets
=== RUN   TestHasBalancedBrackets/closing_bracket_before_opening_bracket
=== RUN   TestHasBalancedBrackets/mixed_non-bracket_characters
--- PASS: TestHasBalancedBrackets (0.00s)
    --- PASS: TestHasBalancedBrackets/empty_string (0.00s)
    --- PASS: TestHasBalancedBrackets/single_opening_bracket (0.00s)
    --- PASS: TestHasBalancedBrackets/single_closing_bracket (0.00s)
    --- PASS: TestHasBalancedBrackets/matched_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/sequence_of_matched_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/closing_bracket_before_opening_bracket (0.00s)
    --- PASS: TestHasBalancedBrackets/mixed_non-bracket_characters (0.00s)
PASS
coverage: 4.7% of statements
ok  	light	0.003s	coverage: 4.7% of statements

DONE 9 tests in 0.323s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:33:42 Executes tests with 5 coverage objects
2024/06/06 12:33:42 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/06 12:33:53 Model "openrouter/phind/phind-codellama-34b" responded (10412 ms) with:
	```golang
	package light

	import "testing"
	import "fmt"

	func TestBinarySearch(t *testing.T) {
		type args struct {
			a []int
			x int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Case 1: Search in simple array",
				args: args{a: []int{1, 2, 3, 4, 5}, x: 3},
				want: 2,
			},
			{
				name: "Case 2: Search for first element",
				args: args{a: []int{1, 2, 3, 4, 5}, x: 1},
				want: 0,
			},
			{
				name: "Case 3: Search for last element",
				args: args{a: []int{1, 2, 3, 4, 5}, x: 5},
				want: 4,
			},
			{
				name: "Case 4: Search element not in array",
				args: args{a: []int{1, 2, 3, 4, 5}, x: 6},
				want: -1,
			},
			{
				name: "Case 5: Search in empty array",
				args: args{a: []int{}, x: 1},
				want: -1,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := binarySearch(tt.args.a, tt.args.x); got != tt.want {
					t.Errorf("binarySearch() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:33:53 $ go mod tidy
2024/06/06 12:33:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./binarySearch_test.go:4:8: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:4:8: "fmt" imported and not used

DONE 0 tests, 1 error in 0.123s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:33:53 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/06 12:34:01 Model "openrouter/phind/phind-codellama-34b" responded (7317 ms) with:
	```golang
	package light

	import "testing"

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			name   string
			x, y   int
			expect int
		}{
			{"x==10", 10, 10, 10},
			{"x==20", 20, 10, 20},
			{"x_initially_less_than_10", 5, 10, 1},
			{"x_initially_greater_than_20", 25, 10, 1},
			{"x_incremented_10_times", 15, 11, 15},
			{"y_less_than_x", 25, 10, 12},
			{"y_greater_than_x", 10, 25, 5},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				result := callLoopConditionsOftenEnough(test.x, test.y)
				if result != test.expect {
					t.Errorf("expected %d, got %d", test.expect, result)
				}
			})
		}
	}
	```
2024/06/06 12:34:01 $ go mod tidy
2024/06/06 12:34:01 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x==10
=== RUN   TestCallLoopConditionsOftenEnough/x==20
=== RUN   TestCallLoopConditionsOftenEnough/x_initially_less_than_10
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
=== RUN   TestCallLoopConditionsOftenEnough/x_initially_greater_than_20
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
=== RUN   TestCallLoopConditionsOftenEnough/x_incremented_10_times
=== RUN   TestCallLoopConditionsOftenEnough/y_less_than_x
    callLoopConditionsOftenEnough_test.go:24: expected 12, got 0
=== RUN   TestCallLoopConditionsOftenEnough/y_greater_than_x
    callLoopConditionsOftenEnough_test.go:24: expected 5, got 14
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x==10 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x==20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_less_than_10 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_greater_than_20 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_incremented_10_times (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/y_less_than_x (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/y_greater_than_x (0.00s)
FAIL
coverage: 3.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/x_initially_less_than_10 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_less_than_10 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_initially_greater_than_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_greater_than_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/y_less_than_x (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 12, got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/y_less_than_x (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/y_greater_than_x (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 5, got 14
    --- FAIL: TestCallLoopConditionsOftenEnough/y_greater_than_x (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 8 tests, 5 failures in 0.315s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:34:01 Executes tests with 4 coverage objects
2024/06/06 12:34:01 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/06 12:34:09 Model "openrouter/phind/phind-codellama-34b" responded (7663 ms) with:
	package light_test

	import (
		"testing"

		"github.com/stretchr/testify/assert"
		. "github.com/stretchr/testify/require"
	)

	func Test_cascadingIfElse(t *testing.T) {
		assert := assert.New(t)
		require := Require()

		tests := []struct {
			name string
			i    int
			want int
		}{
			{
				name: "when i is 1, return 2",
				i:    1,
				want: 2,
			},
			{
				name: "when i is 3, return 4",
				i:    3,
				want: 4,
			},
			{
				name: "when i is not 1 or 3, return 5",
				i:    2,
				want: 5,
			},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				got := cascadingIfElse(tc.i)
				require.Equal(tc.want, got)
				assert.Equalf(tc.want, got, "input: %d", tc.i)
			})
		}
	}
2024/06/06 12:34:09 $ go mod tidy
go: finding module for package github.com/stretchr/testify/require
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
go: found github.com/stretchr/testify/require in github.com/stretchr/testify v1.9.0
2024/06/06 12:34:09 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./cascadingIfElse_test.go:7:2: "github.com/stretchr/testify/require" imported and not used
./cascadingIfElse_test.go:12:13: undefined: Require
./cascadingIfElse_test.go:38:11: undefined: cascadingIfElse
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./cascadingIfElse_test.go:7:2: "github.com/stretchr/testify/require" imported and not used
./cascadingIfElse_test.go:12:13: undefined: Require
./cascadingIfElse_test.go:38:11: undefined: cascadingIfElse

DONE 0 tests, 3 errors in 0.217s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:34:09 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/06 12:34:22 Model "openrouter/phind/phind-codellama-34b" responded (12468 ms) with:
	```golang
	package light

	import (
		"testing"
		"errors"
	)

	func TestComputeStepCount(t *testing.T) {
		type args struct {
			start int
		}

		tests := []struct {
			name    string
			args    args
			want    int
			wantErr error
		}{
			{
				name:    "positive even number",
				args:    args{start: 16},
				want:    8,
				wantErr: nil,
			},
			{
				name:    "positive odd number",
				args:    args{start: 15},
				want:    6,
				wantErr: nil,
			},
			{
				name:    "1 should return 0 steps",
				args:    args{start: 1},
				want:    0,
				wantErr: nil,
			},
			{
				name:    "negative number",
				args:    args{start: -5},
				want:    0,
				wantErr: errors.New("Only positive integers are allowed"),
			},
			{
				name:    "0 should return error",
				args:    args{start: 0},
				want:    0,
				wantErr: errors.New("Only positive integers are allowed"),
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := computeStepCount(tt.args.start)
				if (err != nil) != (tt.wantErr != nil) || (err != nil && tt.wantErr != nil && err.Error() != tt.wantErr.Error()) {
					t.Errorf("computeStepCount() error = %v, wantErr %v", err, tt.wantErr)
					return
				}

				if got != tt.want {
					t.Errorf("computeStepCount() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:34:22 $ go mod tidy
2024/06/06 12:34:22 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/positive_even_number
    collatzCalculator_test.go:60: computeStepCount() = 4, want 8
=== RUN   TestComputeStepCount/positive_odd_number
    collatzCalculator_test.go:60: computeStepCount() = 17, want 6
=== RUN   TestComputeStepCount/1_should_return_0_steps
=== RUN   TestComputeStepCount/negative_number
=== RUN   TestComputeStepCount/0_should_return_error
--- FAIL: TestComputeStepCount (0.00s)
    --- FAIL: TestComputeStepCount/positive_even_number (0.00s)
    --- FAIL: TestComputeStepCount/positive_odd_number (0.00s)
    --- PASS: TestComputeStepCount/1_should_return_0_steps (0.00s)
    --- PASS: TestComputeStepCount/negative_number (0.00s)
    --- PASS: TestComputeStepCount/0_should_return_error (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestComputeStepCount/positive_even_number (0.00s)
    collatzCalculator_test.go:60: computeStepCount() = 4, want 8
    --- FAIL: TestComputeStepCount/positive_even_number (0.00s)

=== FAIL: . TestComputeStepCount/positive_odd_number (0.00s)
    collatzCalculator_test.go:60: computeStepCount() = 17, want 6
    --- FAIL: TestComputeStepCount/positive_odd_number (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 6 tests, 3 failures in 0.323s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:34:22 Executes tests with 6 coverage objects
2024/06/06 12:34:22 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/06 12:34:30 Model "openrouter/phind/phind-codellama-34b" responded (8190 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestConditionsAnd(t *testing.T) {
		type args struct {
			x rune
			y rune
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{
				name: "A && B",
				args: args{x: 'A', y: 'B'},
				want: true,
			},
			{
				name: "A && !B",
				args: args{x: 'A', y: 'C'},
				want: false,
			},
			{
				name: "!A && B",
				args: args{x: 'C', y: 'B'},
				want: false,
			},
			{
				name: "!A && !B",
				args: args{x: 'C', y: 'D'},
				want: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := conditionsAnd(tt.args.x, tt.args.y); got != tt.want {
					t.Errorf("conditionsAnd() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:34:30 $ go mod tidy
2024/06/06 12:34:31 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestConditionsAnd
=== RUN   TestConditionsAnd/A_&&_B
=== RUN   TestConditionsAnd/A_&&_!B
=== RUN   TestConditionsAnd/!A_&&_B
=== RUN   TestConditionsAnd/!A_&&_!B
--- PASS: TestConditionsAnd (0.00s)
    --- PASS: TestConditionsAnd/A_&&_B (0.00s)
    --- PASS: TestConditionsAnd/A_&&_!B (0.00s)
    --- PASS: TestConditionsAnd/!A_&&_B (0.00s)
    --- PASS: TestConditionsAnd/!A_&&_!B (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 5 tests in 0.335s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:34:31 Executes tests with 2 coverage objects
2024/06/06 12:34:31 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/06 12:34:41 Model "openrouter/phind/phind-codellama-34b" responded (10510 ms) with:
	```golang
	package light

	import (
		"testing"
		"strings"
	)

	func TestEquilibriumIndices(t *testing.T) {
		type args struct {
			sequence []int
		}
		tests := []struct {
			name string
			args args
			want string
		}{
			{name: "case 1", args: args{sequence: []int{1, -1}}, want: "0;"},
			{name: "case 2", args: args{sequence: []int{1, 2, -1}}, want: "0;2;"},
			{name: "case 3", args: args{sequence: []int{-1, 1, 1}}, want: "0;1;"},
			{name: "case 4", args: args{sequence: []int{1, 2, 3, 2, 1}}, want: "0;1;2;3;4;"},
			{name: "case 5", args: args{sequence: []int{1, 2, 3, 4, 5}}, want: "0;1;2;3;4;"},
			{name: "case 6", args: args{sequence: []int{-7, 1, 5, 2, -4, 3}}, want: "0;1;2;3;4;"},
			{name: "case 7", args: args{sequence: []int{1, 2, 3, 4, 5, 7, -3, -1}}, want: "0;1;2;3;4;5;6;7;"},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := equilibriumIndices(tt.args.sequence); !strings.EqualFold(got, tt.want) {
					t.Errorf("equilibriumIndices() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:34:41 $ go mod tidy
2024/06/06 12:34:41 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/case_1
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;
=== RUN   TestEquilibriumIndices/case_2
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;2;
=== RUN   TestEquilibriumIndices/case_3
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;
=== RUN   TestEquilibriumIndices/case_4
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;2;3;4;
=== RUN   TestEquilibriumIndices/case_5
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;
=== RUN   TestEquilibriumIndices/case_6
    equilibriumIndices_test.go:28: equilibriumIndices() = 3;, want 0;1;2;3;4;
=== RUN   TestEquilibriumIndices/case_7
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;5;6;7;
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/case_1 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_2 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_3 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_4 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_5 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_6 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_7 (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestEquilibriumIndices/case_1 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;
    --- FAIL: TestEquilibriumIndices/case_1 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_2 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;2;
    --- FAIL: TestEquilibriumIndices/case_2 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_3 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;
    --- FAIL: TestEquilibriumIndices/case_3 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_4 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;2;3;4;
    --- FAIL: TestEquilibriumIndices/case_4 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_5 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;
    --- FAIL: TestEquilibriumIndices/case_5 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_6 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = 3;, want 0;1;2;3;4;
    --- FAIL: TestEquilibriumIndices/case_6 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_7 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;5;6;7;
    --- FAIL: TestEquilibriumIndices/case_7 (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 8 tests, 8 failures in 0.321s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:34:42 Executes tests with 4 coverage objects
2024/06/06 12:34:42 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/06 12:34:52 Model "openrouter/phind/phind-codellama-34b" responded (10140 ms) with:
	```golang
	package light

	import "testing"

	func Test_forLoop(t *testing.T) {
		type args struct {
			s int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Test1",
				args: args{
					s: 10,
				},
				want: 90,
			},
			{
				name: "Test2",
				args: args{
					s: 15,
				},
				want: 105,
			},
			{
				name: "Test3",
				args: args{
					s: 5,
				},
				want: 20,
			},
			{
				name: "Test4",
				args: args{
					s: 3,
				},
				want: 6,
			},
			{
				name: "Test5",
				args: args{
					s: 1,
				},
				want: 0,
			},
			{
				name: "Test6",
				args: args{
					s: 0,
				},
				want: 0,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := forLoop(tt.args.s); got != tt.want {
					t.Errorf("forLoop() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:34:52 $ go mod tidy
2024/06/06 12:34:52 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   Test_forLoop
=== RUN   Test_forLoop/Test1
=== RUN   Test_forLoop/Test2
    forLoop_test.go:60: forLoop() = 210, want 105
=== RUN   Test_forLoop/Test3
=== RUN   Test_forLoop/Test4
=== RUN   Test_forLoop/Test5
=== RUN   Test_forLoop/Test6
--- FAIL: Test_forLoop (0.00s)
    --- PASS: Test_forLoop/Test1 (0.00s)
    --- FAIL: Test_forLoop/Test2 (0.00s)
    --- PASS: Test_forLoop/Test3 (0.00s)
    --- PASS: Test_forLoop/Test4 (0.00s)
    --- PASS: Test_forLoop/Test5 (0.00s)
    --- PASS: Test_forLoop/Test6 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . Test_forLoop/Test2 (0.00s)
    forLoop_test.go:60: forLoop() = 210, want 105
    --- FAIL: Test_forLoop/Test2 (0.00s)

=== FAIL: . Test_forLoop (0.00s)

DONE 7 tests, 2 failures in 0.329s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:34:52 Executes tests with 3 coverage objects
2024/06/06 12:34:52 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/06 12:35:01 Model "openrouter/phind/phind-codellama-34b" responded (8365 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestJacobiSymbol(t *testing.T) {
		type TestData struct {
			k, n   uint64
			result int
			fail   bool
		}
		data := []TestData{
			{1, 3, 1, false},
			{2, 3, -1, false},
			{3, 3, 0, false},
			{4, 3, 1, false},
			{1, 5, 1, false},
			{4, 5, -1, false},
			{0, 1, 0, true},
			{2, 3, -1, false},
			{5, 7, 1, false},
		}
		for _, td := range data {
			res, err := jacobiSymbol(td.k, td.n)
			if td.fail {
				if err == nil {
					t.Errorf("Expected an error with k = %d, n = %d", td.k, td.n)
				}
			} else {
				if err != nil {
					t.Errorf("Unexpected error: %v", err)
				}
				if res != td.result {
					t.Errorf("Expected result %d, got %d for k = %d, n = %d", td.result, res, td.k, td.n)
				}
			}
		}
	}
	```
2024/06/06 12:35:01 $ go mod tidy
2024/06/06 12:35:01 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:35: Expected result -1, got 1 for k = 4, n = 5
    jacobiSymbol_test.go:28: Expected an error with k = 0, n = 1
    jacobiSymbol_test.go:35: Expected result 1, got -1 for k = 5, n = 7
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 8.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:35: Expected result -1, got 1 for k = 4, n = 5
    jacobiSymbol_test.go:28: Expected an error with k = 0, n = 1
    jacobiSymbol_test.go:35: Expected result 1, got -1 for k = 5, n = 7

DONE 1 tests, 1 failure in 0.332s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:35:01 Executes tests with 6 coverage objects
2024/06/06 12:35:01 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/06 12:35:09 Model "openrouter/phind/phind-codellama-34b" responded (7608 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		table := []struct{
			limit int
			expected []int
		}{
			{1, []int{1}},
			{2, []int{1, 2}},
			{3, []int{1, 2, 3}},
			{4, []int{1, 2, 3, 4}},
			{5, []int{1, 2, 3, 4, 5}},
		}

		for _, test := range table {
			result := initialiseKlarnerRadoSequence(test.limit)
			if len(result) != len(test.expected) {
				t.Fatalf("Expected length to be %d but got %d", len(test.expected), len(result))
			}
			for i, v := range result {
				if v != test.expected[i] {
					t.Fatalf("Expected %d at index %d but got %d", test.expected[i], i, v)
				}
			}
		}
	}
	```
2024/06/06 12:35:09 $ go mod tidy
2024/06/06 12:35:09 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestInitialiseKlarnerRadoSequence
    klarnerRadoSequence_test.go:22: Expected length to be 1 but got 2
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)
    klarnerRadoSequence_test.go:22: Expected length to be 1 but got 2

DONE 1 tests, 1 failure in 0.302s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:35:09 Executes tests with 3 coverage objects
2024/06/06 12:35:09 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/06 12:35:16 Model "openrouter/phind/phind-codellama-34b" responded (7126 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestMaximumValue(t *testing.T) {
		items := []Item{
			{weight: 5, value: 10},
			{weight: 4, value: 40},
			{weight: 6, value: 30},
			{weight: 3, value: 50},
		}

		tests := []struct {
			weight int
			expect int
		}{
			{weight: 0, expect: 0},
			{weight: 10, expect: 90},
			{weight: 11, expect: 130},
			{weight: 12, expect: 140},
			{weight: 13, expect: 150},
			{weight: 14, expect: 150},
		}

		for _, test := range tests {
			if got := maximumValue(test.weight, items); got != test.expect {
				t.Errorf("maximumValue(%d, items) = %d, expect %d", test.weight, got, test.expect)
			}
		}
	}
	```
2024/06/06 12:35:16 $ go mod tidy
2024/06/06 12:35:16 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMaximumValue
    knapsack_test.go:29: maximumValue(11, items) = 90, expect 130
    knapsack_test.go:29: maximumValue(12, items) = 100, expect 140
    knapsack_test.go:29: maximumValue(13, items) = 120, expect 150
    knapsack_test.go:29: maximumValue(14, items) = 120, expect 150
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:29: maximumValue(11, items) = 90, expect 130
    knapsack_test.go:29: maximumValue(12, items) = 100, expect 140
    knapsack_test.go:29: maximumValue(13, items) = 120, expect 150
    knapsack_test.go:29: maximumValue(14, items) = 120, expect 150

DONE 1 tests, 1 failure in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:35:17 Executes tests with 5 coverage objects
2024/06/06 12:35:17 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/06 12:35:26 Model "openrouter/phind/phind-codellama-34b" responded (9781 ms) with:
	```golang
	package light

	import (
	    "reflect"
	    "testing"
	)

	func TestLargestProperDivisor(t *testing.T) {
	    testData := []struct{
	        input int
	        expectOutput interface{}
	    }{
	        {input: 1, expectOutput: 1},
	        {input: 2, expectOutput: 1},
	        {input: 3, expectOutput: 1},
	        {input: 4, expectOutput: 2},
	        {input: 5, expectOutput: 1},
	        {input: 6, expectOutput: 3},
	        {input: 7, expectOutput: 1},
	        {input: 8, expectOutput: 4},
	        {input: 9, expectOutput: 3},
	        {input: 10, expectOutput: 5},
	        {input: 0, expectOutput: "Argument must be >= 1: 0"},
	        {input: -1, expectOutput: "Argument must be >= 1: -1"},
	        {input: -5, expectOutput: "Argument must be >= 1: -5"},
	    }

	    for _, test := range testData {
	        got, err := largestProperDivisor(test.input)
	        // Check for error if expected output is an error string
	        if err != nil {
	            if !reflect.DeepEqual(err.Error(), test.expectOutput) {
	                t.Errorf("For input %d, expected error to be '%v', but got '%v'", test.input, test.expectOutput, err)
	            }
	        } else {
	            if test.expectOutput != got {
	                t.Errorf("For input %d, expected %v, but got %v", test.input, test.expectOutput, got)
	            }
	        }
	    }
	}
	```
2024/06/06 12:35:26 $ go mod tidy
2024/06/06 12:35:26 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestLargestProperDivisor
--- PASS: TestLargestProperDivisor (0.00s)
PASS
coverage: 3.8% of statements
ok  	light	0.004s	coverage: 3.8% of statements

DONE 1 tests in 0.306s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:35:27 Executes tests with 4 coverage objects
2024/06/06 12:35:27 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/06 12:35:36 Model "openrouter/phind/phind-codellama-34b" responded (8642 ms) with:
	```golang
	package light

	import (
		"testing"
	    "fmt"
	)

	func TestMagicSquareOdd(t *testing.T) {
	    type args struct {
	        base int
	    }
	    tests := []struct {
	        name    string
	        args    args
	        wantErr bool
	    }{
	        {
	            name: "Test case 1",
	            args: args{
	                base: 3,
	            },
	            wantErr: false,
	        },
	        {
	            name: "Test case 2",
	            args: args{
	                base: 5,
	            },
	            wantErr: false,
	        },
	        {
	            name: "Test case 3",
	            args: args{
	                base: 7,
	            },
	            wantErr: false,
	        },
	        {
	            name: "Error case 1",
	            args: args{
	                base: 2,
	            },
	            wantErr: true,
	        },
	        {
	            name: "Error case 2",
	            args: args{
	                base: 4,
	            },
	            wantErr: true,
	        },
	    }
	    for _, tt := range tests {
	        t.Run(tt.name, func(t *testing.T) {
	            got, err := magicSquareOdd(tt.args.base)
	            if (err != nil) != tt.wantErr {
	                t.Errorf("magicSquareOdd() error = %v, wantErr %v", err, tt.wantErr)
	                return
	            }
	            if !tt.wantErr {
	                fmt.Println("Magic Square: ", got)
	            }
	        })
	    }
	}
	```
2024/06/06 12:35:36 $ go mod tidy
2024/06/06 12:35:36 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMagicSquareOdd
=== RUN   TestMagicSquareOdd/Test_case_1
Magic Square:  [[8 1 6] [3 5 7] [4 9 2]]
=== RUN   TestMagicSquareOdd/Test_case_2
Magic Square:  [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]]
=== RUN   TestMagicSquareOdd/Test_case_3
Magic Square:  [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]]
=== RUN   TestMagicSquareOdd/Error_case_1
=== RUN   TestMagicSquareOdd/Error_case_2
--- PASS: TestMagicSquareOdd (0.00s)
    --- PASS: TestMagicSquareOdd/Test_case_1 (0.00s)
    --- PASS: TestMagicSquareOdd/Test_case_2 (0.00s)
    --- PASS: TestMagicSquareOdd/Test_case_3 (0.00s)
    --- PASS: TestMagicSquareOdd/Error_case_1 (0.00s)
    --- PASS: TestMagicSquareOdd/Error_case_2 (0.00s)
PASS
coverage: 11.4% of statements
ok  	light	0.004s	coverage: 11.4% of statements

DONE 6 tests in 0.324s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:35:36 Executes tests with 8 coverage objects
2024/06/06 12:35:36 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/06 12:35:42 Model "openrouter/phind/phind-codellama-34b" responded (6041 ms) with:
	```golang
	package light

	import "testing"

	func TestMatchBytes(t *testing.T) {
		type TestData struct {
			s1  []byte
			s2  []byte
			exp bool
		}

		td := []TestData{
			{[]byte("test"), []byte("test"), true},
			{[]byte("test"), []byte("TEST"), true},
			{[]byte("test"), []byte("tesT"), true},
			{[]byte("test"), []byte("TEST1"), false},
			{[]byte("test1"), []byte("TEST"), false},
		}

		for _, d := range td {
			got := matchBytes(d.s1, d.s2)
			if got != d.exp {
				t.Errorf("matchBytes(%s, %s) = %v, want %v", d.s1, d.s2, got, d.exp)
			}
		}
	}
	```
2024/06/06 12:35:42 $ go mod tidy
2024/06/06 12:35:42 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMatchBytes
    matchBytes_test.go:23: matchBytes(test, TEST1) = true, want false
--- FAIL: TestMatchBytes (0.00s)
panic: runtime error: index out of range [4] with length 4 [recovered]
	panic: runtime error: index out of range [4] with length 4

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c1e0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c1e0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality744030985/light/matchBytes.go:6
light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality744030985/light/matchBytes_test.go:21 +0x526
testing.tRunner(0xc000007860, 0x588040)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:23: matchBytes(test, TEST1) = true, want false
panic: runtime error: index out of range [4] with length 4 [recovered]
	panic: runtime error: index out of range [4] with length 4

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c1e0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c1e0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality744030985/light/matchBytes.go:6
light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality744030985/light/matchBytes_test.go:21 +0x526
testing.tRunner(0xc000007860, 0x588040)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

DONE 1 tests, 1 failure in 0.326s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:35:43 Executes tests with 0 coverage objects
2024/06/06 12:35:43 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/06 12:35:58 Model "openrouter/phind/phind-codellama-34b" responded (15771 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestPascalsTriangle(t *testing.T) {
		cases := []struct {
			rows    int
			want    [][]int
			wantErr error
		}{
			{
				rows: 0,
				want: [][]int{},
			},
			{
				rows: 1,
				want: [][]int{
					{1},
				},
			},
			{
				rows: 2,
				want: [][]int{
					{1},
					{1, 1},
				},
			},
			{
				rows: 3,
				want: [][]int{
					{1},
					{1, 1},
					{1, 2, 1},
				},
			},
			{
				rows: 4,
				want: [][]int{
					{1},
					{1, 1},
					{1, 2, 1},
					{1, 3, 3, 1},
				},
			},
			{
				rows: -1,
				want: nil,
				wantErr: errors.New("Rows can't be negative!"),
			},
		}

		for _, c := range cases {
			got, err := pascalsTriangle(c.rows)
			if !(c.wantErr == nil && err == nil || c.wantErr != nil && c.wantErr.Error() == err.Error()) {
				t.Errorf("pascalsTriangle(%d) = %v, %v; want %v, %v", c.rows, got, err, c.want, c.wantErr)
			}
			if len(got) != len(c.want) {
				t.Errorf("pascalsTriangle(%d) = %v, %v; want %v, %v", c.rows, got, err, c.want, c.wantErr)
			}
			for i := 0; i < len(got); i++ {
				if len(got[i]) != len(c.want[i]) {
					t.Errorf("pascalsTriangle(%d) = %v, %v; want %v, %v", c.rows, got, err, c.want, c.wantErr)
				}
				for j := 0; j < len(got[i]); j++ {
					if got[i][j] != c.want[i][j] {
						t.Errorf("pascalsTriangle(%d) = %v, %v; want %v, %v", c.rows, got, err, c.want, c.wantErr)
					}
				}
			}
		}
	}
	```
2024/06/06 12:35:58 $ go mod tidy
2024/06/06 12:35:58 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./pascalsTriangle_test.go:50:13: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:50:13: undefined: errors

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:35:59 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/06 12:36:13 Model "openrouter/phind/phind-codellama-34b" responded (14210 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestExtractDigits(t *testing.T) {
		testCases := []struct {
			description string
			input       string
			output      string
			errExpected bool
		}{
			{
				description: "given a valid phone number with spaces",
				input:       "123 456-7890",
				output:      "1234567890",
				errExpected: false,
			},
			{
				description: "given a valid phone number with parenthesis",
				input:       "(123) 456-7890",
				output:      "1234567890",
				errExpected: false,
			},
			{
				description: "given a valid phone number with dots",
				input:       "123.456.7890",
				output:      "1234567890",
				errExpected: false,
			},
			{
				description: "given a valid phone number with hyphen",
				input:       "123-456-7890",
				output:      "1234567890",
				errExpected: false,
			},
			{
				description: "given a valid phone number with plus",
				input:       "+1-123-456-7890",
				output:      "11234567890",
				errExpected: false,
			},
			{
				description: "given invalid phone number with punctuations",
				input:       "123-456-7890!",
				output:      "",
				errExpected: true,
			},
		}

		for _, tc := range testCases {
			t.Run(tc.description, func(t *testing.T) {
				actual, err := extractDigits(tc.input)

				if tc.errExpected && err == nil {
					t.Errorf("Expected error, but got none")
				}

				if !tc.errExpected && err != nil {
					t.Errorf("Expected no error, but got %v", err)
				}

				if err == nil && actual != tc.output {
					t.Errorf("Expected %s, but got %s", tc.output, actual)
				}
			})
		}
	}
	```
2024/06/06 12:36:13 $ go mod tidy
2024/06/06 12:36:13 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestExtractDigits
=== RUN   TestExtractDigits/given_a_valid_phone_number_with_spaces
=== RUN   TestExtractDigits/given_a_valid_phone_number_with_parenthesis
=== RUN   TestExtractDigits/given_a_valid_phone_number_with_dots
=== RUN   TestExtractDigits/given_a_valid_phone_number_with_hyphen
=== RUN   TestExtractDigits/given_a_valid_phone_number_with_plus
=== RUN   TestExtractDigits/given_invalid_phone_number_with_punctuations
--- PASS: TestExtractDigits (0.00s)
    --- PASS: TestExtractDigits/given_a_valid_phone_number_with_spaces (0.00s)
    --- PASS: TestExtractDigits/given_a_valid_phone_number_with_parenthesis (0.00s)
    --- PASS: TestExtractDigits/given_a_valid_phone_number_with_dots (0.00s)
    --- PASS: TestExtractDigits/given_a_valid_phone_number_with_hyphen (0.00s)
    --- PASS: TestExtractDigits/given_a_valid_phone_number_with_plus (0.00s)
    --- PASS: TestExtractDigits/given_invalid_phone_number_with_punctuations (0.00s)
PASS
coverage: 3.8% of statements
ok  	light	0.005s	coverage: 3.8% of statements

DONE 7 tests in 0.328s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:36:14 Executes tests with 5 coverage objects
2024/06/06 12:36:14 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/06 12:36:21 Model "openrouter/phind/phind-codellama-34b" responded (7470 ms) with:
	```golang
	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{
				name: "Case 1: When input is 1",
				i:    1,
				want: 0,
			},
			{
				name: "Case 2: When input is not 1",
				i:    2,
				want: 1,
			},
			{
				name: "Case 3: When input is 0",
				i:    0,
				want: 1,
			},
			{
				name: "Case 4: When input is -1",
				i:    -1,
				want: 1,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := simpleIfElse(tt.i); got != tt.want {
					t.Errorf("simpleIfElse() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:36:21 $ go mod tidy
2024/06/06 12:36:21 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleIfElse
=== RUN   TestSimpleIfElse/Case_1:_When_input_is_1
=== RUN   TestSimpleIfElse/Case_2:_When_input_is_not_1
=== RUN   TestSimpleIfElse/Case_3:_When_input_is_0
=== RUN   TestSimpleIfElse/Case_4:_When_input_is_-1
--- PASS: TestSimpleIfElse (0.00s)
    --- PASS: TestSimpleIfElse/Case_1:_When_input_is_1 (0.00s)
    --- PASS: TestSimpleIfElse/Case_2:_When_input_is_not_1 (0.00s)
    --- PASS: TestSimpleIfElse/Case_3:_When_input_is_0 (0.00s)
    --- PASS: TestSimpleIfElse/Case_4:_When_input_is_-1 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 5 tests in 0.323s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:36:21 Executes tests with 2 coverage objects
2024/06/06 12:36:21 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/06 12:36:25 Model "openrouter/phind/phind-codellama-34b" responded (4045 ms) with:
	```golang
	package light

	import "testing"

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			input int
			want  int
		}{
			{0, 1},
			{1, 0},
		}
		for _, tt := range tests {
			t.Run("simpleSwitchWithReturn Test", func(t *testing.T) {
				got := simpleSwitchWithReturn(tt.input)
				if got != tt.want {
					t.Errorf("simpleSwitchWithReturn() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:36:25 $ go mod tidy
2024/06/06 12:36:25 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
=== RUN   TestSimpleSwitchWithReturn/simpleSwitchWithReturn_Test
=== RUN   TestSimpleSwitchWithReturn/simpleSwitchWithReturn_Test#01
--- PASS: TestSimpleSwitchWithReturn (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/simpleSwitchWithReturn_Test (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/simpleSwitchWithReturn_Test#01 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 3 tests in 0.318s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:36:26 Executes tests with 3 coverage objects
2024/06/06 12:36:26 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/06 12:36:34 Model "openrouter/phind/phind-codellama-34b" responded (8351 ms) with:
	```golang
	package light_test

	import (
		"light"
		"testing"
	)

	func TestIsSorted(t *testing.T) {
		testcase := []struct{
			name string
			input []int
			output bool
		}{
			{
				name: "Ascending order",
				input: []int{1, 2, 3, 4, 5},
				output: true,
			},
			{
				name: "Not sorted",
				input: []int{1, 3, 2, 4, 5},
				output: false,
			},
			{
				name: "Descending order",
				input: []int{5, 4, 3, 2, 1},
				output: false,
			},
			{
				name: "One element",
				input: []int{1},
				output: true,
			},
			{
				name: "Empty slice",
				input: []int{},
				output: true,
			},
		}

		for _, tc := range testcase {
			t.Run(tc.name, func(t *testing.T) {
				res := light.isSorted(tc.input)
				if res != tc.output {
					t.Errorf("Expected: %v, got: %v", tc.output, res)
				}
			})
		}
	}
	```
2024/06/06 12:36:34 $ go mod tidy
2024/06/06 12:36:34 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./sort_test.go:43:17: undefined: light.isSorted
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:43:17: undefined: light.isSorted

DONE 0 tests, 1 error in 0.107s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:36:34 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/06 12:36:42 Model "openrouter/phind/phind-codellama-34b" responded (7548 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestTypeArrayAccess(t *testing.T) {
		type args struct {
			x []int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Test array containing 123 as first element",
				args: args{x: []int{123, 456, 789}},
				want: 123,
			},
			{
				name: "Test array not containing 123 as first element",
				args: args{x: []int{456, 789, 123}},
				want: 3,
			},
			{
				name: "Test empty array",
				args: args{x: []int{}},
				want: 3,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayAccess(tt.args.x); got != tt.want {
					t.Errorf("typeArrayAccess() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:36:42 $ go mod tidy
2024/06/06 12:36:42 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayAccess
=== RUN   TestTypeArrayAccess/Test_array_containing_123_as_first_element
=== RUN   TestTypeArrayAccess/Test_array_not_containing_123_as_first_element
=== RUN   TestTypeArrayAccess/Test_empty_array
--- FAIL: TestTypeArrayAccess (0.00s)
    --- PASS: TestTypeArrayAccess/Test_array_containing_123_as_first_element (0.00s)
    --- PASS: TestTypeArrayAccess/Test_array_not_containing_123_as_first_element (0.00s)
    --- FAIL: TestTypeArrayAccess/Test_empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 9 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018060})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018060?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess.go:4
light.TestTypeArrayAccess.func1(0xc0001b2000?)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess_test.go:34 +0xfa
testing.tRunner(0xc0001b21a0, 0xc000026350)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayAccess/Test_empty_array (0.00s)
    --- FAIL: TestTypeArrayAccess/Test_empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 9 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018060})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018060?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess.go:4
light.TestTypeArrayAccess.func1(0xc0001b2000?)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess_test.go:34 +0xfa
testing.tRunner(0xc0001b21a0, 0xc000026350)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayAccess (0.00s)

DONE 4 tests, 2 failures in 0.294s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:36:42 Executes tests with 0 coverage objects
2024/06/06 12:36:42 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/06 12:36:51 Model "openrouter/phind/phind-codellama-34b" responded (8247 ms) with:
	```golang
	package light

	import "testing"

	func Test_typeArrayConsecutiveAccess(t *testing.T) {
		type args struct {
			input []int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "both 0 and 8",
				args: args{[]int{0, 8, 1, 2}},
				want: 2,
			},
			{
				name: "only 0",
				args: args{[]int{0, 1, 2, 3}},
				want: 1,
			},
			{
				name: "only 8",
				args: args{[]int{1, 8, 3, 4}},
				want: 1,
			},
			{
				name: "none",
				args: args{[]int{1, 2, 3, 4}},
				want: 0,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayConsecutiveAccess(tt.args.input); got != tt.want {
					t.Errorf("typeArrayConsecutiveAccess() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:36:51 $ go mod tidy
2024/06/06 12:36:51 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   Test_typeArrayConsecutiveAccess
=== RUN   Test_typeArrayConsecutiveAccess/both_0_and_8
=== RUN   Test_typeArrayConsecutiveAccess/only_0
=== RUN   Test_typeArrayConsecutiveAccess/only_8
=== RUN   Test_typeArrayConsecutiveAccess/none
--- PASS: Test_typeArrayConsecutiveAccess (0.00s)
    --- PASS: Test_typeArrayConsecutiveAccess/both_0_and_8 (0.00s)
    --- PASS: Test_typeArrayConsecutiveAccess/only_0 (0.00s)
    --- PASS: Test_typeArrayConsecutiveAccess/only_8 (0.00s)
    --- PASS: Test_typeArrayConsecutiveAccess/none (0.00s)
PASS
coverage: 2.8% of statements
ok  	light	0.004s	coverage: 2.8% of statements

DONE 5 tests in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:36:51 Executes tests with 3 coverage objects
2024/06/06 12:36:51 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/06 12:37:00 Model "openrouter/phind/phind-codellama-34b" responded (8868 ms) with:
	```golang
	package light

	import "testing"

	// TestTypeArrayMultidimensionalArrayLength tests the typeArrayMultidimensionalArrayLength function
	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name string
			x    [][]int
			want int
		}{
			{
				name: "Case 1",
				x: [][]int{
					{1, 2},
				},
				want: 1,
			},
			{
				name: "Case 2",
				x: [][]int{
					{1, 2},
					{3, 4},
				},
				want: 2,
			},
			{
				name: "Case 3",
				x: [][]int{
					{1},
					{2},
				},
				want: 1,
			},
			{
				name: "Case 4",
				x:    [][]int{},
				want: 0,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayMultidimensionalArrayLength(tt.x); got != tt.want {
					t.Errorf("typeArrayMultidimensionalArrayLength() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:37:00 $ go mod tidy
2024/06/06 12:37:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_1
    typeArrayMultidimensionalArrayLength_test.go:44: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_2
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_3
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_4
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Case_1 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Case_2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Case_3 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Case_4 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Case_1 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:44: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Case_1 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 5 tests, 2 failures in 0.358s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:37:01 Executes tests with 3 coverage objects
2024/06/06 12:37:01 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/06 12:37:07 Model "openrouter/phind/phind-codellama-34b" responded (6516 ms) with:
	```golang
	package light

	import "testing"

	func TestValidDate(t *testing.T) {
		testData := []struct {
			day   int
			month int
			year  int
			valid bool
		}{
			{1, 1, 1583, true},
			{29, 2, 2000, true},
			{29, 2, 2001, false},
			{31, 12, 3000, true},
			{32, 1, 2022, false},
			{0, 1, 2021, false},
			{1, 0, 2021, false},
			{1, 13, 2021, false},
		}

		for _, test := range testData {
			result := validDate(test.day, test.month, test.year)
			if result != test.valid {
				t.Errorf("Expected validDate(%d, %d, %d) to return %t, but got %t.", test.day, test.month, test.year, test.valid, result)
			}
		}
	}
	```
2024/06/06 12:37:07 $ go mod tidy
2024/06/06 12:37:07 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestValidDate
    validateDate_test.go:25: Expected validDate(29, 2, 2000) to return true, but got false.
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:25: Expected validDate(29, 2, 2000) to return true, but got false.

DONE 1 tests, 1 failure in 0.337s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:37:08 Executes tests with 7 coverage objects
2024/06/06 12:37:08 Evaluated model "openrouter/phind/phind-codellama-34b" using language "golang" and repository "golang/light": encountered 15 problems: [exit status 1
# light [light.test]
./binarySearch_test.go:4:8: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:4:8: "fmt" imported and not used

DONE 0 tests, 1 error in 0.123s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./binarySearch_test.go:4:8: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:4:8: "fmt" imported and not used

DONE 0 tests, 1 error in 0.123s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x==10
=== RUN   TestCallLoopConditionsOftenEnough/x==20
=== RUN   TestCallLoopConditionsOftenEnough/x_initially_less_than_10
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
=== RUN   TestCallLoopConditionsOftenEnough/x_initially_greater_than_20
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
=== RUN   TestCallLoopConditionsOftenEnough/x_incremented_10_times
=== RUN   TestCallLoopConditionsOftenEnough/y_less_than_x
    callLoopConditionsOftenEnough_test.go:24: expected 12, got 0
=== RUN   TestCallLoopConditionsOftenEnough/y_greater_than_x
    callLoopConditionsOftenEnough_test.go:24: expected 5, got 14
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x==10 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x==20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_less_than_10 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_greater_than_20 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_incremented_10_times (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/y_less_than_x (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/y_greater_than_x (0.00s)
FAIL
coverage: 3.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/x_initially_less_than_10 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_less_than_10 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_initially_greater_than_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_greater_than_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/y_less_than_x (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 12, got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/y_less_than_x (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/y_greater_than_x (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 5, got 14
    --- FAIL: TestCallLoopConditionsOftenEnough/y_greater_than_x (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 8 tests, 5 failures in 0.315s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x==10
=== RUN   TestCallLoopConditionsOftenEnough/x==20
=== RUN   TestCallLoopConditionsOftenEnough/x_initially_less_than_10
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
=== RUN   TestCallLoopConditionsOftenEnough/x_initially_greater_than_20
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
=== RUN   TestCallLoopConditionsOftenEnough/x_incremented_10_times
=== RUN   TestCallLoopConditionsOftenEnough/y_less_than_x
    callLoopConditionsOftenEnough_test.go:24: expected 12, got 0
=== RUN   TestCallLoopConditionsOftenEnough/y_greater_than_x
    callLoopConditionsOftenEnough_test.go:24: expected 5, got 14
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x==10 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x==20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_less_than_10 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_greater_than_20 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_incremented_10_times (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/y_less_than_x (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/y_greater_than_x (0.00s)
FAIL
coverage: 3.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/x_initially_less_than_10 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_less_than_10 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_initially_greater_than_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 1, got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/x_initially_greater_than_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/y_less_than_x (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 12, got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/y_less_than_x (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/y_greater_than_x (0.00s)
    callLoopConditionsOftenEnough_test.go:24: expected 5, got 14
    --- FAIL: TestCallLoopConditionsOftenEnough/y_greater_than_x (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 8 tests, 5 failures in 0.315s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light_test [light.test]
./cascadingIfElse_test.go:7:2: "github.com/stretchr/testify/require" imported and not used
./cascadingIfElse_test.go:12:13: undefined: Require
./cascadingIfElse_test.go:38:11: undefined: cascadingIfElse
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./cascadingIfElse_test.go:7:2: "github.com/stretchr/testify/require" imported and not used
./cascadingIfElse_test.go:12:13: undefined: Require
./cascadingIfElse_test.go:38:11: undefined: cascadingIfElse

DONE 0 tests, 3 errors in 0.217s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./cascadingIfElse_test.go:7:2: "github.com/stretchr/testify/require" imported and not used
./cascadingIfElse_test.go:12:13: undefined: Require
./cascadingIfElse_test.go:38:11: undefined: cascadingIfElse
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./cascadingIfElse_test.go:7:2: "github.com/stretchr/testify/require" imported and not used
./cascadingIfElse_test.go:12:13: undefined: Require
./cascadingIfElse_test.go:38:11: undefined: cascadingIfElse

DONE 0 tests, 3 errors in 0.217s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

cascadingIfElse.go exit status 1
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/positive_even_number
    collatzCalculator_test.go:60: computeStepCount() = 4, want 8
=== RUN   TestComputeStepCount/positive_odd_number
    collatzCalculator_test.go:60: computeStepCount() = 17, want 6
=== RUN   TestComputeStepCount/1_should_return_0_steps
=== RUN   TestComputeStepCount/negative_number
=== RUN   TestComputeStepCount/0_should_return_error
--- FAIL: TestComputeStepCount (0.00s)
    --- FAIL: TestComputeStepCount/positive_even_number (0.00s)
    --- FAIL: TestComputeStepCount/positive_odd_number (0.00s)
    --- PASS: TestComputeStepCount/1_should_return_0_steps (0.00s)
    --- PASS: TestComputeStepCount/negative_number (0.00s)
    --- PASS: TestComputeStepCount/0_should_return_error (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestComputeStepCount/positive_even_number (0.00s)
    collatzCalculator_test.go:60: computeStepCount() = 4, want 8
    --- FAIL: TestComputeStepCount/positive_even_number (0.00s)

=== FAIL: . TestComputeStepCount/positive_odd_number (0.00s)
    collatzCalculator_test.go:60: computeStepCount() = 17, want 6
    --- FAIL: TestComputeStepCount/positive_odd_number (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 6 tests, 3 failures in 0.323s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/positive_even_number
    collatzCalculator_test.go:60: computeStepCount() = 4, want 8
=== RUN   TestComputeStepCount/positive_odd_number
    collatzCalculator_test.go:60: computeStepCount() = 17, want 6
=== RUN   TestComputeStepCount/1_should_return_0_steps
=== RUN   TestComputeStepCount/negative_number
=== RUN   TestComputeStepCount/0_should_return_error
--- FAIL: TestComputeStepCount (0.00s)
    --- FAIL: TestComputeStepCount/positive_even_number (0.00s)
    --- FAIL: TestComputeStepCount/positive_odd_number (0.00s)
    --- PASS: TestComputeStepCount/1_should_return_0_steps (0.00s)
    --- PASS: TestComputeStepCount/negative_number (0.00s)
    --- PASS: TestComputeStepCount/0_should_return_error (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestComputeStepCount/positive_even_number (0.00s)
    collatzCalculator_test.go:60: computeStepCount() = 4, want 8
    --- FAIL: TestComputeStepCount/positive_even_number (0.00s)

=== FAIL: . TestComputeStepCount/positive_odd_number (0.00s)
    collatzCalculator_test.go:60: computeStepCount() = 17, want 6
    --- FAIL: TestComputeStepCount/positive_odd_number (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 6 tests, 3 failures in 0.323s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/case_1
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;
=== RUN   TestEquilibriumIndices/case_2
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;2;
=== RUN   TestEquilibriumIndices/case_3
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;
=== RUN   TestEquilibriumIndices/case_4
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;2;3;4;
=== RUN   TestEquilibriumIndices/case_5
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;
=== RUN   TestEquilibriumIndices/case_6
    equilibriumIndices_test.go:28: equilibriumIndices() = 3;, want 0;1;2;3;4;
=== RUN   TestEquilibriumIndices/case_7
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;5;6;7;
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/case_1 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_2 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_3 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_4 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_5 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_6 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_7 (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestEquilibriumIndices/case_1 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;
    --- FAIL: TestEquilibriumIndices/case_1 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_2 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;2;
    --- FAIL: TestEquilibriumIndices/case_2 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_3 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;
    --- FAIL: TestEquilibriumIndices/case_3 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_4 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;2;3;4;
    --- FAIL: TestEquilibriumIndices/case_4 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_5 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;
    --- FAIL: TestEquilibriumIndices/case_5 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_6 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = 3;, want 0;1;2;3;4;
    --- FAIL: TestEquilibriumIndices/case_6 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_7 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;5;6;7;
    --- FAIL: TestEquilibriumIndices/case_7 (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 8 tests, 8 failures in 0.321s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/case_1
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;
=== RUN   TestEquilibriumIndices/case_2
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;2;
=== RUN   TestEquilibriumIndices/case_3
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;
=== RUN   TestEquilibriumIndices/case_4
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;2;3;4;
=== RUN   TestEquilibriumIndices/case_5
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;
=== RUN   TestEquilibriumIndices/case_6
    equilibriumIndices_test.go:28: equilibriumIndices() = 3;, want 0;1;2;3;4;
=== RUN   TestEquilibriumIndices/case_7
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;5;6;7;
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/case_1 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_2 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_3 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_4 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_5 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_6 (0.00s)
    --- FAIL: TestEquilibriumIndices/case_7 (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestEquilibriumIndices/case_1 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;
    --- FAIL: TestEquilibriumIndices/case_1 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_2 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;2;
    --- FAIL: TestEquilibriumIndices/case_2 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_3 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;
    --- FAIL: TestEquilibriumIndices/case_3 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_4 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = 2;, want 0;1;2;3;4;
    --- FAIL: TestEquilibriumIndices/case_4 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_5 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;
    --- FAIL: TestEquilibriumIndices/case_5 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_6 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = 3;, want 0;1;2;3;4;
    --- FAIL: TestEquilibriumIndices/case_6 (0.00s)

=== FAIL: . TestEquilibriumIndices/case_7 (0.00s)
    equilibriumIndices_test.go:28: equilibriumIndices() = , want 0;1;2;3;4;5;6;7;
    --- FAIL: TestEquilibriumIndices/case_7 (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 8 tests, 8 failures in 0.321s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   Test_forLoop
=== RUN   Test_forLoop/Test1
=== RUN   Test_forLoop/Test2
    forLoop_test.go:60: forLoop() = 210, want 105
=== RUN   Test_forLoop/Test3
=== RUN   Test_forLoop/Test4
=== RUN   Test_forLoop/Test5
=== RUN   Test_forLoop/Test6
--- FAIL: Test_forLoop (0.00s)
    --- PASS: Test_forLoop/Test1 (0.00s)
    --- FAIL: Test_forLoop/Test2 (0.00s)
    --- PASS: Test_forLoop/Test3 (0.00s)
    --- PASS: Test_forLoop/Test4 (0.00s)
    --- PASS: Test_forLoop/Test5 (0.00s)
    --- PASS: Test_forLoop/Test6 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . Test_forLoop/Test2 (0.00s)
    forLoop_test.go:60: forLoop() = 210, want 105
    --- FAIL: Test_forLoop/Test2 (0.00s)

=== FAIL: . Test_forLoop (0.00s)

DONE 7 tests, 2 failures in 0.329s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   Test_forLoop
=== RUN   Test_forLoop/Test1
=== RUN   Test_forLoop/Test2
    forLoop_test.go:60: forLoop() = 210, want 105
=== RUN   Test_forLoop/Test3
=== RUN   Test_forLoop/Test4
=== RUN   Test_forLoop/Test5
=== RUN   Test_forLoop/Test6
--- FAIL: Test_forLoop (0.00s)
    --- PASS: Test_forLoop/Test1 (0.00s)
    --- FAIL: Test_forLoop/Test2 (0.00s)
    --- PASS: Test_forLoop/Test3 (0.00s)
    --- PASS: Test_forLoop/Test4 (0.00s)
    --- PASS: Test_forLoop/Test5 (0.00s)
    --- PASS: Test_forLoop/Test6 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . Test_forLoop/Test2 (0.00s)
    forLoop_test.go:60: forLoop() = 210, want 105
    --- FAIL: Test_forLoop/Test2 (0.00s)

=== FAIL: . Test_forLoop (0.00s)

DONE 7 tests, 2 failures in 0.329s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:35: Expected result -1, got 1 for k = 4, n = 5
    jacobiSymbol_test.go:28: Expected an error with k = 0, n = 1
    jacobiSymbol_test.go:35: Expected result 1, got -1 for k = 5, n = 7
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 8.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:35: Expected result -1, got 1 for k = 4, n = 5
    jacobiSymbol_test.go:28: Expected an error with k = 0, n = 1
    jacobiSymbol_test.go:35: Expected result 1, got -1 for k = 5, n = 7

DONE 1 tests, 1 failure in 0.332s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:35: Expected result -1, got 1 for k = 4, n = 5
    jacobiSymbol_test.go:28: Expected an error with k = 0, n = 1
    jacobiSymbol_test.go:35: Expected result 1, got -1 for k = 5, n = 7
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 8.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:35: Expected result -1, got 1 for k = 4, n = 5
    jacobiSymbol_test.go:28: Expected an error with k = 0, n = 1
    jacobiSymbol_test.go:35: Expected result 1, got -1 for k = 5, n = 7

DONE 1 tests, 1 failure in 0.332s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestInitialiseKlarnerRadoSequence
    klarnerRadoSequence_test.go:22: Expected length to be 1 but got 2
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)
    klarnerRadoSequence_test.go:22: Expected length to be 1 but got 2

DONE 1 tests, 1 failure in 0.302s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestInitialiseKlarnerRadoSequence
    klarnerRadoSequence_test.go:22: Expected length to be 1 but got 2
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)
    klarnerRadoSequence_test.go:22: Expected length to be 1 but got 2

DONE 1 tests, 1 failure in 0.302s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestMaximumValue
    knapsack_test.go:29: maximumValue(11, items) = 90, expect 130
    knapsack_test.go:29: maximumValue(12, items) = 100, expect 140
    knapsack_test.go:29: maximumValue(13, items) = 120, expect 150
    knapsack_test.go:29: maximumValue(14, items) = 120, expect 150
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:29: maximumValue(11, items) = 90, expect 130
    knapsack_test.go:29: maximumValue(12, items) = 100, expect 140
    knapsack_test.go:29: maximumValue(13, items) = 120, expect 150
    knapsack_test.go:29: maximumValue(14, items) = 120, expect 150

DONE 1 tests, 1 failure in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMaximumValue
    knapsack_test.go:29: maximumValue(11, items) = 90, expect 130
    knapsack_test.go:29: maximumValue(12, items) = 100, expect 140
    knapsack_test.go:29: maximumValue(13, items) = 120, expect 150
    knapsack_test.go:29: maximumValue(14, items) = 120, expect 150
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:29: maximumValue(11, items) = 90, expect 130
    knapsack_test.go:29: maximumValue(12, items) = 100, expect 140
    knapsack_test.go:29: maximumValue(13, items) = 120, expect 150
    knapsack_test.go:29: maximumValue(14, items) = 120, expect 150

DONE 1 tests, 1 failure in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestMatchBytes
    matchBytes_test.go:23: matchBytes(test, TEST1) = true, want false
--- FAIL: TestMatchBytes (0.00s)
panic: runtime error: index out of range [4] with length 4 [recovered]
	panic: runtime error: index out of range [4] with length 4

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c1e0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c1e0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality744030985/light/matchBytes.go:6
light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality744030985/light/matchBytes_test.go:21 +0x526
testing.tRunner(0xc000007860, 0x588040)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:23: matchBytes(test, TEST1) = true, want false
panic: runtime error: index out of range [4] with length 4 [recovered]
	panic: runtime error: index out of range [4] with length 4

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c1e0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c1e0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality744030985/light/matchBytes.go:6
light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality744030985/light/matchBytes_test.go:21 +0x526
testing.tRunner(0xc000007860, 0x588040)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

DONE 1 tests, 1 failure in 0.326s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMatchBytes
    matchBytes_test.go:23: matchBytes(test, TEST1) = true, want false
--- FAIL: TestMatchBytes (0.00s)
panic: runtime error: index out of range [4] with length 4 [recovered]
	panic: runtime error: index out of range [4] with length 4

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c1e0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c1e0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality744030985/light/matchBytes.go:6
light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality744030985/light/matchBytes_test.go:21 +0x526
testing.tRunner(0xc000007860, 0x588040)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:23: matchBytes(test, TEST1) = true, want false
panic: runtime error: index out of range [4] with length 4 [recovered]
	panic: runtime error: index out of range [4] with length 4

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c1e0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c1e0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality744030985/light/matchBytes.go:6
light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality744030985/light/matchBytes_test.go:21 +0x526
testing.tRunner(0xc000007860, 0x588040)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

DONE 1 tests, 1 failure in 0.326s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./pascalsTriangle_test.go:50:13: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:50:13: undefined: errors

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./pascalsTriangle_test.go:50:13: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:50:13: undefined: errors

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light_test [light.test]
./sort_test.go:43:17: undefined: light.isSorted
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:43:17: undefined: light.isSorted

DONE 0 tests, 1 error in 0.107s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./sort_test.go:43:17: undefined: light.isSorted
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:43:17: undefined: light.isSorted

DONE 0 tests, 1 error in 0.107s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

sort.go exit status 1
=== RUN   TestTypeArrayAccess
=== RUN   TestTypeArrayAccess/Test_array_containing_123_as_first_element
=== RUN   TestTypeArrayAccess/Test_array_not_containing_123_as_first_element
=== RUN   TestTypeArrayAccess/Test_empty_array
--- FAIL: TestTypeArrayAccess (0.00s)
    --- PASS: TestTypeArrayAccess/Test_array_containing_123_as_first_element (0.00s)
    --- PASS: TestTypeArrayAccess/Test_array_not_containing_123_as_first_element (0.00s)
    --- FAIL: TestTypeArrayAccess/Test_empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 9 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018060})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018060?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess.go:4
light.TestTypeArrayAccess.func1(0xc0001b2000?)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess_test.go:34 +0xfa
testing.tRunner(0xc0001b21a0, 0xc000026350)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayAccess/Test_empty_array (0.00s)
    --- FAIL: TestTypeArrayAccess/Test_empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 9 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018060})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018060?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess.go:4
light.TestTypeArrayAccess.func1(0xc0001b2000?)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess_test.go:34 +0xfa
testing.tRunner(0xc0001b21a0, 0xc000026350)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayAccess (0.00s)

DONE 4 tests, 2 failures in 0.294s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayAccess
=== RUN   TestTypeArrayAccess/Test_array_containing_123_as_first_element
=== RUN   TestTypeArrayAccess/Test_array_not_containing_123_as_first_element
=== RUN   TestTypeArrayAccess/Test_empty_array
--- FAIL: TestTypeArrayAccess (0.00s)
    --- PASS: TestTypeArrayAccess/Test_array_containing_123_as_first_element (0.00s)
    --- PASS: TestTypeArrayAccess/Test_array_not_containing_123_as_first_element (0.00s)
    --- FAIL: TestTypeArrayAccess/Test_empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 9 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018060})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018060?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess.go:4
light.TestTypeArrayAccess.func1(0xc0001b2000?)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess_test.go:34 +0xfa
testing.tRunner(0xc0001b21a0, 0xc000026350)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayAccess/Test_empty_array (0.00s)
    --- FAIL: TestTypeArrayAccess/Test_empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 9 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018060})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018060?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess.go:4
light.TestTypeArrayAccess.func1(0xc0001b2000?)
	/tmp/eval-dev-quality744030985/light/typeArrayAccess_test.go:34 +0xfa
testing.tRunner(0xc0001b21a0, 0xc000026350)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayAccess (0.00s)

DONE 4 tests, 2 failures in 0.294s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_1
    typeArrayMultidimensionalArrayLength_test.go:44: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_2
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_3
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_4
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Case_1 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Case_2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Case_3 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Case_4 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Case_1 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:44: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Case_1 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 5 tests, 2 failures in 0.358s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_1
    typeArrayMultidimensionalArrayLength_test.go:44: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_2
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_3
=== RUN   TestTypeArrayMultidimensionalArrayLength/Case_4
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Case_1 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Case_2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Case_3 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Case_4 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Case_1 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:44: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Case_1 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 5 tests, 2 failures in 0.358s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestValidDate
    validateDate_test.go:25: Expected validDate(29, 2, 2000) to return true, but got false.
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:25: Expected validDate(29, 2, 2000) to return true, but got false.

DONE 1 tests, 1 failure in 0.337s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestValidDate
    validateDate_test.go:25: Expected validDate(29, 2, 2000) to return true, but got false.
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:25: Expected validDate(29, 2, 2000) to return true, but got false.

DONE 1 tests, 1 failure in 0.337s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
2024/06/06 16:27:38 Evaluating model "openrouter/phind/phind-codellama-34b" using language "golang" and repository "golang/light"
2024/06/06 16:27:38 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/06 16:27:43 Model "openrouter/phind/phind-codellama-34b" responded (5510 ms) with:
	```golang
	package light

	import "testing"

	func TestHasBalancedBrackets(t *testing.T) {
		tests := []struct {
			input  string
			expect bool
		}{
			{"[]", true},
			{"", true},
			{"[][][]", true},
			{"[[][]]", true},
			{"[[[]]]", true},
			{"[[][][]]", true},
			{"[", false},
			{"]", false},
			{"[][][]]]", false},
			{"[[[][]", false},
			{"a", false},
			{"]]", false},
		}

		for _, test := range tests {
			result := hasBalancedBrackets(test.input)
			if result != test.expect {
				t.Errorf("hasBalancedBrackets(%q) got %v, want %v", test.input, result, test.expect)
			}
		}
	}
	```
2024/06/06 16:27:43 $ go mod tidy
2024/06/06 16:27:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestHasBalancedBrackets
--- PASS: TestHasBalancedBrackets (0.00s)
PASS
coverage: 4.7% of statements
ok  	light	0.004s	coverage: 4.7% of statements

DONE 1 tests in 0.335s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:27:44 Executes tests with 5 coverage objects
2024/06/06 16:27:44 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/06 16:27:51 Model "openrouter/phind/phind-codellama-34b" responded (7840 ms) with:
	```golang
	package light

	import "testing"

	func TestBinarySearch(t *testing.T) {
		type args struct {
			a []int
			x int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{"empty slice", args{[]int{}, 1}, -1},
			{"single element found", args{[]int{1}, 1}, 0},
			{"single element not found", args{[]int{1}, 2}, -1},
			{"found at first position", args{[]int{1, 2, 3, 4}, 1}, 0},
			{"found at last position", args{[]int{1, 2, 3, 4}, 4}, 3},
			{"found in middle", args{[]int{1, 2, 3, 4}, 3}, 2},
			{"not found in middle", args{[]int{1, 2, 3, 4}, 5}, -1},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := binarySearch(tt.args.a, tt.args.x); got != tt.want {
					t.Errorf("binarySearch() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:27:51 $ go mod tidy
2024/06/06 16:27:52 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestBinarySearch
=== RUN   TestBinarySearch/empty_slice
=== RUN   TestBinarySearch/single_element_found
=== RUN   TestBinarySearch/single_element_not_found
=== RUN   TestBinarySearch/found_at_first_position
=== RUN   TestBinarySearch/found_at_last_position
=== RUN   TestBinarySearch/found_in_middle
=== RUN   TestBinarySearch/not_found_in_middle
--- PASS: TestBinarySearch (0.00s)
    --- PASS: TestBinarySearch/empty_slice (0.00s)
    --- PASS: TestBinarySearch/single_element_found (0.00s)
    --- PASS: TestBinarySearch/single_element_not_found (0.00s)
    --- PASS: TestBinarySearch/found_at_first_position (0.00s)
    --- PASS: TestBinarySearch/found_at_last_position (0.00s)
    --- PASS: TestBinarySearch/found_in_middle (0.00s)
    --- PASS: TestBinarySearch/not_found_in_middle (0.00s)
PASS
coverage: 5.2% of statements
ok  	light	0.004s	coverage: 5.2% of statements

DONE 8 tests in 0.327s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:27:52 Executes tests with 4 coverage objects
2024/06/06 16:27:52 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/06 16:27:57 Model "openrouter/phind/phind-codellama-34b" responded (5142 ms) with:
	```golang
	package light_test

	import (
		"light"
		"testing"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		testCases := []struct {
			x, y, want int
		}{
			{1, 10, 11},
			{15, 20, 20},
			{2, 20, 0},
			{10, 30, 30},
		}

		for _, tc := range testCases {
			got := light.callLoopConditionsOftenEnough(tc.x, tc.y)
			if got != tc.want {
				t.Errorf("callLoopConditionsOftenEnough(%v, %v) = %v, want %v", tc.x, tc.y, got, tc.want)
			}
		}
	}
	```
2024/06/06 16:27:57 $ go mod tidy
2024/06/06 16:27:57 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:19:16: undefined: light.callLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:19:16: undefined: light.callLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:27:58 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/06 16:28:04 Model "openrouter/phind/phind-codellama-34b" responded (6327 ms) with:
	```golang
	package light

	import "testing"

	func TestCascadingIfElse(t *testing.T) {
		tests := []struct {
			name     string
			input    int
			expected int
		}{
			{
				name:     "case_1",
				input:    1,
				expected: 2,
			},
			{
				name:     "case_2",
				input:    3,
				expected: 4,
			},
			{
				name:     "case_3",
				input:    -1,
				expected: 5,
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				result := cascadingIfElse(test.input)
				if result != test.expected {
					t.Errorf("Expected result for input %d is %d, but got %d instead.", test.input, test.expected, result)
				}
			})
		}
	}
	```
2024/06/06 16:28:04 $ go mod tidy
2024/06/06 16:28:04 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCascadingIfElse
=== RUN   TestCascadingIfElse/case_1
=== RUN   TestCascadingIfElse/case_2
=== RUN   TestCascadingIfElse/case_3
--- PASS: TestCascadingIfElse (0.00s)
    --- PASS: TestCascadingIfElse/case_1 (0.00s)
    --- PASS: TestCascadingIfElse/case_2 (0.00s)
    --- PASS: TestCascadingIfElse/case_3 (0.00s)
PASS
coverage: 2.4% of statements
ok  	light	0.004s	coverage: 2.4% of statements

DONE 4 tests in 0.337s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:28:04 Executes tests with 3 coverage objects
2024/06/06 16:28:04 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/06 16:28:10 Model "openrouter/phind/phind-codellama-34b" responded (5918 ms) with:
	```golang
	package light

	import (
		"testing"
		"reflect"
	)

	func TestComputeStepCount(t *testing.T) {
		assert := func(want, got int, gotErr error) {
			if got != want || !reflect.DeepEqual(gotErr, nil) {
				t.Fatalf("Wanted: %v, %v, got: %v, %v", want, nil, got, gotErr)
			}
		}

		testCases := []struct {
			start int
			steps int
			err   error
		}{
			{1, 0, nil},
			{2, 1, nil},
			{4, 2, nil},
			{6, 8, nil},
			{15, 20, errors.New("Only positive integers are allowed")},
		}

		for _, tc := range testCases {
			steps, err := computeStepCount(tc.start)
			assert(tc.steps, steps, err)
		}
	}
	```
2024/06/06 16:28:10 $ go mod tidy
2024/06/06 16:28:10 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./collatzCalculator_test.go:24:12: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:24:12: undefined: errors

DONE 0 tests, 1 error in 0.130s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:28:11 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/06 16:28:16 Model "openrouter/phind/phind-codellama-34b" responded (5113 ms) with:
	```golang
	package light_test

	import (
		"light"
		"testing"
	)

	func TestConditionsAnd(t *testing.T) {
		tests := []struct {
			x rune
			y rune
			want bool
		}{
			{'A', 'B', true},
			{'A', 'C', false},
			{'D', 'B', false},
			{'D', 'E', false},
		}

		for _, test := range tests {
			got := light.conditionsAnd(test.x, test.y)
			if got != test.want {
				t.Errorf("conditionsAnd(%v, %v) = %v; want %v", test.x, test.y, got, test.want)
			}
		}
	}
	```
2024/06/06 16:28:16 $ go mod tidy
2024/06/06 16:28:16 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./conditionsAnd_test.go:21:16: undefined: light.conditionsAnd
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:21:16: undefined: light.conditionsAnd

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:28:16 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/06 16:28:23 Model "openrouter/phind/phind-codellama-34b" responded (6934 ms) with:
	```golang
	package light

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			sequence []int
			expected string
		}{
			{[]int{1, 2, 3, 4, 5}, "2;3;"},
			{[]int{-1, 1, -3, 2, 3}, "1;2;"},
			{[]int{2, 3, 1, -2, 1}, "1;2;3;"},
			{[]int{1, 2, 3, 4, 5, 6, 7, 8, 9}, ""},
			{[]int{0, 0, 0, 0, 0}, "0;1;2;3;4;"},
		}

		for _, test := range tests {
			t.Run(strconv.Itoa(len(test.sequence)), func(t *testing.T) {
				actual := equilibriumIndices(test.sequence)
				assert.Equal(t, test.expected, actual, "Equal indices should be found.")
			})
		}
	}
	```
2024/06/06 16:28:23 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/06 16:28:23 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./equilibriumIndices_test.go:22:9: undefined: strconv
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:22:9: undefined: strconv

DONE 0 tests, 1 error in 0.191s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:28:23 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/06 16:28:28 Model "openrouter/phind/phind-codellama-34b" responded (4691 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestforLoop(t *testing.T) {
		tests := []struct {
			name string
			s    int
			want int
		}{
			{"Test forLoop with s 0", 0, 0},
			{"Test forLoop with s 1", 1, 2},
			{"Test forLoop with s 5", 5, 20},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := forLoop(tt.s); got != tt.want {
					t.Errorf("forLoop() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:28:28 $ go mod tidy
2024/06/06 16:28:28 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
testing: warning: no tests to run
PASS
coverage: 0.0% of statements
ok  	light	0.004s	coverage: 0.0% of statements [no tests to run]

DONE 0 tests in 0.329s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:28:29 Executes tests with 0 coverage objects
2024/06/06 16:28:29 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/06 16:28:42 Model "openrouter/phind/phind-codellama-34b" responded (13076 ms) with:
	```golang
	package light

	import (
		"testing"
		"fmt"
	)

	type testCase struct {
		k, n uint64
		want int
		err  error
	}

	var testCases = []testCase{
		{k: 0, n: 1, want: 1, err: nil},
		{k: 3, n: 7, want: 1, err: nil},
		{k: 5, n: 7, want: -1, err: nil},
		{k: 6, n: 7, want: 0, err: nil},

		{k: 0, n: 6, want: 0, err: fmt.Errorf("Invalid value. k = %d, n = %d", 0, 6)},
		{k: 5, n: 6, want: 0, err: fmt.Errorf("Invalid value. k = %d, n = %d", 5, 6)},
		{k: 3, n: 6, want: 0, err: fmt.Errorf("Invalid value. k = %d, n = %d", 3, 6)},

		{k: 0, n: 4, want: 0, err: fmt.Errorf("Invalid value. k = %d, n = %d", 0, 4)},
		{k: 1, n: 4, want: 1, err: nil},
		{k: 2, n: 4, want: 1, err: nil},
		{k: 3, n: 4, want: -1, err: nil},
	}

	func TestJacobiSymbol(t *testing.T) {
		for _, tc := range testCases {
			got, err := jacobiSymbol(tc.k, tc.n)
			if tc.err == nil {
				if err != nil {
					t.Errorf("FAIL: jacobiSymbol(%d, %d) - unexpected error: %s", tc.k, tc.n, err)
				}
				if got != tc.want {
					t.Errorf("FAIL: jacobiSymbol(%d, %d) = %d, want %d", tc.k, tc.n, got, tc.want)
				}
			} else {
				if err == nil {
					t.Errorf("FAIL: jacobiSymbol(%d, %d) - expected error: %s", tc.k, tc.n, tc.err)
				}
			}
		}
	}
	```
2024/06/06 16:28:42 $ go mod tidy
2024/06/06 16:28:42 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 7) = -1, want 1
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(6, 7) = -1, want 0
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(1, 4) - unexpected error: Invalid value. k = 1, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(1, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(2, 4) - unexpected error: Invalid value. k = 2, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(2, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(3, 4) - unexpected error: Invalid value. k = 3, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 4) = 0, want -1
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 8.5% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 7) = -1, want 1
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(6, 7) = -1, want 0
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(1, 4) - unexpected error: Invalid value. k = 1, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(1, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(2, 4) - unexpected error: Invalid value. k = 2, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(2, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(3, 4) - unexpected error: Invalid value. k = 3, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 4) = 0, want -1

DONE 1 tests, 1 failure in 0.345s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:28:42 Executes tests with 5 coverage objects
2024/06/06 16:28:42 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/06 16:28:47 Model "openrouter/phind/phind-codellama-34b" responded (4380 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		expected := []int{1, 1, 1, 2, 1, 1, 2, 3, 1, 1, 2, 5, 1, 1, 2, 3, 7}
		result := initialiseKlarnerRadoSequence(16)
		for i, v := range result {
			if v != expected[i] {
				t.Errorf("Expected %v at index %v, but got %v", expected[i], i, v)
			}
		}
	}
	```
2024/06/06 16:28:47 $ go mod tidy
2024/06/06 16:28:47 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestInitialiseKlarnerRadoSequence
    klarnerRadoSequence_test.go:12: Expected 1 at index 0, but got 0
    klarnerRadoSequence_test.go:12: Expected 1 at index 2, but got 3
    klarnerRadoSequence_test.go:12: Expected 2 at index 3, but got 4
    klarnerRadoSequence_test.go:12: Expected 1 at index 4, but got 7
    klarnerRadoSequence_test.go:12: Expected 1 at index 5, but got 9
    klarnerRadoSequence_test.go:12: Expected 2 at index 6, but got 10
    klarnerRadoSequence_test.go:12: Expected 3 at index 7, but got 13
    klarnerRadoSequence_test.go:12: Expected 1 at index 8, but got 15
    klarnerRadoSequence_test.go:12: Expected 1 at index 9, but got 19
    klarnerRadoSequence_test.go:12: Expected 2 at index 10, but got 21
    klarnerRadoSequence_test.go:12: Expected 5 at index 11, but got 22
    klarnerRadoSequence_test.go:12: Expected 1 at index 12, but got 27
    klarnerRadoSequence_test.go:12: Expected 1 at index 13, but got 28
    klarnerRadoSequence_test.go:12: Expected 2 at index 14, but got 31
    klarnerRadoSequence_test.go:12: Expected 3 at index 15, but got 39
    klarnerRadoSequence_test.go:12: Expected 7 at index 16, but got 40
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)
    klarnerRadoSequence_test.go:12: Expected 1 at index 0, but got 0
    klarnerRadoSequence_test.go:12: Expected 1 at index 2, but got 3
    klarnerRadoSequence_test.go:12: Expected 2 at index 3, but got 4
    klarnerRadoSequence_test.go:12: Expected 1 at index 4, but got 7
    klarnerRadoSequence_test.go:12: Expected 1 at index 5, but got 9
    klarnerRadoSequence_test.go:12: Expected 2 at index 6, but got 10
    klarnerRadoSequence_test.go:12: Expected 3 at index 7, but got 13
    klarnerRadoSequence_test.go:12: Expected 1 at index 8, but got 15
    klarnerRadoSequence_test.go:12: Expected 1 at index 9, but got 19
    klarnerRadoSequence_test.go:12: Expected 2 at index 10, but got 21
    klarnerRadoSequence_test.go:12: Expected 5 at index 11, but got 22
    klarnerRadoSequence_test.go:12: Expected 1 at index 12, but got 27
    klarnerRadoSequence_test.go:12: Expected 1 at index 13, but got 28
    klarnerRadoSequence_test.go:12: Expected 2 at index 14, but got 31
    klarnerRadoSequence_test.go:12: Expected 3 at index 15, but got 39
    klarnerRadoSequence_test.go:12: Expected 7 at index 16, but got 40

DONE 1 tests, 1 failure in 0.339s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:28:47 Executes tests with 3 coverage objects
2024/06/06 16:28:47 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/06 16:28:57 Model "openrouter/phind/phind-codellama-34b" responded (10160 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestMaximumValue(t *testing.T) {
		items := []Item{
			{weight: 10, value: 60},
			{weight: 20, value: 100},
			{weight: 30, value: 120},
		}
		maxWeight := 50

		want := 220
		got := maximumValue(maxWeight, items)
		if got != want {
			t.Errorf("maximumValue() = %d, want %d", got, want)
		}

		items = []Item{
			{weight: 5, value: 10},
			{weight: 4, value: 40},
			{weight: 6, value: 30},
			{weight: 3, value: 50},
		}
		maxWeight = 10

		want = 90
		got = maximumValue(maxWeight, items)
		if got != want {
			t.Errorf("maximumValue() = %d, want %d", got, want)
		}

		items = []Item{{weight: 10, value: 60}}
		maxWeight = 10

		want = 60
		got = maximumValue(maxWeight, items)
		if got != want {
			t.Errorf("maximumValue() = %d, want %d", got, want)
		}

		items = []Item{
			{weight: 3, value: 50},
			{weight: 5, value: 60},
			{weight: 4, value: 40},
		}
		maxWeight = 10

		want = 110
		got = maximumValue(maxWeight, items)
		if got != want {
			t.Errorf("maximumValue() = %d, want %d", got, want)
		}
	}
	```
2024/06/06 16:28:57 $ go mod tidy
2024/06/06 16:28:57 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMaximumValue
--- PASS: TestMaximumValue (0.00s)
PASS
coverage: 7.1% of statements
ok  	light	0.004s	coverage: 7.1% of statements

DONE 1 tests in 0.314s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:28:58 Executes tests with 5 coverage objects
2024/06/06 16:28:58 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/06 16:29:06 Model "openrouter/phind/phind-codellama-34b" responded (8034 ms) with:
	```golang
	package light

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestLargestProperDivisor(t *testing.T) {

		tests := []struct {
			name     string
			input    int
			expected int
		}{
			{"Input 10 is divisible by 5", 10, 5},
			{"Input 9 is itself", 9, 9},
			{"Input 16 is divisible by 8", 16, 8},
			{"Input 1 is itself", 1, 1},
			{"Input 2 is itself", 2, 2},
			{"Input 3 is itself", 3, 3},
			{"Input 15 is divisible by 5", 15, 5},
			{"Input 12 is divisible by 6", 12, 6},
			{"Input 127 is itself", 127, 127},
			{"Input 45 is divisible by 15", 45, 15},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				result, err := largestProperDivisor(test.input)
				assert.NoError(t, err)
				assert.Equal(t, test.expected, result)
			})
		}
	}
	```
2024/06/06 16:29:06 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/06 16:29:06 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestLargestProperDivisor
=== RUN   TestLargestProperDivisor/Input_10_is_divisible_by_5
=== RUN   TestLargestProperDivisor/Input_9_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 9
        	            	actual  : 3
        	Test:       	TestLargestProperDivisor/Input_9_is_itself
=== RUN   TestLargestProperDivisor/Input_16_is_divisible_by_8
=== RUN   TestLargestProperDivisor/Input_1_is_itself
=== RUN   TestLargestProperDivisor/Input_2_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 2
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_2_is_itself
=== RUN   TestLargestProperDivisor/Input_3_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 3
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_3_is_itself
=== RUN   TestLargestProperDivisor/Input_15_is_divisible_by_5
=== RUN   TestLargestProperDivisor/Input_12_is_divisible_by_6
=== RUN   TestLargestProperDivisor/Input_127_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 127
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_127_is_itself
=== RUN   TestLargestProperDivisor/Input_45_is_divisible_by_15
--- FAIL: TestLargestProperDivisor (0.00s)
    --- PASS: TestLargestProperDivisor/Input_10_is_divisible_by_5 (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_9_is_itself (0.00s)
    --- PASS: TestLargestProperDivisor/Input_16_is_divisible_by_8 (0.00s)
    --- PASS: TestLargestProperDivisor/Input_1_is_itself (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_2_is_itself (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_3_is_itself (0.00s)
    --- PASS: TestLargestProperDivisor/Input_15_is_divisible_by_5 (0.00s)
    --- PASS: TestLargestProperDivisor/Input_12_is_divisible_by_6 (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_127_is_itself (0.00s)
    --- PASS: TestLargestProperDivisor/Input_45_is_divisible_by_15 (0.00s)
FAIL
coverage: 3.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestLargestProperDivisor/Input_9_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 9
        	            	actual  : 3
        	Test:       	TestLargestProperDivisor/Input_9_is_itself
    --- FAIL: TestLargestProperDivisor/Input_9_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor/Input_2_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 2
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_2_is_itself
    --- FAIL: TestLargestProperDivisor/Input_2_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor/Input_3_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 3
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_3_is_itself
    --- FAIL: TestLargestProperDivisor/Input_3_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor/Input_127_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 127
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_127_is_itself
    --- FAIL: TestLargestProperDivisor/Input_127_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor (0.00s)

DONE 11 tests, 5 failures in 0.444s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:29:06 Executes tests with 4 coverage objects
2024/06/06 16:29:06 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/06 16:29:12 Model "openrouter/phind/phind-codellama-34b" responded (5717 ms) with:
	```golang
	package light

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestMagicSquareOdd(t *testing.T) {
		expected := [][]int{
			{8, 1, 6},
			{3, 5, 7},
			{4, 9, 2},
		}

		actual, err := magicSquareOdd(3)
		assert.NoError(t, err)
		assert.Equal(t, expected, actual)

		actual, err = magicSquareOdd(5)
		assert.Error(t, err)
		assert.Nil(t, actual)

		actual, err = magicSquareOdd(7)
		assert.Error(t, err)
		assert.Nil(t, actual)

		actual, err = magicSquareOdd(9)
		assert.NoError(t, err)
		assert.Equal(t, 45, len(actual))
	}
	```
2024/06/06 16:29:12 $ go mod tidy
2024/06/06 16:29:12 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:21: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:21
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:22: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:22
        	Error:      	Expected nil, but got: [][]int{[]int{17, 24, 1, 8, 15}, []int{23, 5, 7, 14, 16}, []int{4, 6, 13, 20, 22}, []int{10, 12, 19, 21, 3}, []int{11, 18, 25, 2, 9}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:25
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:26: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:26
        	Error:      	Expected nil, but got: [][]int{[]int{30, 39, 48, 1, 10, 19, 28}, []int{38, 47, 7, 9, 18, 27, 29}, []int{46, 6, 8, 17, 26, 35, 37}, []int{5, 14, 16, 25, 34, 36, 45}, []int{13, 15, 24, 33, 42, 44, 4}, []int{21, 23, 32, 41, 43, 3, 12}, []int{22, 31, 40, 49, 2, 11, 20}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:30: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:30
        	Error:      	Not equal: 
        	            	expected: 45
        	            	actual  : 9
        	Test:       	TestMagicSquareOdd
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 10.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:21: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:21
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:22: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:22
        	Error:      	Expected nil, but got: [][]int{[]int{17, 24, 1, 8, 15}, []int{23, 5, 7, 14, 16}, []int{4, 6, 13, 20, 22}, []int{10, 12, 19, 21, 3}, []int{11, 18, 25, 2, 9}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:25
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:26: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:26
        	Error:      	Expected nil, but got: [][]int{[]int{30, 39, 48, 1, 10, 19, 28}, []int{38, 47, 7, 9, 18, 27, 29}, []int{46, 6, 8, 17, 26, 35, 37}, []int{5, 14, 16, 25, 34, 36, 45}, []int{13, 15, 24, 33, 42, 44, 4}, []int{21, 23, 32, 41, 43, 3, 12}, []int{22, 31, 40, 49, 2, 11, 20}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:30: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:30
        	Error:      	Not equal: 
        	            	expected: 45
        	            	actual  : 9
        	Test:       	TestMagicSquareOdd

DONE 1 tests, 1 failure in 0.436s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:29:13 Executes tests with 8 coverage objects
2024/06/06 16:29:13 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/06 16:29:18 Model "openrouter/phind/phind-codellama-34b" responded (5789 ms) with:
	```golang
	package light_test

	import (
		"light"
		"testing"
	)

	func TestMatchBytes(t *testing.T) {
		type TestCase struct {
			s1      []byte
			s2      []byte
			isMatch bool
		}

		tests := []TestCase{
			{[]byte("aBc"), []byte("AbC"), true},
			{[]byte("aBc"), []byte("abC"), false},
			{[]byte(""), []byte(""), true},
			{[]byte("a"), []byte("b"), false},
			{[]byte("aBc"), []byte(""), false},
		}

		for _, test := range tests {
			got := light.matchBytes(test.s1, test.s2)
			if got != test.isMatch {
				t.Errorf("matchBytes(%v, %v) = %v, want %v", test.s1, test.s2, got, test.isMatch)
			}
		}
	}
	```
2024/06/06 16:29:18 $ go mod tidy
2024/06/06 16:29:18 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./matchBytes_test.go:24:16: undefined: light.matchBytes
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./matchBytes_test.go:24:16: undefined: light.matchBytes

DONE 0 tests, 1 error in 0.107s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:29:19 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/06 16:29:28 Model "openrouter/phind/phind-codellama-34b" responded (9692 ms) with:
	```golang
	package light

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestPascalsTriangle(t *testing.T) {
		testCases := []struct {
			rows    int
			want    [][]int
			wantErr error
		}{
			{
				rows: 0,
				want: [][]int{},
			},
			{
				rows: 1,
				want: [][]int{
					{1},
				},
			},
			{
				rows: 2,
				want: [][]int{
					{1},
					{1, 1},
				},
			},
			{
				rows: 3,
				want: [][]int{
					{1},
					{1, 1},
					{1, 2, 1},
				},
			},
			{
				rows: 4,
				want: [][]int{
					{1},
					{1, 1},
					{1, 2, 1},
					{1, 3, 3, 1},
				},
			},
			{
				rows: -1,
				want: [][]int{},
				wantErr: errors.New("Rows can't be negative!"),
			},
		}

		for _, tc := range testCases {
			got, err := pascalsTriangle(tc.rows)
			assert.Equal(t, tc.wantErr, err)
			assert.Equal(t, tc.want, got)
		}
	}
	```
2024/06/06 16:29:28 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/06 16:29:29 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./pascalsTriangle_test.go:52:13: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:52:13: undefined: errors

DONE 0 tests, 1 error in 0.192s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:29:29 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/06 16:29:40 Model "openrouter/phind/phind-codellama-34b" responded (11151 ms) with:
	```golang
	package light

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			name         string
			dirtyNumber  string
			expected     string
			expectedErr  error
		}{
			{
				name:        "no special characters",
				dirtyNumber: "1234567890",
				expected:    "1234567890",
			},
			{
				name:        "with spaces",
				dirtyNumber: "123 456 7890",
				expected:    "1234567890",
			},
			{
				name:        "with dots",
				dirtyNumber: "123.456.7890",
				expected:    "1234567890",
			},
			{
				name:        "with parentheses",
				dirtyNumber: "(123) 456-7890",
				expected:    "1234567890",
			},
			{
				name:         "with punctuations",
				dirtyNumber:  "123-456:7890!",
				expectedErr:  errors.New("punctuations not permitted"),
			},
			{
				name:         "with letters",
				dirtyNumber:  "123a456b7890c",
				expectedErr:  errors.New("letters not permitted"),
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				actual, err := extractDigits(test.dirtyNumber)
				assert.Equal(t, test.expected, actual)
				assert.Equal(t, test.expectedErr, err)
			})
		}
	}
	```
2024/06/06 16:29:40 $ go mod tidy
2024/06/06 16:29:40 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./phoneNumber_test.go:39:18: undefined: errors
./phoneNumber_test.go:44:18: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:39:18: undefined: errors
./phoneNumber_test.go:44:18: undefined: errors

DONE 0 tests, 2 errors in 0.189s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:29:41 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/06 16:29:48 Model "openrouter/phind/phind-codellama-34b" responded (6992 ms) with:
	```golang
	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		tests := []struct {
			name   string
			input  int
			output int
		}{
			{
				name:   "When i equals 1",
				input:  1,
				output: 0,
			},
			{
				name:   "When i is not equal to 1",
				input:  2,
				output: 1,
			},
			{
				name:   "When i is less than 1",
				input:  -5,
				output: 1,
			},
			{
				name:   "When i is greater than 1",
				input:  5,
				output: 1,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := simpleIfElse(tt.input); got != tt.output {
					t.Errorf("simpleIfElse() = %v, want %v", got, tt.output)
				}
			})
		}
	}
	```
2024/06/06 16:29:48 $ go mod tidy
2024/06/06 16:29:48 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleIfElse
=== RUN   TestSimpleIfElse/When_i_equals_1
=== RUN   TestSimpleIfElse/When_i_is_not_equal_to_1
=== RUN   TestSimpleIfElse/When_i_is_less_than_1
=== RUN   TestSimpleIfElse/When_i_is_greater_than_1
--- PASS: TestSimpleIfElse (0.00s)
    --- PASS: TestSimpleIfElse/When_i_equals_1 (0.00s)
    --- PASS: TestSimpleIfElse/When_i_is_not_equal_to_1 (0.00s)
    --- PASS: TestSimpleIfElse/When_i_is_less_than_1 (0.00s)
    --- PASS: TestSimpleIfElse/When_i_is_greater_than_1 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 5 tests in 0.317s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:29:48 Executes tests with 2 coverage objects
2024/06/06 16:29:48 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/06 16:29:53 Model "openrouter/phind/phind-codellama-34b" responded (4593 ms) with:
	```golang
	package light

	import "testing"

	func Test_simpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{"test case 1", 1, 0},
			{"test case 2", 2, 1},
			{"test case 3", -1, 1},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := simpleSwitchWithReturn(tt.i); got != tt.want {
					t.Errorf("simpleSwitchWithReturn() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:29:53 $ go mod tidy
2024/06/06 16:29:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   Test_simpleSwitchWithReturn
=== RUN   Test_simpleSwitchWithReturn/test_case_1
=== RUN   Test_simpleSwitchWithReturn/test_case_2
=== RUN   Test_simpleSwitchWithReturn/test_case_3
--- PASS: Test_simpleSwitchWithReturn (0.00s)
    --- PASS: Test_simpleSwitchWithReturn/test_case_1 (0.00s)
    --- PASS: Test_simpleSwitchWithReturn/test_case_2 (0.00s)
    --- PASS: Test_simpleSwitchWithReturn/test_case_3 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 4 tests in 0.327s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:29:53 Executes tests with 3 coverage objects
2024/06/06 16:29:53 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/06 16:30:00 Model "openrouter/phind/phind-codellama-34b" responded (7086 ms) with:
	```golang
	package light

	import "testing"
	import "fmt"


	func TestIsSorted(t *testing.T) {
	    testData := []struct {
	        name string
	        input []int
	        expected bool
	    }{
	        {
	            name: "sorted in ascending order",
	            input: []int{1, 2, 3, 4, 5},
	            expected: true,
	        },
	        {
	            name: "not sorted in descending order",
	            input: []int{5, 4, 3, 2, 1},
	            expected: false,
	        },
	        {
	            name: "sorted with equal elements",
	            input: []int{2, 2, 2, 2},
	            expected: true,
	        },
	        {
	            name: "empty slice",
	            input: []int{},
	            expected: true,
	        },
	        {
	            name: "single element slice",
	            input: []int{1},
	            expected: true,
	        },
	    }

	    for _, data := range testData {
	        t.Run(data.name, func(t *testing.T) {
	            result := isSorted(data.input)
	            if result != data.expected {
	                t.Errorf("expected %v but got %v for input %v", data.expected, result, data.input)
	            }
	        })
	    }
	}
	```
2024/06/06 16:30:00 $ go mod tidy
2024/06/06 16:30:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./sort_test.go:4:8: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:4:8: "fmt" imported and not used

DONE 0 tests, 1 error in 0.134s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:30:01 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/06 16:30:06 Model "openrouter/phind/phind-codellama-34b" responded (4744 ms) with:
	```golang
	package light_test

	import (
		"light"
		"testing"
	)

	func TestTypeArrayAccess(t *testing.T) {
		testCases := []struct{
			input []int
			expected int 
		}{
			{[]int{123}, 123},
			{[]int{456}, 3},
			{[]int{789}, 3},
		}

		for _, tc := range testCases {
			actual := light.typeArrayAccess(tc.input)
			if actual != tc.expected {
				t.Fatalf("Expected %v but got %v with input %v", tc.expected, actual, tc.input)
			}
		}
	}
	```
2024/06/06 16:30:06 $ go mod tidy
2024/06/06 16:30:06 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./typeArrayAccess_test.go:19:19: undefined: light.typeArrayAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:19:19: undefined: light.typeArrayAccess

DONE 0 tests, 1 error in 0.112s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:30:06 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/06 16:30:14 Model "openrouter/phind/phind-codellama-34b" responded (7957 ms) with:
	```golang
	package light

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			name     string
			input    []int
			expected int
		}{
			{
				name:     "Both elements equal to zero and eight",
				input:    []int{0, 8},
				expected: 2,
			},
			{
				name:     "First element equal to zero",
				input:    []int{0, 9},
				expected: 1,
			},
			{
				name:     "Second element equal to eight",
				input:    []int{1, 8},
				expected: 1,
			},
			{
				name:     "Both elements not equal to zero or eight",
				input:    []int{1, 9},
				expected: 0,
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				result := typeArrayConsecutiveAccess(test.input)
				assert.Equal(t, test.expected, result)
			})
		}
	}
	```
2024/06/06 16:30:14 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/06 16:30:14 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/Both_elements_equal_to_zero_and_eight
=== RUN   TestTypeArrayConsecutiveAccess/First_element_equal_to_zero
=== RUN   TestTypeArrayConsecutiveAccess/Second_element_equal_to_eight
=== RUN   TestTypeArrayConsecutiveAccess/Both_elements_not_equal_to_zero_or_eight
--- PASS: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Both_elements_equal_to_zero_and_eight (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/First_element_equal_to_zero (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Second_element_equal_to_eight (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Both_elements_not_equal_to_zero_or_eight (0.00s)
PASS
coverage: 2.8% of statements
ok  	light	0.005s	coverage: 2.8% of statements

DONE 5 tests in 0.451s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:30:15 Executes tests with 3 coverage objects
2024/06/06 16:30:15 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/06 16:30:21 Model "openrouter/phind/phind-codellama-34b" responded (6066 ms) with:
	```golang
	package light

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		assert := assert.New(t)

		testData := []struct {
			input  [][]int
			output int
		}{
			{[][]int{{1, 2}, {3, 4}}, 2},
			{[][]int{{1, 2}}, 1},
			{[][]int{{1, 2}, {3, 4}, {5, 6}}, 0},
			{nil, 0},
			{[][]int{}, 0},
		}

		for _, test := range testData {
			result := typeArrayMultidimensionalArrayLength(test.input)
			assert.Equal(test.output, result)
		}
	}
	```
2024/06/06 16:30:21 $ go mod tidy
2024/06/06 16:30:21 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayMultidimensionalArrayLength
    typeArrayMultidimensionalArrayLength_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/typeArrayMultidimensionalArrayLength_test.go:25
        	Error:      	Not equal: 
        	            	expected: 1
        	            	actual  : 0
        	Test:       	TestTypeArrayMultidimensionalArrayLength
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/typeArrayMultidimensionalArrayLength_test.go:25
        	Error:      	Not equal: 
        	            	expected: 1
        	            	actual  : 0
        	Test:       	TestTypeArrayMultidimensionalArrayLength

DONE 1 tests, 1 failure in 0.450s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:30:21 Executes tests with 2 coverage objects
2024/06/06 16:30:21 Querying model "openrouter/phind/phind-codellama-34b" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/06 16:30:29 Model "openrouter/phind/phind-codellama-34b" responded (7402 ms) with:
	```golang
	package light

	import "testing"

	func Test_validDate(t *testing.T) {
		tests := []struct {
			day   int
			month int
			year  int
			want  bool
		}{
			{31, 12, 2020, true},
			{29, 2, 2020, true},
			{29, 2, 2019, false},
			{29, 2, 1582, false},
			{31, 4, 2020, true},
			{31, 6, 2020, false},
			{0, 1, 2020, false},
			{31, 0, 2020, false},
			{31, 13, 2020, false},
		}
		for _, tt := range tests {
			t.Run(fmt.Sprintf("%d-%d-%d", tt.day, tt.month, tt.year), func(t *testing.T) {
				if got := validDate(tt.day, tt.month, tt.year); got != tt.want {
					t.Errorf("validDate() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:30:29 $ go mod tidy
2024/06/06 16:30:29 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./validateDate_test.go:23:9: undefined: fmt
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:23:9: undefined: fmt

DONE 0 tests, 1 error in 0.145s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:30:29 Evaluated model "openrouter/phind/phind-codellama-34b" using language "golang" and repository "golang/light": encountered 15 problems: [exit status 1
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:19:16: undefined: light.callLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:19:16: undefined: light.callLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:19:16: undefined: light.callLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:19:16: undefined: light.callLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

callLoopConditionsOftenEnough.go exit status 1
# light [light.test]
./collatzCalculator_test.go:24:12: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:24:12: undefined: errors

DONE 0 tests, 1 error in 0.130s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./collatzCalculator_test.go:24:12: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:24:12: undefined: errors

DONE 0 tests, 1 error in 0.130s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

collatzCalculator.go exit status 1
# light_test [light.test]
./conditionsAnd_test.go:21:16: undefined: light.conditionsAnd
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:21:16: undefined: light.conditionsAnd

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./conditionsAnd_test.go:21:16: undefined: light.conditionsAnd
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:21:16: undefined: light.conditionsAnd

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

conditionsAnd.go exit status 1
# light [light.test]
./equilibriumIndices_test.go:22:9: undefined: strconv
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:22:9: undefined: strconv

DONE 0 tests, 1 error in 0.191s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./equilibriumIndices_test.go:22:9: undefined: strconv
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:22:9: undefined: strconv

DONE 0 tests, 1 error in 0.191s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

equilibriumIndices.go exit status 1
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 7) = -1, want 1
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(6, 7) = -1, want 0
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(1, 4) - unexpected error: Invalid value. k = 1, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(1, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(2, 4) - unexpected error: Invalid value. k = 2, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(2, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(3, 4) - unexpected error: Invalid value. k = 3, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 4) = 0, want -1
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 8.5% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 7) = -1, want 1
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(6, 7) = -1, want 0
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(1, 4) - unexpected error: Invalid value. k = 1, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(1, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(2, 4) - unexpected error: Invalid value. k = 2, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(2, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(3, 4) - unexpected error: Invalid value. k = 3, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 4) = 0, want -1

DONE 1 tests, 1 failure in 0.345s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 7) = -1, want 1
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(6, 7) = -1, want 0
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(1, 4) - unexpected error: Invalid value. k = 1, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(1, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(2, 4) - unexpected error: Invalid value. k = 2, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(2, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(3, 4) - unexpected error: Invalid value. k = 3, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 4) = 0, want -1
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 8.5% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 7) = -1, want 1
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(6, 7) = -1, want 0
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(1, 4) - unexpected error: Invalid value. k = 1, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(1, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(2, 4) - unexpected error: Invalid value. k = 2, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(2, 4) = 0, want 1
    jacobiSymbol_test.go:35: FAIL: jacobiSymbol(3, 4) - unexpected error: Invalid value. k = 3, n = 4
    jacobiSymbol_test.go:38: FAIL: jacobiSymbol(3, 4) = 0, want -1

DONE 1 tests, 1 failure in 0.345s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestInitialiseKlarnerRadoSequence
    klarnerRadoSequence_test.go:12: Expected 1 at index 0, but got 0
    klarnerRadoSequence_test.go:12: Expected 1 at index 2, but got 3
    klarnerRadoSequence_test.go:12: Expected 2 at index 3, but got 4
    klarnerRadoSequence_test.go:12: Expected 1 at index 4, but got 7
    klarnerRadoSequence_test.go:12: Expected 1 at index 5, but got 9
    klarnerRadoSequence_test.go:12: Expected 2 at index 6, but got 10
    klarnerRadoSequence_test.go:12: Expected 3 at index 7, but got 13
    klarnerRadoSequence_test.go:12: Expected 1 at index 8, but got 15
    klarnerRadoSequence_test.go:12: Expected 1 at index 9, but got 19
    klarnerRadoSequence_test.go:12: Expected 2 at index 10, but got 21
    klarnerRadoSequence_test.go:12: Expected 5 at index 11, but got 22
    klarnerRadoSequence_test.go:12: Expected 1 at index 12, but got 27
    klarnerRadoSequence_test.go:12: Expected 1 at index 13, but got 28
    klarnerRadoSequence_test.go:12: Expected 2 at index 14, but got 31
    klarnerRadoSequence_test.go:12: Expected 3 at index 15, but got 39
    klarnerRadoSequence_test.go:12: Expected 7 at index 16, but got 40
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)
    klarnerRadoSequence_test.go:12: Expected 1 at index 0, but got 0
    klarnerRadoSequence_test.go:12: Expected 1 at index 2, but got 3
    klarnerRadoSequence_test.go:12: Expected 2 at index 3, but got 4
    klarnerRadoSequence_test.go:12: Expected 1 at index 4, but got 7
    klarnerRadoSequence_test.go:12: Expected 1 at index 5, but got 9
    klarnerRadoSequence_test.go:12: Expected 2 at index 6, but got 10
    klarnerRadoSequence_test.go:12: Expected 3 at index 7, but got 13
    klarnerRadoSequence_test.go:12: Expected 1 at index 8, but got 15
    klarnerRadoSequence_test.go:12: Expected 1 at index 9, but got 19
    klarnerRadoSequence_test.go:12: Expected 2 at index 10, but got 21
    klarnerRadoSequence_test.go:12: Expected 5 at index 11, but got 22
    klarnerRadoSequence_test.go:12: Expected 1 at index 12, but got 27
    klarnerRadoSequence_test.go:12: Expected 1 at index 13, but got 28
    klarnerRadoSequence_test.go:12: Expected 2 at index 14, but got 31
    klarnerRadoSequence_test.go:12: Expected 3 at index 15, but got 39
    klarnerRadoSequence_test.go:12: Expected 7 at index 16, but got 40

DONE 1 tests, 1 failure in 0.339s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestInitialiseKlarnerRadoSequence
    klarnerRadoSequence_test.go:12: Expected 1 at index 0, but got 0
    klarnerRadoSequence_test.go:12: Expected 1 at index 2, but got 3
    klarnerRadoSequence_test.go:12: Expected 2 at index 3, but got 4
    klarnerRadoSequence_test.go:12: Expected 1 at index 4, but got 7
    klarnerRadoSequence_test.go:12: Expected 1 at index 5, but got 9
    klarnerRadoSequence_test.go:12: Expected 2 at index 6, but got 10
    klarnerRadoSequence_test.go:12: Expected 3 at index 7, but got 13
    klarnerRadoSequence_test.go:12: Expected 1 at index 8, but got 15
    klarnerRadoSequence_test.go:12: Expected 1 at index 9, but got 19
    klarnerRadoSequence_test.go:12: Expected 2 at index 10, but got 21
    klarnerRadoSequence_test.go:12: Expected 5 at index 11, but got 22
    klarnerRadoSequence_test.go:12: Expected 1 at index 12, but got 27
    klarnerRadoSequence_test.go:12: Expected 1 at index 13, but got 28
    klarnerRadoSequence_test.go:12: Expected 2 at index 14, but got 31
    klarnerRadoSequence_test.go:12: Expected 3 at index 15, but got 39
    klarnerRadoSequence_test.go:12: Expected 7 at index 16, but got 40
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)
    klarnerRadoSequence_test.go:12: Expected 1 at index 0, but got 0
    klarnerRadoSequence_test.go:12: Expected 1 at index 2, but got 3
    klarnerRadoSequence_test.go:12: Expected 2 at index 3, but got 4
    klarnerRadoSequence_test.go:12: Expected 1 at index 4, but got 7
    klarnerRadoSequence_test.go:12: Expected 1 at index 5, but got 9
    klarnerRadoSequence_test.go:12: Expected 2 at index 6, but got 10
    klarnerRadoSequence_test.go:12: Expected 3 at index 7, but got 13
    klarnerRadoSequence_test.go:12: Expected 1 at index 8, but got 15
    klarnerRadoSequence_test.go:12: Expected 1 at index 9, but got 19
    klarnerRadoSequence_test.go:12: Expected 2 at index 10, but got 21
    klarnerRadoSequence_test.go:12: Expected 5 at index 11, but got 22
    klarnerRadoSequence_test.go:12: Expected 1 at index 12, but got 27
    klarnerRadoSequence_test.go:12: Expected 1 at index 13, but got 28
    klarnerRadoSequence_test.go:12: Expected 2 at index 14, but got 31
    klarnerRadoSequence_test.go:12: Expected 3 at index 15, but got 39
    klarnerRadoSequence_test.go:12: Expected 7 at index 16, but got 40

DONE 1 tests, 1 failure in 0.339s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestLargestProperDivisor
=== RUN   TestLargestProperDivisor/Input_10_is_divisible_by_5
=== RUN   TestLargestProperDivisor/Input_9_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 9
        	            	actual  : 3
        	Test:       	TestLargestProperDivisor/Input_9_is_itself
=== RUN   TestLargestProperDivisor/Input_16_is_divisible_by_8
=== RUN   TestLargestProperDivisor/Input_1_is_itself
=== RUN   TestLargestProperDivisor/Input_2_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 2
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_2_is_itself
=== RUN   TestLargestProperDivisor/Input_3_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 3
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_3_is_itself
=== RUN   TestLargestProperDivisor/Input_15_is_divisible_by_5
=== RUN   TestLargestProperDivisor/Input_12_is_divisible_by_6
=== RUN   TestLargestProperDivisor/Input_127_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 127
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_127_is_itself
=== RUN   TestLargestProperDivisor/Input_45_is_divisible_by_15
--- FAIL: TestLargestProperDivisor (0.00s)
    --- PASS: TestLargestProperDivisor/Input_10_is_divisible_by_5 (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_9_is_itself (0.00s)
    --- PASS: TestLargestProperDivisor/Input_16_is_divisible_by_8 (0.00s)
    --- PASS: TestLargestProperDivisor/Input_1_is_itself (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_2_is_itself (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_3_is_itself (0.00s)
    --- PASS: TestLargestProperDivisor/Input_15_is_divisible_by_5 (0.00s)
    --- PASS: TestLargestProperDivisor/Input_12_is_divisible_by_6 (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_127_is_itself (0.00s)
    --- PASS: TestLargestProperDivisor/Input_45_is_divisible_by_15 (0.00s)
FAIL
coverage: 3.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestLargestProperDivisor/Input_9_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 9
        	            	actual  : 3
        	Test:       	TestLargestProperDivisor/Input_9_is_itself
    --- FAIL: TestLargestProperDivisor/Input_9_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor/Input_2_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 2
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_2_is_itself
    --- FAIL: TestLargestProperDivisor/Input_2_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor/Input_3_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 3
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_3_is_itself
    --- FAIL: TestLargestProperDivisor/Input_3_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor/Input_127_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 127
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_127_is_itself
    --- FAIL: TestLargestProperDivisor/Input_127_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor (0.00s)

DONE 11 tests, 5 failures in 0.444s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestLargestProperDivisor
=== RUN   TestLargestProperDivisor/Input_10_is_divisible_by_5
=== RUN   TestLargestProperDivisor/Input_9_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 9
        	            	actual  : 3
        	Test:       	TestLargestProperDivisor/Input_9_is_itself
=== RUN   TestLargestProperDivisor/Input_16_is_divisible_by_8
=== RUN   TestLargestProperDivisor/Input_1_is_itself
=== RUN   TestLargestProperDivisor/Input_2_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 2
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_2_is_itself
=== RUN   TestLargestProperDivisor/Input_3_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 3
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_3_is_itself
=== RUN   TestLargestProperDivisor/Input_15_is_divisible_by_5
=== RUN   TestLargestProperDivisor/Input_12_is_divisible_by_6
=== RUN   TestLargestProperDivisor/Input_127_is_itself
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 127
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_127_is_itself
=== RUN   TestLargestProperDivisor/Input_45_is_divisible_by_15
--- FAIL: TestLargestProperDivisor (0.00s)
    --- PASS: TestLargestProperDivisor/Input_10_is_divisible_by_5 (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_9_is_itself (0.00s)
    --- PASS: TestLargestProperDivisor/Input_16_is_divisible_by_8 (0.00s)
    --- PASS: TestLargestProperDivisor/Input_1_is_itself (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_2_is_itself (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_3_is_itself (0.00s)
    --- PASS: TestLargestProperDivisor/Input_15_is_divisible_by_5 (0.00s)
    --- PASS: TestLargestProperDivisor/Input_12_is_divisible_by_6 (0.00s)
    --- FAIL: TestLargestProperDivisor/Input_127_is_itself (0.00s)
    --- PASS: TestLargestProperDivisor/Input_45_is_divisible_by_15 (0.00s)
FAIL
coverage: 3.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestLargestProperDivisor/Input_9_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 9
        	            	actual  : 3
        	Test:       	TestLargestProperDivisor/Input_9_is_itself
    --- FAIL: TestLargestProperDivisor/Input_9_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor/Input_2_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 2
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_2_is_itself
    --- FAIL: TestLargestProperDivisor/Input_2_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor/Input_3_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 3
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_3_is_itself
    --- FAIL: TestLargestProperDivisor/Input_3_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor/Input_127_is_itself (0.00s)
    largestProperDivisor_test.go:32: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/largestProperDivisor_test.go:32
        	Error:      	Not equal: 
        	            	expected: 127
        	            	actual  : 1
        	Test:       	TestLargestProperDivisor/Input_127_is_itself
    --- FAIL: TestLargestProperDivisor/Input_127_is_itself (0.00s)

=== FAIL: . TestLargestProperDivisor (0.00s)

DONE 11 tests, 5 failures in 0.444s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:21: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:21
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:22: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:22
        	Error:      	Expected nil, but got: [][]int{[]int{17, 24, 1, 8, 15}, []int{23, 5, 7, 14, 16}, []int{4, 6, 13, 20, 22}, []int{10, 12, 19, 21, 3}, []int{11, 18, 25, 2, 9}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:25
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:26: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:26
        	Error:      	Expected nil, but got: [][]int{[]int{30, 39, 48, 1, 10, 19, 28}, []int{38, 47, 7, 9, 18, 27, 29}, []int{46, 6, 8, 17, 26, 35, 37}, []int{5, 14, 16, 25, 34, 36, 45}, []int{13, 15, 24, 33, 42, 44, 4}, []int{21, 23, 32, 41, 43, 3, 12}, []int{22, 31, 40, 49, 2, 11, 20}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:30: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:30
        	Error:      	Not equal: 
        	            	expected: 45
        	            	actual  : 9
        	Test:       	TestMagicSquareOdd
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 10.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:21: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:21
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:22: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:22
        	Error:      	Expected nil, but got: [][]int{[]int{17, 24, 1, 8, 15}, []int{23, 5, 7, 14, 16}, []int{4, 6, 13, 20, 22}, []int{10, 12, 19, 21, 3}, []int{11, 18, 25, 2, 9}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:25
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:26: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:26
        	Error:      	Expected nil, but got: [][]int{[]int{30, 39, 48, 1, 10, 19, 28}, []int{38, 47, 7, 9, 18, 27, 29}, []int{46, 6, 8, 17, 26, 35, 37}, []int{5, 14, 16, 25, 34, 36, 45}, []int{13, 15, 24, 33, 42, 44, 4}, []int{21, 23, 32, 41, 43, 3, 12}, []int{22, 31, 40, 49, 2, 11, 20}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:30: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:30
        	Error:      	Not equal: 
        	            	expected: 45
        	            	actual  : 9
        	Test:       	TestMagicSquareOdd

DONE 1 tests, 1 failure in 0.436s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:21: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:21
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:22: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:22
        	Error:      	Expected nil, but got: [][]int{[]int{17, 24, 1, 8, 15}, []int{23, 5, 7, 14, 16}, []int{4, 6, 13, 20, 22}, []int{10, 12, 19, 21, 3}, []int{11, 18, 25, 2, 9}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:25
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:26: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:26
        	Error:      	Expected nil, but got: [][]int{[]int{30, 39, 48, 1, 10, 19, 28}, []int{38, 47, 7, 9, 18, 27, 29}, []int{46, 6, 8, 17, 26, 35, 37}, []int{5, 14, 16, 25, 34, 36, 45}, []int{13, 15, 24, 33, 42, 44, 4}, []int{21, 23, 32, 41, 43, 3, 12}, []int{22, 31, 40, 49, 2, 11, 20}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:30: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:30
        	Error:      	Not equal: 
        	            	expected: 45
        	            	actual  : 9
        	Test:       	TestMagicSquareOdd
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 10.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:21: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:21
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:22: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:22
        	Error:      	Expected nil, but got: [][]int{[]int{17, 24, 1, 8, 15}, []int{23, 5, 7, 14, 16}, []int{4, 6, 13, 20, 22}, []int{10, 12, 19, 21, 3}, []int{11, 18, 25, 2, 9}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:25
        	Error:      	An error is expected but got nil.
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:26: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:26
        	Error:      	Expected nil, but got: [][]int{[]int{30, 39, 48, 1, 10, 19, 28}, []int{38, 47, 7, 9, 18, 27, 29}, []int{46, 6, 8, 17, 26, 35, 37}, []int{5, 14, 16, 25, 34, 36, 45}, []int{13, 15, 24, 33, 42, 44, 4}, []int{21, 23, 32, 41, 43, 3, 12}, []int{22, 31, 40, 49, 2, 11, 20}}
        	Test:       	TestMagicSquareOdd
    magicSquareOdd_test.go:30: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/magicSquareOdd_test.go:30
        	Error:      	Not equal: 
        	            	expected: 45
        	            	actual  : 9
        	Test:       	TestMagicSquareOdd

DONE 1 tests, 1 failure in 0.436s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light_test [light.test]
./matchBytes_test.go:24:16: undefined: light.matchBytes
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./matchBytes_test.go:24:16: undefined: light.matchBytes

DONE 0 tests, 1 error in 0.107s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./matchBytes_test.go:24:16: undefined: light.matchBytes
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./matchBytes_test.go:24:16: undefined: light.matchBytes

DONE 0 tests, 1 error in 0.107s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

matchBytes.go exit status 1
# light [light.test]
./pascalsTriangle_test.go:52:13: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:52:13: undefined: errors

DONE 0 tests, 1 error in 0.192s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./pascalsTriangle_test.go:52:13: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:52:13: undefined: errors

DONE 0 tests, 1 error in 0.192s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light [light.test]
./phoneNumber_test.go:39:18: undefined: errors
./phoneNumber_test.go:44:18: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:39:18: undefined: errors
./phoneNumber_test.go:44:18: undefined: errors

DONE 0 tests, 2 errors in 0.189s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./phoneNumber_test.go:39:18: undefined: errors
./phoneNumber_test.go:44:18: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:39:18: undefined: errors
./phoneNumber_test.go:44:18: undefined: errors

DONE 0 tests, 2 errors in 0.189s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
# light [light.test]
./sort_test.go:4:8: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:4:8: "fmt" imported and not used

DONE 0 tests, 1 error in 0.134s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./sort_test.go:4:8: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:4:8: "fmt" imported and not used

DONE 0 tests, 1 error in 0.134s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

sort.go exit status 1
# light_test [light.test]
./typeArrayAccess_test.go:19:19: undefined: light.typeArrayAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:19:19: undefined: light.typeArrayAccess

DONE 0 tests, 1 error in 0.112s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./typeArrayAccess_test.go:19:19: undefined: light.typeArrayAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:19:19: undefined: light.typeArrayAccess

DONE 0 tests, 1 error in 0.112s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayAccess.go exit status 1
=== RUN   TestTypeArrayMultidimensionalArrayLength
    typeArrayMultidimensionalArrayLength_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/typeArrayMultidimensionalArrayLength_test.go:25
        	Error:      	Not equal: 
        	            	expected: 1
        	            	actual  : 0
        	Test:       	TestTypeArrayMultidimensionalArrayLength
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/typeArrayMultidimensionalArrayLength_test.go:25
        	Error:      	Not equal: 
        	            	expected: 1
        	            	actual  : 0
        	Test:       	TestTypeArrayMultidimensionalArrayLength

DONE 1 tests, 1 failure in 0.450s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayMultidimensionalArrayLength
    typeArrayMultidimensionalArrayLength_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/typeArrayMultidimensionalArrayLength_test.go:25
        	Error:      	Not equal: 
        	            	expected: 1
        	            	actual  : 0
        	Test:       	TestTypeArrayMultidimensionalArrayLength
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: 
        	Error Trace:	/tmp/eval-dev-quality744030985/light/typeArrayMultidimensionalArrayLength_test.go:25
        	Error:      	Not equal: 
        	            	expected: 1
        	            	actual  : 0
        	Test:       	TestTypeArrayMultidimensionalArrayLength

DONE 1 tests, 1 failure in 0.450s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./validateDate_test.go:23:9: undefined: fmt
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:23:9: undefined: fmt

DONE 0 tests, 1 error in 0.145s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./validateDate_test.go:23:9: undefined: fmt
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:23:9: undefined: fmt

DONE 0 tests, 1 error in 0.145s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

validateDate.go]
