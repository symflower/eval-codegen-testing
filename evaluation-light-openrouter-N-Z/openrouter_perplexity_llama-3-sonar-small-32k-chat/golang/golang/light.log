2024/06/06 12:29:29 Evaluating model "openrouter/perplexity/llama-3-sonar-small-32k-chat" using language "golang" and repository "golang/light"
2024/06/06 12:29:29 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/06 12:29:34 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (4965 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		// Test 1: Balanced brackets
		if !hasBalancedBrackets("[]") {
			t.Errorf("HasBalancedBrackets([]) returned false, expected true")
		}

		// Test 2: Unbalanced brackets
		if hasBalancedBrackets("[") {
			t.Errorf("HasBalancedBrackets([) returned true, expected false")
		}

		// Test 3: Mixed brackets
		if !hasBalancedBrackets("[[]]") {
			t.Errorf("HasBalancedBrackets([[]]) returned false, expected true")
		}

		// Test 4: Non-bracket characters
		if hasBalancedBrackets("abc") {
			t.Errorf("HasBalancedBrackets(abc) returned true, expected false")
		}

		// Test 5: Nested brackets
		if !hasBalancedBrackets("[][][][]") {
			t.Errorf("HasBalancedBrackets([][][][]) returned false, expected true")
		}

		// Test 6: Closed brackets before opened
		if hasBalancedBrackets("]]") {
			t.Errorf("HasBalancedBrackets(]]]) returned true, expected false")
		}

		// Test 7: Empty string
		if !hasBalancedBrackets("") {
			t.Errorf("HasBalancedBrackets(%) returned false, expected true")
		}

		// Test 8: Single opened bracket
		if hasBalancedBrackets("[")) {
			t.Errorf("HasBalancedBrackets([) returned true, expected false")
		}

		// Test 9: Single closed bracket
		if hasBalancedBrackets("]") {
			t.Errorf("HasBalancedBrackets(]) returned true, expected false")
		}

		// Test 10: Multiple non-bracket characters
		if hasBalancedBrackets("abc def ghi") {
			t.Errorf("HasBalancedBrackets(abc def ghi) returned true, expected false")
		}
	}
2024/06/06 12:29:34 $ go mod tidy
2024/06/06 12:29:34 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
balancedBrackets_test.go:1:1: expected 'package', found golang

=== Errors
balancedBrackets_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:29:34 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/06 12:29:39 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (5279 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestBinarySearch(t *testing.T) {
		tests := []struct {
			a    []int
		 x     int
		 want  int
		 want2 bool
		}{
			{[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 5, 4, true},
			{[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 11, -1, false},
			{[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 1, 0, true},
			{[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 10, 9, true},
			{[]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 0, -1, false},
		}

		for _, tt := range tests {
			got := binarySearch(tt.a, tt.x)
			if got != tt.want {
				t.Errorf("binarySearch(%v, %d) = %d, want %d", tt.a, tt.x, got, tt.want)
			}
			if tt.want2 != (got >= 0) {
				t.Errorf("binarySearch(%v, %d) = %d, want2 %t", tt.a, tt.x, got, tt.want2)
			}
		}
	}
	```
2024/06/06 12:29:39 $ go mod tidy
2024/06/06 12:29:39 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestBinarySearch
--- PASS: TestBinarySearch (0.00s)
PASS
coverage: 5.2% of statements
ok  	light	0.004s	coverage: 5.2% of statements

DONE 1 tests in 0.321s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:29:40 Executes tests with 4 coverage objects
2024/06/06 12:29:40 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/06 12:29:42 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (2625 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			name     string
			x, y     int
			expected int
		}{
			{"x < 10", 5, 10, 0},
			{"x > 20", 25, 10, 25},
			{"x within range", 15, 10, 15},
			{"y = 0", 15, 0, 15},
			{"x > 20, y > 20", 25, 30, 25},
			{"x = 20, y > 20", 20, 30, 25},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := callLoopConditionsOftenEnough(tt.x, tt.y); got != tt.expected {
					t.Errorf("callLoopConditionsOftenEnough() = %d, want %d", got, tt.expected)
				}
			})
		}
	}
	```
2024/06/06 12:29:42 $ go mod tidy
2024/06/06 12:29:42 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x_<_10
=== RUN   TestCallLoopConditionsOftenEnough/x_>_20
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
=== RUN   TestCallLoopConditionsOftenEnough/x_within_range
=== RUN   TestCallLoopConditionsOftenEnough/y_=_0
=== RUN   TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
=== RUN   TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 14, want 25
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_<_10 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_within_range (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/y_=_0 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20 (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/x_>_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 14, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 7 tests, 4 failures in 0.328s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:29:43 Executes tests with 4 coverage objects
2024/06/06 12:29:43 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/06 12:29:46 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (2649 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestCascadingIfElse(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{"i == 1", 1, 2},
			{"i == 3", 3, 4},
			{"i == 2", 2, 5},
			{"i == 4", 4, 5},
			{"i == 5", 5, 5},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := cascadingIfElse(tt.i); got != tt.want {
					t.Errorf("cascadingIfElse(%d) = %d, want %d", tt.i, got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:29:46 $ go mod tidy
2024/06/06 12:29:46 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCascadingIfElse
=== RUN   TestCascadingIfElse/i_==_1
=== RUN   TestCascadingIfElse/i_==_3
=== RUN   TestCascadingIfElse/i_==_2
=== RUN   TestCascadingIfElse/i_==_4
=== RUN   TestCascadingIfElse/i_==_5
--- PASS: TestCascadingIfElse (0.00s)
    --- PASS: TestCascadingIfElse/i_==_1 (0.00s)
    --- PASS: TestCascadingIfElse/i_==_3 (0.00s)
    --- PASS: TestCascadingIfElse/i_==_2 (0.00s)
    --- PASS: TestCascadingIfElse/i_==_4 (0.00s)
    --- PASS: TestCascadingIfElse/i_==_5 (0.00s)
PASS
coverage: 2.4% of statements
ok  	light	0.003s	coverage: 2.4% of statements

DONE 6 tests in 0.328s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:29:46 Executes tests with 3 coverage objects
2024/06/06 12:29:46 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/06 12:29:49 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3009 ms) with:
	```go
	package light

	import (
		"errors"
		"testing"
	)

	func TestComputeStepCount(t *testing.T) {
		tests := []struct {
			name      string
			start      int
			expected  int
			expectedError error
		}{
			{"positive integer", 10, 1, nil},
			{"positive even number", 8, 4, nil},
			{"positive odd number", 9, 2, nil},
			{"zero", 0, 0, errors.New("Only positive integers are allowed")},
			{"one", 1, 0, nil},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				got, err := computeStepCount(tc.start)
				if err != tc.expectedError {
					t.Errorf("computeStepCount(%d) returned %v, want %v", tc.start, err, tc.expectedError)
					return
				}
				if got != tc.expected {
					t.Errorf("computeStepCount(%d) returned %d, want %d", tc.start, got, tc.expected)
				}
			})
		}
	}
2024/06/06 12:29:49 $ go mod tidy
2024/06/06 12:29:49 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
collatzCalculator_test.go:1:1: expected 'package', found 'go'

=== Errors
collatzCalculator_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:29:49 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/06 12:29:52 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (2578 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestConditionsAnd(t *testing.T) {
		tests := []struct {
			name   string
			x, y   rune
			want   bool
		}{
			{"TwoAs", 'A', 'A', true},
			{"TwoBs", 'B', 'B', true},
			{"OneAOneB", 'A', 'B', true},
			{"OneAB", 'A', 'b', false},
			{"OneBA", 'b', 'A', false},
			{"TwoCs", 'C', 'C', false},
			{"TwoDs", 'D', 'D', false},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := conditionsAnd(tt.x, tt.y); got != tt.want {
					t.Errorf("conditionsAnd() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:29:52 $ go mod tidy
2024/06/06 12:29:52 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestConditionsAnd
=== RUN   TestConditionsAnd/TwoAs
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
=== RUN   TestConditionsAnd/TwoBs
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
=== RUN   TestConditionsAnd/OneAOneB
=== RUN   TestConditionsAnd/OneAB
=== RUN   TestConditionsAnd/OneBA
=== RUN   TestConditionsAnd/TwoCs
=== RUN   TestConditionsAnd/TwoDs
--- FAIL: TestConditionsAnd (0.00s)
    --- FAIL: TestConditionsAnd/TwoAs (0.00s)
    --- FAIL: TestConditionsAnd/TwoBs (0.00s)
    --- PASS: TestConditionsAnd/OneAOneB (0.00s)
    --- PASS: TestConditionsAnd/OneAB (0.00s)
    --- PASS: TestConditionsAnd/OneBA (0.00s)
    --- PASS: TestConditionsAnd/TwoCs (0.00s)
    --- PASS: TestConditionsAnd/TwoDs (0.00s)
FAIL
coverage: 1.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestConditionsAnd/TwoAs (0.00s)
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
    --- FAIL: TestConditionsAnd/TwoAs (0.00s)

=== FAIL: . TestConditionsAnd/TwoBs (0.00s)
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
    --- FAIL: TestConditionsAnd/TwoBs (0.00s)

=== FAIL: . TestConditionsAnd (0.00s)

DONE 8 tests, 3 failures in 0.360s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:29:52 Executes tests with 2 coverage objects
2024/06/06 12:29:52 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/06 12:29:57 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (4214 ms) with:
	```go
	package light_test

	import (
		"testing"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			name string
			seq  []int
			want string
		}{
			{"empty", []int{}, ""},
			{"single", []int{1}, "0;"},
			{"two", []int{-7, 1}, "1;"},
			{"three", []int{-1, 3, -4}, "1;"},
			{"four", []int{2, -3, 1, -2}, "2;"},
			{"simple", []int{-1, 3, -4, 5}, "2;3;"},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := equilibriumIndices(tt.seq); got != tt.want {
					t.Errorf("equilibriumIndices() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:29:57 $ go mod tidy
2024/06/06 12:29:57 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./equilibriumIndices_test.go:22:14: undefined: equilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:22:14: undefined: equilibriumIndices

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:29:57 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/06 12:29:59 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (2680 ms) with:
	```golang
	package light

	import (
		"fmt"
		"testing"
	)

	func TestForLoop(t *testing.T) {
		tests := []struct {
			s    int
			want int
		}{
			{s: 0, want: 0},
			{s: 1, want: 0},
			{s: 2, want: 1},
			{s: 3, want: 3},
			{s: 4, want: 6},
			{s: 5, want: 10},
			{s: 10, want: 45},
		}

		for _, tt := range tests {
			got := forLoop(tt.s)
			if got != tt.want {
				t.Errorf("forLoop(%d) = %d, want %d", tt.s, got, tt.want)
			}
		}
	}
	```
2024/06/06 12:29:59 $ go mod tidy
2024/06/06 12:29:59 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./forLoop_test.go:4:2: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:4:2: "fmt" imported and not used

DONE 0 tests, 1 error in 0.120s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:30:00 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/06 12:30:31 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (31731 ms) with:
	Here is a test file for the provided Go code:

	```golang
	package light

	import (
		"testing"
	)

	func TestJacobiSymbol(t *testing.T) {
		tests := []struct {
			k        uint64
			n        uint64
			want     int
			wantErr  bool
			errMsg   string
		}{
			{k: 0, n: 5, want: 0, wantErr: true, errMsg: "k = 0, n = 5"},
			{k: 1, n: 5, want: 1, wantErr: false},
			{k: 2, n: 5, want: 1, wantErr: false},
			{k: 3, n: 5, want: -1, wantErr: false},
			{k: 4, n: 5, want: 1, wantErr: false},
			{k: 5, n: 5, want: 1, wantErr: false},
			{k: 6, n: 5, want: -1, wantErr: false},
			{k: 7, n: 5, want: -1, wantErr: false},
			{k: 8, n: 5, want: 1, wantErr: false},
			{k: 9, n: 5, want: 1, wantErr: false},
			{k: -1, n: 5, want: 0, wantErr: true, errMsg: "k = -1, n = 5"},
			{k: -2, n: 5, want: 0, wantErr: true, errMsg: "k = -2, n = 5"},
			{k: -3, n: 5, want: 0, wantErr: true, errMsg: "k = -3, n = 5"},
			{k: -4, n: 5, want: 0, wantErr: true, errMsg: "k = -4, n = 5"},
			{k: -5, n: 5, want: 0, wantErr: true, errMsg: "k = -5, n = 5"},
			{k: -6, n: 5, want: 0, wantErr: true, errMsg: "k = -6, n = 5"},
			{k: -7, n: 5, want: 0, wantErr: true, errMsg: "k = -7, n = 5"},
			{k: -8, n: 5, want: 0, wantErr: true, errMsg: "k = -8, n = 5"},
			{k: -9, n: 5, want: 0, wantErr: true, errMsg: "k = -9, n = 5"},
			{k: 1, n: 0, want: 0, wantErr: true, errMsg: "k = 1, n = 0"},
			{k: 1, n: 1, want: 1, wantErr: false},
			{k: 1, n: 2, want: 0, wantErr: false},
			{k: 1, n: 3, want: 1, wantErr: false},
			{k: 1, n: 4, want: 1, wantErr: false},
			{k: 1, n: 5, want: 1, wantErr: false},
			{k: 1, n: 6, want: 1, wantErr: false},
			{k: 1, n: 7, want: 1, wantErr: false},
			{k: 1, n: 8, want: 1, wantErr: false},
			{k: 1, n: 9, want: 1, wantErr: false},
			{k: 2, n: 0, want: 0, wantErr: true, errMsg: "k = 2, n = 0"},
			{k: 2, n: 1, want: 1, wantErr: false},
			{k: 2, n: 2, want: 1, wantErr: false},
			{k: 2, n: 3, want: 0, wantErr: false},
			{k: 2, n: 4, want: 1, wantErr: false},
			{k: 2, n: 5, want: 0, wantErr: false},
			{k: 2, n: 6, want: 1, wantErr: false},
			{k: 2, n: 7, want: 0, wantErr: false},
			{k: 2, n: 8, want: 1, wantErr: false},
			{k: 2, n: 9, want: 0, wantErr: false},
			{k: 3, n: 0, want: 0, wantErr: true, errMsg: "k = 3, n = 0"},
			{k: 3, n: 1, want: 1, wantErr: false},
			{k: 3, n: 2, want: 0, wantErr: false},
			{k: 3, n: 3, want: -1, wantErr: false},
			{k: 3, n: 4, want: 1, wantErr: false},
			{k: 3, n: 5, want: -1, wantErr: false},
			{k: 3, n: 6, want: 1, wantErr: false},
			{k: 3, n: 7, want: -1, wantErr: false},
			{k: 3, n: 8, want: 1, wantErr: false},
			{k: 3, n: 9, want: -1, wantErr: false},
			{k: 4, n: 0, want: 0, wantErr: true, errMsg: "k = 4, n = 0"},
			{k: 4, n: 1, want: 1, wantErr: false},
			{k: 4, n: 2, want: 1, wantErr: false},
			{k: 4, n: 3, want: 1, wantErr: false},
			{k: 4, n: 4, want: 1, wantErr: false},
			{k: 4, n: 5, want: 1, wantErr: false},
			{k: 4, n: 6, want: 1, wantErr: false},
			{k: 4, n: 7, want: 1, wantErr: false},
			{k: 4, n: 8, want: 1, wantErr: false},
			{k: 4, n: 9, want: 1, wantErr: false},
			{k: 5, n: 0, want: 0, wantErr: true, errMsg: "k = 5, n = 0"},
			{k: 5, n: 1, want: 1, wantErr: false},
			{k: 5, n: 2, want: 0, wantErr: false},
			{k: 5, n: 3, want: -1, wantErr: false},
			{k: 5, n: 4, want: 1, wantErr: false},
			{k: 5, n: 5, want: 1, wantErr: false},
			{k: 5, n: 6, want: -1, wantErr: false},
			{k: 5, n: 7, want: -1, wantErr: false},
			{k: 5, n: 8, want: 1, wantErr: false},
			{k: 5, n: 9, want: -1, wantErr: false},
			{k: 6, n: 0, want: 0, wantErr: true, errMsg: "k = 6, n = 0"},
			{k: 6, n: 1, want: 1, wantErr: false},
			{k: 6, n: 2, want: 0, wantErr: false},
			{k: 6, n: 3, want: 1, wantErr: false},
			{k: 6, n: 4, want: 1, wantErr: false},
			{k: 6, n: 5, want: -1, wantErr: false},
			{k: 6, n: 6, want: 1, wantErr: false},
			{k: 6, n: 7, want: -1, wantErr: false},
			{k: 6, n: 8, want: 1, wantErr: false},
			{k: 6, n: 9, want: 1, wantErr: false},
			{k: 7, n: 0, want: 0, wantErr: true, errMsg: "k = 7, n = 0"},
			{k: 7, n: 1, want: 1, wantErr: false},
			{k: 7, n: 2, want: 0, wantErr: false},
			{k: 7, n: 3, want: -1, wantErr: false},
			{k: 7, n: 4, want: 1, wantErr: false},
			{k: 7, n: 5, want: -1, wantErr: false},
			{k: 7, n: 6, want: -1, wantErr: false},
			{k: 7, n: 7, want: 1, wantErr: false},
			{k: 7, n: 8, want: -1, wantErr: false},
			{k: 7, n: 9, want: -1, wantErr: false},
			{k: 8, n: 0, want: 0, wantErr: true, errMsg: "k = 8, n = 0"},
			{k: 8, n: 1, want: 1, wantErr: false},
			{k: 8, n: 2, want: 1, wantErr: false},
			{k: 8, n: 3, want: 1, wantErr: false},
			{k: 8, n: 4, want: 1, wantErr: false},
			{k: 8, n: 5, want: 1, wantErr: false},
			{k: 8, n: 6, want: 1, wantErr: false},
			{k: 8, n: 7, want: 1, wantErr: false},
			{k: 8, n: 8, want: 1, wantErr: false},
			{k: 8, n: 9, want: 1, wantErr: false},
			{k: 9, n: 0, want: 0, wantErr: true, errMsg: "k = 9, n = 0"},
			{k: 9, n: 1, want: 1, wantErr: false},
			{k: 9, n: 2, want: 0, wantErr: false},
			{k: 9, n: 3, want: -1, wantErr: false},
			{k: 9, n: 4, want: 1, wantErr: false},
			{k: 9, n: 5, want: 1, wantErr: false},
			{k: 9, n: 6, want: 1, wantErr: false},
			{k: 9, n: 7, want: -1, wantErr: false},
			{k: 9, n: 8, want: 1, wantErr: false},
			{k: 9, n: 9, want: -1, wantErr: false},
		}

		for _, tt := range tests {
			got, err := jacobiSymbol(tt.k, tt.n)
			if (err != nil) != tt.wantErr {
				t.Errorf("jacobiSymbol(%d, %d) = %d, err = %v, want err %v", tt.k, tt.n, got, err, tt.wantErr)
				continue
			}
			if err != nil {
				if err.Error() != tt.errMsg {
					t.Errorf("jacobiSymbol(%d, %d) = %d, err = %v, want err %v", tt.k, tt.n, got, err, tt.errMsg)
				}
				continue
			}
			if got != tt.want {
				t.Errorf("jacobiSymbol(%d, %d) = %d, want %d", tt.k, tt.n, got, tt.want)
			}
		}
	}
	```
2024/06/06 12:30:31 $ go mod tidy
2024/06/06 12:30:31 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./jacobiSymbol_test.go:25:7: cannot use -1 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:26:7: cannot use -2 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:27:7: cannot use -3 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:28:7: cannot use -4 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:29:7: cannot use -5 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:30:7: cannot use -6 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:31:7: cannot use -7 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:32:7: cannot use -8 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:33:7: cannot use -9 (untyped int constant) as uint64 value in struct literal (overflows)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./jacobiSymbol_test.go:25:7: cannot use -1 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:26:7: cannot use -2 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:27:7: cannot use -3 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:28:7: cannot use -4 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:29:7: cannot use -5 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:30:7: cannot use -6 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:31:7: cannot use -7 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:32:7: cannot use -8 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:33:7: cannot use -9 (untyped int constant) as uint64 value in struct literal (overflows)

DONE 0 tests, 9 errors in 0.129s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:30:32 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/06 12:30:36 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (4861 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		tests := []struct {
			name string
			limit int
			want []int
		}{
			{"limit 1", 1, []int{1}},
			{"limit 2", 2, []int{1, 1}},
			{"limit 3", 3, []int{1, 1, 2}},
			{"limit 5", 5, []int{1, 1, 2, 2, 3}},
			{"limit 10", 10, []int{1, 1, 2, 2, 3, 3, 4, 4, 4, 5}},
			{"limit 20", 20, []int{1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8}},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := initialiseKlarnerRadoSequence(tt.limit)
				if !equals(got, tt.want) {
					t.Errorf("initialiseKlarnerRadoSequence() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	func equals(a, b []int) bool {
		if len(a) != len(b) {
			return false
		}
		for i := range a {
			if a[i] != b[i] {
				return false
			}
		}
		return true
	}
	```
2024/06/06 12:30:36 $ go mod tidy
2024/06/06 12:30:36 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/limit_1
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1], want [1]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_2
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3], want [1 1]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_3
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4], want [1 1 2]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_5
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9], want [1 1 2 2 3]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_10
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21], want [1 1 2 2 3 3 4 4 4 5]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_20
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21 22 27 28 31 39 40 43 45 46 55], want [1 1 2 2 3 3 4 4 4 5 5 6 6 6 6 7 7 7 7 7 8]
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_2 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_3 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_20 (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1], want [1]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_2 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3], want [1 1]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_2 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_3 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4], want [1 1 2]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_3 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9], want [1 1 2 2 3]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21], want [1 1 2 2 3 3 4 4 4 5]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_20 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21 22 27 28 31 39 40 43 45 46 55], want [1 1 2 2 3 3 4 4 4 5 5 6 6 6 6 7 7 7 7 7 8]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_20 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)

DONE 7 tests, 7 failures in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:30:37 Executes tests with 3 coverage objects
2024/06/06 12:30:37 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/06 12:30:40 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3343 ms) with:
	Here is the test file for the given code:

	```go
	package light

	import (
		"math"
		"testing"
	)

	func TestMaximumValue(t *testing.T) {
		tests := []struct {
			name     string
			maxWeight int
			items     []Item
			want      int
		}{
			{"empty items", 10, []Item{}, 0},
			{"single item", 10, []Item{{10, 10}}, 10},
			{"multiple items", 10, []Item{{2, 3}, {3, 4}, {4, 5}}, 9},
			{"exceeding maximum weight", 5, []Item{{4, 4}, {5, 5}}, 4},
			{"no items can fit", 0, []Item{{1, 1}, {2, 2}, {3, 3}}, 0},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				got := maximumValue(tc.maxWeight, tc.items)
				if got != tc.want {
					t.Errorf("maximumValue(%d, %v) = %d, want %d", tc.maxWeight, tc.items, got, tc.want)
				}
			})
		}
	}
	```
2024/06/06 12:30:40 $ go mod tidy
2024/06/06 12:30:40 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./knapsack_test.go:4:2: "math" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:4:2: "math" imported and not used

DONE 0 tests, 1 error in 0.139s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:30:40 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/06 12:30:44 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3262 ms) with:
	```golang
	package light

	import (
		"context"
		"fmt"
		"testing"
	)

	func TestLargestProperDivisor(t *testing.T) {
		tests := []struct {
			aNumber int
			expect  int
			err      string
		}{
			{1, 1, "Argument must be >= 1: 1"},
			{2, 1, "Argument must be >= 1: 2"},
			{3, 1, ""},
			{4, 2, ""},
			{5, 1, ""},
			{6, 3, ""},
			{7, 1, ""},
			{8, 4, ""},
			{9, 3, ""},
			{10, 5, ""},
		}

		for _, tc := range tests {
			got, err := largestProperDivisor(tc.aNumber)
			if err != nil && err.Error() != tc.err {
				t.Errorf("largestProperDivisor(%d) = ?, err %q, want ?, err %q", tc.aNumber, err, tc.err)
			}
			if got != tc.expect {
				t.Errorf("largestProperDivisor(%d) = %d, want %d", tc.aNumber, got, tc.expect)
			}
		}
	}
	```
2024/06/06 12:30:44 $ go mod tidy
2024/06/06 12:30:44 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./largestProperDivisor_test.go:4:2: "context" imported and not used
./largestProperDivisor_test.go:5:2: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:4:2: "context" imported and not used
./largestProperDivisor_test.go:5:2: "fmt" imported and not used

DONE 0 tests, 2 errors in 0.122s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:30:44 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/06 12:30:50 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (5644 ms) with:
	```go
	package light_test

	import (
		"context"
		"testing"

		. "github.com/onsi/ginkgo"
		. "github.com/onsi/gomega"
		"light"
	)

	func TestMagicSquareOdd(t *testing.T) {
		RegisterFailer("Fail", fail)
		RunConcurrentGrammarTests(t)
	}

	var _ = Describe("MagicSquareOdd", func() {
		Describe("when base is odd and greater than 2", func() {
			Context("when base is 3", func() {
			 It("returns a 3x3 magic square", func() {
				 grid, err := light.MagicSquareOdd(3)
				 Expect(err).To(BeNil())
				 Expect(grid).NotTo(BeNil())
				 Expect(len(grid)).To(Equal(3))
				 Expect(len(grid[0])).To(Equal(3))
				 for i := 0; i < 3; i++ {
					for j := 0; j < 3; j++ {
						Expect(grid[i][j]).To(BeNumerically("==", i*4+j+1))
					}
				}
			 })
			})
			Context("when base is 5", func() {
				It("returns a 5x5 magic square", func() {
					grid, err := light.MagicSquareOdd(5)
					Expect(err).To(BeNil())
					Expect(grid).NotTo(BeNil())
					Expect(len(grid)).To(Equal(5))
					Expect(len(grid[0])).To(Equal(5))
					for i := 0; i < 5; i++ {
						for j := 0; j < 5; j++ {
							Expect(grid[i][j]).To(BeNumerically("==", i*10+j+1))
						}
					}
				})
			})
		})

		Describe("when base is even or less than 3", func() {
			Context("when base is 2", func() {
				It("returns an error", func() {
					_, err := light.MagicSquareOdd(2)
					Expect(err).To(Equal(errors.New("base must be odd and > 2")))
				})
			})

			Context("when base is 4", func() {
				It("returns an error", func() {
					_, err := light.MagicSquareOdd(4)
					Expect(err).To(Equal(errors.New("base must be odd and > 2")))
				})
			})
		})
	})
	```
2024/06/06 12:30:50 $ go mod tidy
go: finding module for package github.com/onsi/ginkgo
go: finding module for package github.com/onsi/gomega
go: found github.com/onsi/ginkgo in github.com/onsi/ginkgo v1.16.5
go: found github.com/onsi/gomega in github.com/onsi/gomega v1.33.1
2024/06/06 12:30:50 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./magicSquareOdd_test.go:4:2: "context" imported and not used
./magicSquareOdd_test.go:13:2: undefined: RegisterFailer
./magicSquareOdd_test.go:13:25: undefined: fail
./magicSquareOdd_test.go:14:2: undefined: RunConcurrentGrammarTests
./magicSquareOdd_test.go:21:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:35:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:52:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:53:26: undefined: errors
./magicSquareOdd_test.go:59:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:60:26: undefined: errors
./magicSquareOdd_test.go:4:2: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:4:2: "context" imported and not used
./magicSquareOdd_test.go:13:2: undefined: RegisterFailer
./magicSquareOdd_test.go:13:25: undefined: fail
./magicSquareOdd_test.go:14:2: undefined: RunConcurrentGrammarTests
./magicSquareOdd_test.go:21:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:35:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:52:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:53:26: undefined: errors
./magicSquareOdd_test.go:59:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:60:26: undefined: errors
./magicSquareOdd_test.go:4:2: too many errors

DONE 0 tests, 11 errors in 1.128s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:30:51 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/06 12:30:55 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3696 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestMatchBytes(t *testing.T) {
		tests := []struct {
			name    string
			s1      []byte
			s2      []byte
			want     bool
		">*</_      // Use underscore to ignore
		}{
			{"same", []byte("hello"), []byte("hello"), true, _},
			{"difference", []byte("hello"), []byte("goodbye"), false, _},
			{"case_insensitive", []byte("Hello"), []byte("hello"), true, _},
			{"case_insensitive_2", []byte("HELLO"), []byte("hello"), true, _},
			{"all_lowercase", []byte("hello"), []byte("hello"), true, _},
			{"all_uppercase", []byte("HELLO"), []byte("HELLO"), true, _},
			{"mixed_case", []byte("HelLo"), []byte("hello"), true, _},
			{"mixed_case_2", []byte("hELLO"), []byte("hello"), true, _},
			{"empty", []byte(""), []byte(""), true, _},
			{"non_empty", []byte("hello"), []byte(""), false, _},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := matchBytes(tt.s1, tt.s2); got != tt.want {
					t.Errorf("%v().matchBytes(%v, %v) = %v, want %v", tt.name, tt.s1, tt.s2, got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:30:55 $ go mod tidy
2024/06/06 12:30:55 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light
matchBytes_test.go:13:2: string literal not terminated
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:13:2: string literal not terminated

DONE 0 tests, 1 error in 0.037s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:30:55 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/06 12:31:01 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (6465 ms) with:
	Here is the test code for the provided Go code:

	```golang
	package light

	import (
		_errors "errors"
		"testing"
	)

	func TestPascalsTriangle(t *testing.T) {
		// Test with 0 rows
		_, err := pascalsTriangle(0)
		if err == nil {
			t.Errorf("Expected error for 0 rows, but got nil")
		}

		// Test with negative rows
		_, err = pascalsTriangle(-1)
		if err == nil {
			t.Errorf("Expected error for negative rows, but got nil")
		}

		// Test with 1 row
		triangle, err := pascalsTriangle(1)
		if err != nil {
			t.Errorf("Expected no error for 1 row, but got %v", err)
		}
		if len(triangle) != 1 || len(triangle[0]) != 1 || triangle[0][0] != 1 {
			t.Errorf("Expected [[1]] for 1 row, but got %v", triangle)
		}

		// Test with 2 rows
		triangle, err = pascalsTriangle(2)
		if err != nil {
			t.Errorf("Expected no error for 2 rows, but got %v", err)
		}
		if len(triangle) != 2 || len(triangle[0]) != 1 || len(triangle[1]) != 2 || triangle[0][0] != 1 || triangle[1][0] != 1 || triangle[1][1] != 1 {
			t.Errorf("Expected [[1], [1, 1]] for 2 rows, but got %v", triangle)
		}

		// Test with 3 rows
		triangle, err = pascalsTriangle(3)
		if err != nil {
			t.Errorf("Expected no error for 3 rows, but got %v", err)
		}
		if len(triangle) != 3 || len(triangle[0]) != 1 || len(triangle[1]) != 2 || len(triangle[2]) != 3 || triangle[0][0] != 1 || triangle[1][0] != 1 || triangle[1][1] != 1 || triangle[2][0] != 1 || triangle[2][1] != 2 || triangle[2][2] != 1 {
			t.Errorf("Expected [[1], [1, 1], [1, 2, 1]] for 3 rows, but got %v", triangle)
		}
	}
2024/06/06 12:31:01 $ go mod tidy
2024/06/06 12:31:01 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
pascalsTriangle_test.go:1:1: expected 'package', found Here

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found Here

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:31:01 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/06 12:31:05 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3983 ms) with:
	Here is the test file for the given Go code:

	```golang
	package light

	import (
		"fmt"
		"testing"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			dirtyNumber string
		expected    string
		expectedErr error
		}{
			{"1234567890", "1234567890", nil},
			{" 123-456-7890", "1234567890", nil},
			{"(123) 456-7890", "1234567890", nil},
			{"+1 123 456 7890", "1234567890", nil},
			{"1234567890a", "", errors.New("letters not permitted")},
			{"1234567890-", "1234567890", nil},
			{"1234567890-@", "", errors.New("punctuations not permitted")},
			{"1234567890", "1234567890", nil},
			{"", "", nil},
		}

		for _, test := range tests {
			cleanNumber, err := extractDigits(test.dirtyNumber)
			if err != nil {
				if err != test.expectedErr {
					t.Errorf("extractDigits(%q) returned %v, but expected %v", test.dirtyNumber, err, test.expectedErr)
				}
			} else {
				if cleanNumber != test.expected {
					t.Errorf("extractDigits(%q) returned %q, but expected %q", test.dirtyNumber, cleanNumber, test.expected)
				}
			}
		}
	}
	```
2024/06/06 12:31:05 $ go mod tidy
2024/06/06 12:31:05 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./phoneNumber_test.go:4:2: "fmt" imported and not used
./phoneNumber_test.go:18:23: undefined: errors
./phoneNumber_test.go:20:24: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:2: "fmt" imported and not used
./phoneNumber_test.go:18:23: undefined: errors
./phoneNumber_test.go:20:24: undefined: errors

DONE 0 tests, 3 errors in 0.132s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:31:06 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/06 12:31:09 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3034 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestSimpleIfElse(t *testing.T) {
		tests := []struct {
			name     string
			i        int
			expected int
		}{
			{"case 1", 1, 0},
			{"case 2", 0, 1},
			{"case 3", -1, 1},
			{"case 4", 2, 1},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				if got := simpleIfElse(tc.i); got != tc.expected {
					t.Errorf("simpleIfElse(%d) = %d, want %d", tc.i, got, tc.expected)
				}
			})
		}
	}
	```
2024/06/06 12:31:09 $ go mod tidy
2024/06/06 12:31:09 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleIfElse
=== RUN   TestSimpleIfElse/case_1
=== RUN   TestSimpleIfElse/case_2
=== RUN   TestSimpleIfElse/case_3
=== RUN   TestSimpleIfElse/case_4
--- PASS: TestSimpleIfElse (0.00s)
    --- PASS: TestSimpleIfElse/case_1 (0.00s)
    --- PASS: TestSimpleIfElse/case_2 (0.00s)
    --- PASS: TestSimpleIfElse/case_3 (0.00s)
    --- PASS: TestSimpleIfElse/case_4 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 5 tests in 0.319s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:31:09 Executes tests with 2 coverage objects
2024/06/06 12:31:09 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/06 12:31:11 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (1744 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			i    int
		.want int
		}{
			{1, 0},
			{0, 1},
			{-1, 1},
			{2, 1},
		}

		for _, test := range tests {
			if got := simpleSwitchWithReturn(test.i); got != test.want {
				t.Errorf("simpleSwitchWithReturn(%d) = %d, want %d", test.i, got, test.want)
			}
		}
	}
	```
2024/06/06 12:31:11 $ go mod tidy
2024/06/06 12:31:11 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light
simpleSwitchWithReturn_test.go:10:2: expected '}', found '.'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
simpleSwitchWithReturn_test.go:10:2: expected '}', found '.'

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:31:11 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/06 12:31:13 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (2444 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestIsSorted(t *testing.T) {
		tests := []struct {
			input  []int
			expect bool
		}{
			{[]int{}, true},
			{[]int{1}, true},
			{[]int{1, 2}, true},
			{[]int{1, 2, 3}, true},
			{[]int{3, 2, 1}, false},
			{[]int{2, 1}, false},
			{[]int{1, 1, 1}, true},
			{[]int{1, 2, 2, 3}, true},
			{[]int{3, 2, 1, 1}, false},
		}

		for _, test := range tests {
			if got := isSorted(test.input); got != test.expect {
				t.Errorf("isSorted(%v) = %v, want %v", test.input, got, test.expect)
			}
		}
	}
	```
2024/06/06 12:31:13 $ go mod tidy
2024/06/06 12:31:13 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestIsSorted
    sort_test.go:25: isSorted([]) = false, want true
--- FAIL: TestIsSorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestIsSorted (0.00s)
    sort_test.go:25: isSorted([]) = false, want true

DONE 1 tests, 1 failure in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:31:14 Executes tests with 2 coverage objects
2024/06/06 12:31:14 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/06 12:31:16 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (2375 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestTypeArrayAccess(t *testing.T) {
		tests := []struct {
			name string
			x    []int
			want int
		}{
			{"normal", []int{123}, 123},
			{"not normal", []int{456}, 3},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayAccess(tt.x); got != tt.want {
					t.Errorf("%v() = %v, want %v", "typeArrayAccess", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:31:16 $ go mod tidy
2024/06/06 12:31:16 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayAccess
=== RUN   TestTypeArrayAccess/normal
=== RUN   TestTypeArrayAccess/not_normal
--- PASS: TestTypeArrayAccess (0.00s)
    --- PASS: TestTypeArrayAccess/normal (0.00s)
    --- PASS: TestTypeArrayAccess/not_normal (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 3 tests in 0.317s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 12:31:16 Executes tests with 2 coverage objects
2024/06/06 12:31:16 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/06 12:31:20 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3596 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			name string
		 input []int
		 want  int
		}{
			{"empty array", []int{}, 0},
			{"first element is 0", []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1},
			{"first element is not 0", []int{1, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0},
			{"second element is 8", []int{0, 8, 1, 2, 3, 4, 5, 6, 7, 9}, 2},
			{"second element is not 8", []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayConsecutiveAccess(tt.input); got != tt.want {
					t.Errorf("typeArrayConsecutiveAccess() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 12:31:20 $ go mod tidy
2024/06/06 12:31:20 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/empty_array
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c3c0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c3c0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/empty_array (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c3c0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c3c0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 2 tests, 2 failures in 0.308s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:31:20 Executes tests with 0 coverage objects
2024/06/06 12:31:20 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/06 12:31:25 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (4258 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name   string
			input  [][]int
			output int
		}{
			{"test1", [][]int{{1, 2}, {3, 4}}, 2},
			{"test2", [][]int{{1, 2}}, 1},
			{"test3", [][]int{{1, 2}, {3, 4, 5}, {6, 7, 8, 9}}, 0},
			{"test4", [][]int{}, 0},
			{"test5", [][]int{{1, 2, 3}, {4, 5, 6}}, 0},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayMultidimensionalArrayLength(tt.input); got != tt.output {
					t.Errorf("typeArrayMultidimensionalArrayLength() = %d, want %d", got, tt.output)
				}
			})
		}
	}
	```
2024/06/06 12:31:25 $ go mod tidy
2024/06/06 12:31:25 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/test1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test2
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test3
=== RUN   TestTypeArrayMultidimensionalArrayLength/test4
=== RUN   TestTypeArrayMultidimensionalArrayLength/test5
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test3 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 6 tests, 3 failures in 0.330s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:31:25 Executes tests with 3 coverage objects
2024/06/06 12:31:25 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/06 12:31:28 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (2725 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestValidDate(t *testing.T) {
		tests := []struct {
			day   int
			month int
			year  int
			want  bool
		}{
			{1, 1, 2020, true},
			{32, 1, 2020, false},
			{1, 13, 2020, false},
			{1, 2, 2020, true},
			{29, 2, 2020, true}, // leap year
			{30, 2, 2020, false},
			{1, 1, 1582, false},
			{1, 1, 2021, true},
			{1, 1, 100, true},
		}

		for _, tt := range tests {
			got := validDate(tt.day, tt.month, tt.year)
			if got != tt.want {
				t.Errorf("validDate(%d, %d, %d) = %t, want %t", tt.day, tt.month, tt.year, got, tt.want)
			}
		}
	}
	```
2024/06/06 12:31:28 $ go mod tidy
2024/06/06 12:31:28 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestValidDate
    validateDate_test.go:28: validDate(1, 1, 100) = false, want true
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:28: validDate(1, 1, 100) = false, want true

DONE 1 tests, 1 failure in 0.349s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 12:31:28 Executes tests with 6 coverage objects
2024/06/06 12:31:28 Evaluated model "openrouter/perplexity/llama-3-sonar-small-32k-chat" using language "golang" and repository "golang/light": encountered 19 problems: [exit status 1
balancedBrackets_test.go:1:1: expected 'package', found golang

=== Errors
balancedBrackets_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
balancedBrackets_test.go:1:1: expected 'package', found golang

=== Errors
balancedBrackets_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x_<_10
=== RUN   TestCallLoopConditionsOftenEnough/x_>_20
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
=== RUN   TestCallLoopConditionsOftenEnough/x_within_range
=== RUN   TestCallLoopConditionsOftenEnough/y_=_0
=== RUN   TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
=== RUN   TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 14, want 25
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_<_10 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_within_range (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/y_=_0 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20 (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/x_>_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 14, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 7 tests, 4 failures in 0.328s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x_<_10
=== RUN   TestCallLoopConditionsOftenEnough/x_>_20
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
=== RUN   TestCallLoopConditionsOftenEnough/x_within_range
=== RUN   TestCallLoopConditionsOftenEnough/y_=_0
=== RUN   TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
=== RUN   TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 14, want 25
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_<_10 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_within_range (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/y_=_0 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20 (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/x_>_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 0, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/x_>_20,_y_>_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20 (0.00s)
    callLoopConditionsOftenEnough_test.go:24: callLoopConditionsOftenEnough() = 14, want 25
    --- FAIL: TestCallLoopConditionsOftenEnough/x_=_20,_y_>_20 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 7 tests, 4 failures in 0.328s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
collatzCalculator_test.go:1:1: expected 'package', found 'go'

=== Errors
collatzCalculator_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
collatzCalculator_test.go:1:1: expected 'package', found 'go'

=== Errors
collatzCalculator_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

collatzCalculator.go exit status 1
=== RUN   TestConditionsAnd
=== RUN   TestConditionsAnd/TwoAs
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
=== RUN   TestConditionsAnd/TwoBs
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
=== RUN   TestConditionsAnd/OneAOneB
=== RUN   TestConditionsAnd/OneAB
=== RUN   TestConditionsAnd/OneBA
=== RUN   TestConditionsAnd/TwoCs
=== RUN   TestConditionsAnd/TwoDs
--- FAIL: TestConditionsAnd (0.00s)
    --- FAIL: TestConditionsAnd/TwoAs (0.00s)
    --- FAIL: TestConditionsAnd/TwoBs (0.00s)
    --- PASS: TestConditionsAnd/OneAOneB (0.00s)
    --- PASS: TestConditionsAnd/OneAB (0.00s)
    --- PASS: TestConditionsAnd/OneBA (0.00s)
    --- PASS: TestConditionsAnd/TwoCs (0.00s)
    --- PASS: TestConditionsAnd/TwoDs (0.00s)
FAIL
coverage: 1.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestConditionsAnd/TwoAs (0.00s)
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
    --- FAIL: TestConditionsAnd/TwoAs (0.00s)

=== FAIL: . TestConditionsAnd/TwoBs (0.00s)
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
    --- FAIL: TestConditionsAnd/TwoBs (0.00s)

=== FAIL: . TestConditionsAnd (0.00s)

DONE 8 tests, 3 failures in 0.360s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestConditionsAnd
=== RUN   TestConditionsAnd/TwoAs
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
=== RUN   TestConditionsAnd/TwoBs
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
=== RUN   TestConditionsAnd/OneAOneB
=== RUN   TestConditionsAnd/OneAB
=== RUN   TestConditionsAnd/OneBA
=== RUN   TestConditionsAnd/TwoCs
=== RUN   TestConditionsAnd/TwoDs
--- FAIL: TestConditionsAnd (0.00s)
    --- FAIL: TestConditionsAnd/TwoAs (0.00s)
    --- FAIL: TestConditionsAnd/TwoBs (0.00s)
    --- PASS: TestConditionsAnd/OneAOneB (0.00s)
    --- PASS: TestConditionsAnd/OneAB (0.00s)
    --- PASS: TestConditionsAnd/OneBA (0.00s)
    --- PASS: TestConditionsAnd/TwoCs (0.00s)
    --- PASS: TestConditionsAnd/TwoDs (0.00s)
FAIL
coverage: 1.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestConditionsAnd/TwoAs (0.00s)
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
    --- FAIL: TestConditionsAnd/TwoAs (0.00s)

=== FAIL: . TestConditionsAnd/TwoBs (0.00s)
    conditionsAnd_test.go:25: conditionsAnd() = false, want true
    --- FAIL: TestConditionsAnd/TwoBs (0.00s)

=== FAIL: . TestConditionsAnd (0.00s)

DONE 8 tests, 3 failures in 0.360s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light_test [light.test]
./equilibriumIndices_test.go:22:14: undefined: equilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:22:14: undefined: equilibriumIndices

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./equilibriumIndices_test.go:22:14: undefined: equilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:22:14: undefined: equilibriumIndices

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

equilibriumIndices.go exit status 1
# light [light.test]
./forLoop_test.go:4:2: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:4:2: "fmt" imported and not used

DONE 0 tests, 1 error in 0.120s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./forLoop_test.go:4:2: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:4:2: "fmt" imported and not used

DONE 0 tests, 1 error in 0.120s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

forLoop.go exit status 1
# light [light.test]
./jacobiSymbol_test.go:25:7: cannot use -1 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:26:7: cannot use -2 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:27:7: cannot use -3 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:28:7: cannot use -4 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:29:7: cannot use -5 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:30:7: cannot use -6 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:31:7: cannot use -7 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:32:7: cannot use -8 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:33:7: cannot use -9 (untyped int constant) as uint64 value in struct literal (overflows)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./jacobiSymbol_test.go:25:7: cannot use -1 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:26:7: cannot use -2 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:27:7: cannot use -3 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:28:7: cannot use -4 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:29:7: cannot use -5 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:30:7: cannot use -6 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:31:7: cannot use -7 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:32:7: cannot use -8 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:33:7: cannot use -9 (untyped int constant) as uint64 value in struct literal (overflows)

DONE 0 tests, 9 errors in 0.129s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./jacobiSymbol_test.go:25:7: cannot use -1 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:26:7: cannot use -2 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:27:7: cannot use -3 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:28:7: cannot use -4 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:29:7: cannot use -5 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:30:7: cannot use -6 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:31:7: cannot use -7 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:32:7: cannot use -8 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:33:7: cannot use -9 (untyped int constant) as uint64 value in struct literal (overflows)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./jacobiSymbol_test.go:25:7: cannot use -1 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:26:7: cannot use -2 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:27:7: cannot use -3 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:28:7: cannot use -4 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:29:7: cannot use -5 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:30:7: cannot use -6 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:31:7: cannot use -7 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:32:7: cannot use -8 (untyped int constant) as uint64 value in struct literal (overflows)
./jacobiSymbol_test.go:33:7: cannot use -9 (untyped int constant) as uint64 value in struct literal (overflows)

DONE 0 tests, 9 errors in 0.129s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

jacobiSymbol.go exit status 1
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/limit_1
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1], want [1]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_2
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3], want [1 1]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_3
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4], want [1 1 2]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_5
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9], want [1 1 2 2 3]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_10
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21], want [1 1 2 2 3 3 4 4 4 5]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_20
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21 22 27 28 31 39 40 43 45 46 55], want [1 1 2 2 3 3 4 4 4 5 5 6 6 6 6 7 7 7 7 7 8]
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_2 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_3 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_20 (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1], want [1]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_2 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3], want [1 1]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_2 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_3 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4], want [1 1 2]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_3 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9], want [1 1 2 2 3]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21], want [1 1 2 2 3 3 4 4 4 5]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_20 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21 22 27 28 31 39 40 43 45 46 55], want [1 1 2 2 3 3 4 4 4 5 5 6 6 6 6 7 7 7 7 7 8]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_20 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)

DONE 7 tests, 7 failures in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/limit_1
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1], want [1]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_2
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3], want [1 1]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_3
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4], want [1 1 2]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_5
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9], want [1 1 2 2 3]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_10
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21], want [1 1 2 2 3 3 4 4 4 5]
=== RUN   TestInitialiseKlarnerRadoSequence/limit_20
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21 22 27 28 31 39 40 43 45 46 55], want [1 1 2 2 3 3 4 4 4 5 5 6 6 6 6 7 7 7 7 7 8]
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_2 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_3 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_20 (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1], want [1]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_1 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_2 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3], want [1 1]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_2 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_3 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4], want [1 1 2]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_3 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9], want [1 1 2 2 3]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_5 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21], want [1 1 2 2 3 3 4 4 4 5]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_10 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/limit_20 (0.00s)
    klarnerRadoSequence_test.go:25: initialiseKlarnerRadoSequence() = [0 1 3 4 7 9 10 13 15 19 21 22 27 28 31 39 40 43 45 46 55], want [1 1 2 2 3 3 4 4 4 5 5 6 6 6 6 7 7 7 7 7 8]
    --- FAIL: TestInitialiseKlarnerRadoSequence/limit_20 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)

DONE 7 tests, 7 failures in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./knapsack_test.go:4:2: "math" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:4:2: "math" imported and not used

DONE 0 tests, 1 error in 0.139s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./knapsack_test.go:4:2: "math" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:4:2: "math" imported and not used

DONE 0 tests, 1 error in 0.139s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

knapsack.go exit status 1
# light [light.test]
./largestProperDivisor_test.go:4:2: "context" imported and not used
./largestProperDivisor_test.go:5:2: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:4:2: "context" imported and not used
./largestProperDivisor_test.go:5:2: "fmt" imported and not used

DONE 0 tests, 2 errors in 0.122s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./largestProperDivisor_test.go:4:2: "context" imported and not used
./largestProperDivisor_test.go:5:2: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:4:2: "context" imported and not used
./largestProperDivisor_test.go:5:2: "fmt" imported and not used

DONE 0 tests, 2 errors in 0.122s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

largestProperDivisor.go exit status 1
# light_test [light.test]
./magicSquareOdd_test.go:4:2: "context" imported and not used
./magicSquareOdd_test.go:13:2: undefined: RegisterFailer
./magicSquareOdd_test.go:13:25: undefined: fail
./magicSquareOdd_test.go:14:2: undefined: RunConcurrentGrammarTests
./magicSquareOdd_test.go:21:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:35:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:52:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:53:26: undefined: errors
./magicSquareOdd_test.go:59:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:60:26: undefined: errors
./magicSquareOdd_test.go:4:2: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:4:2: "context" imported and not used
./magicSquareOdd_test.go:13:2: undefined: RegisterFailer
./magicSquareOdd_test.go:13:25: undefined: fail
./magicSquareOdd_test.go:14:2: undefined: RunConcurrentGrammarTests
./magicSquareOdd_test.go:21:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:35:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:52:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:53:26: undefined: errors
./magicSquareOdd_test.go:59:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:60:26: undefined: errors
./magicSquareOdd_test.go:4:2: too many errors

DONE 0 tests, 11 errors in 1.128s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./magicSquareOdd_test.go:4:2: "context" imported and not used
./magicSquareOdd_test.go:13:2: undefined: RegisterFailer
./magicSquareOdd_test.go:13:25: undefined: fail
./magicSquareOdd_test.go:14:2: undefined: RunConcurrentGrammarTests
./magicSquareOdd_test.go:21:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:35:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:52:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:53:26: undefined: errors
./magicSquareOdd_test.go:59:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:60:26: undefined: errors
./magicSquareOdd_test.go:4:2: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:4:2: "context" imported and not used
./magicSquareOdd_test.go:13:2: undefined: RegisterFailer
./magicSquareOdd_test.go:13:25: undefined: fail
./magicSquareOdd_test.go:14:2: undefined: RunConcurrentGrammarTests
./magicSquareOdd_test.go:21:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:35:24: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:52:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:53:26: undefined: errors
./magicSquareOdd_test.go:59:21: undefined: light.MagicSquareOdd
./magicSquareOdd_test.go:60:26: undefined: errors
./magicSquareOdd_test.go:4:2: too many errors

DONE 0 tests, 11 errors in 1.128s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

magicSquareOdd.go exit status 1
# light
matchBytes_test.go:13:2: string literal not terminated
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:13:2: string literal not terminated

DONE 0 tests, 1 error in 0.037s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
matchBytes_test.go:13:2: string literal not terminated
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:13:2: string literal not terminated

DONE 0 tests, 1 error in 0.037s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

matchBytes.go exit status 1
pascalsTriangle_test.go:1:1: expected 'package', found Here

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found Here

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
pascalsTriangle_test.go:1:1: expected 'package', found Here

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found Here

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light [light.test]
./phoneNumber_test.go:4:2: "fmt" imported and not used
./phoneNumber_test.go:18:23: undefined: errors
./phoneNumber_test.go:20:24: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:2: "fmt" imported and not used
./phoneNumber_test.go:18:23: undefined: errors
./phoneNumber_test.go:20:24: undefined: errors

DONE 0 tests, 3 errors in 0.132s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./phoneNumber_test.go:4:2: "fmt" imported and not used
./phoneNumber_test.go:18:23: undefined: errors
./phoneNumber_test.go:20:24: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:2: "fmt" imported and not used
./phoneNumber_test.go:18:23: undefined: errors
./phoneNumber_test.go:20:24: undefined: errors

DONE 0 tests, 3 errors in 0.132s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
# light
simpleSwitchWithReturn_test.go:10:2: expected '}', found '.'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
simpleSwitchWithReturn_test.go:10:2: expected '}', found '.'

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
simpleSwitchWithReturn_test.go:10:2: expected '}', found '.'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
simpleSwitchWithReturn_test.go:10:2: expected '}', found '.'

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

simpleSwitchWithReturn.go exit status 1
=== RUN   TestIsSorted
    sort_test.go:25: isSorted([]) = false, want true
--- FAIL: TestIsSorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestIsSorted (0.00s)
    sort_test.go:25: isSorted([]) = false, want true

DONE 1 tests, 1 failure in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestIsSorted
    sort_test.go:25: isSorted([]) = false, want true
--- FAIL: TestIsSorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestIsSorted (0.00s)
    sort_test.go:25: isSorted([]) = false, want true

DONE 1 tests, 1 failure in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/empty_array
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c3c0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c3c0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/empty_array (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c3c0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c3c0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 2 tests, 2 failures in 0.308s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/empty_array
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c3c0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c3c0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/empty_array (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c3c0, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56c3c0?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 2 tests, 2 failures in 0.308s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/test1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test2
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test3
=== RUN   TestTypeArrayMultidimensionalArrayLength/test4
=== RUN   TestTypeArrayMultidimensionalArrayLength/test5
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test3 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 6 tests, 3 failures in 0.330s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/test1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test2
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test3
=== RUN   TestTypeArrayMultidimensionalArrayLength/test4
=== RUN   TestTypeArrayMultidimensionalArrayLength/test5
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test3 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:23: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 6 tests, 3 failures in 0.330s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestValidDate
    validateDate_test.go:28: validDate(1, 1, 100) = false, want true
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:28: validDate(1, 1, 100) = false, want true

DONE 1 tests, 1 failure in 0.349s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestValidDate
    validateDate_test.go:28: validDate(1, 1, 100) = false, want true
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:28: validDate(1, 1, 100) = false, want true

DONE 1 tests, 1 failure in 0.349s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
2024/06/06 16:23:26 Evaluating model "openrouter/perplexity/llama-3-sonar-small-32k-chat" using language "golang" and repository "golang/light"
2024/06/06 16:23:26 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/06 16:23:30 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (4015 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		tests := []struct {
			name  string
			input string
			want  bool
		}{
			{"Empty string", "", true},
			{"No brackets", "hello", true},
			{"balanced brackets", "[[]]", true},
			{"unbalanced brackets", "[", false},
			{"unbalanced brackets", "]", false},
			{"unbalanced brackets", "[[]]]", false},
			{"unbalanced brackets", " [[]", false},
			{"unbalanced brackets", "] []", false},
			{"unbalanced brackets", "[[]][]", false},
			{"unbalanced brackets", " [[]] []", false},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := hasBalancedBrackets(tt.input); got != tt.want {
					t.Errorf("%q: hasBalancedBrackets() = %v, want %v", tt.input, got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:23:30 $ go mod tidy
2024/06/06 16:23:30 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestHasBalancedBrackets
=== RUN   TestHasBalancedBrackets/Empty_string
=== RUN   TestHasBalancedBrackets/No_brackets
    balancedBrackets_test.go:28: "hello": hasBalancedBrackets() = false, want true
=== RUN   TestHasBalancedBrackets/balanced_brackets
=== RUN   TestHasBalancedBrackets/unbalanced_brackets
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#01
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#02
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#03
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#04
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#05
    balancedBrackets_test.go:28: "[[]][]": hasBalancedBrackets() = true, want false
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#06
--- FAIL: TestHasBalancedBrackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Empty_string (0.00s)
    --- FAIL: TestHasBalancedBrackets/No_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/balanced_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#01 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#02 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#03 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#04 (0.00s)
    --- FAIL: TestHasBalancedBrackets/unbalanced_brackets#05 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#06 (0.00s)
FAIL
coverage: 4.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestHasBalancedBrackets/No_brackets (0.00s)
    balancedBrackets_test.go:28: "hello": hasBalancedBrackets() = false, want true
    --- FAIL: TestHasBalancedBrackets/No_brackets (0.00s)

=== FAIL: . TestHasBalancedBrackets/unbalanced_brackets#05 (0.00s)
    balancedBrackets_test.go:28: "[[]][]": hasBalancedBrackets() = true, want false
    --- FAIL: TestHasBalancedBrackets/unbalanced_brackets#05 (0.00s)

=== FAIL: . TestHasBalancedBrackets (0.00s)

DONE 11 tests, 3 failures in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:23:31 Executes tests with 5 coverage objects
2024/06/06 16:23:31 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/06 16:23:34 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3707 ms) with:
	```go
	package light_test

	import (
		"testing"
	)

	func TestBinarySearch(t *testing.T) {
		tests := []struct {
			name     string
			input    []int
			target   int
			expected int
		}{
			{"found at end", []int{1, 2, 3, 4, 5}, 5, 4},
			{"found in middle", []int{1, 2, 3, 4, 5}, 3, 2},
			{"found at start", []int{1, 2, 3, 4, 5}, 1, 0},
			{"not found", []int{1, 2, 3, 4, 5}, 6, -1},
			{"empty slice", []int{}, 1, -1},
			{"single element", []int{1}, 1, 0},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.BinarySearch(tt.input, tt.target); got != tt.expected {
					t.Errorf("BinarySearch(%v, %d) = %d, want %d", tt.input, tt.target, got, tt.expected)
				}
			})
		}
	}
	```
2024/06/06 16:23:34 $ go mod tidy
2024/06/06 16:23:34 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./binarySearch_test.go:24:14: undefined: light
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:24:14: undefined: light

DONE 0 tests, 1 error in 0.120s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:23:35 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/06 16:23:38 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3717 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			name   string
			x      int
			y      int
			want   int
			expect bool
		}{
			{"Test1", 5, 25, 0, true},
			{"Test2", 15, 10, 15, false},
			{"Test3", 25, 0, 25, false},
			{"Test4", 10, 20, 10, false},
			{"Test5", 18, 30, 0, true},
			{"Test6", 28, 20, 14, false},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := callLoopConditionsOftenEnough(tt.x, tt.y); got != tt.want {
					t.Errorf("callLoopConditionsOftenEnough() = %v, want %v", got, tt.want)
				}
				if tt.expect && got == tt.want {
					t.Errorf("callLoopConditionsOftenEnough() did not reach expected condition")
				}
			})
		}
	}
	```
2024/06/06 16:23:38 $ go mod tidy
2024/06/06 16:23:38 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./callLoopConditionsOftenEnough_test.go:28:20: undefined: got
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:28:20: undefined: got

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:23:39 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/06 16:23:42 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3896 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestCascadingIfElse(t *testing.T) {
		tests := []struct {
			name     string
			i        int
			want     int
			wantError bool
		}{
			{"case 1", 1, 2, false},
			{"case 2", 3, 4, false},
			{"case 3", 0, 5, false},
			{"case 4", 4, 5, false},
			{"case 5", -1, 5, false},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := cascadingIfElse(tt.i)
				if err != nil {
					if !tt.wantError {
						t.Errorf("cascadingIfElse(%d) error = %v, wantError = %v", tt.i, err, tt.wantError)
						return
					}
				} else if got != tt.want {
					t.Errorf("cascadingIfElse(%d) got = %d, want = %d", tt.i, got, tt.want)
				}
			})
		}
	}
2024/06/06 16:23:42 $ go mod tidy
2024/06/06 16:23:42 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
cascadingIfElse_test.go:1:1: expected 'package', found golang

=== Errors
cascadingIfElse_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:23:43 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/06 16:24:00 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (17128 ms) with:
	```go
	package light_test

	import (
		"testing"
	)

	func TestComputeStepCountPositive(t *testing.T) {
		tests := []struct {
			start int
			want  int
		}{
			{1, 0},
			{2, 1},
			{4, 2},
			{8, 3},
			{16, 4},
			{32, 5},
		}

		for _, test := range tests {
			got, err := computeStepCount(test.start)
			if err != nil {
				t.Errorf("computeStepCount(%d) returned error: %v", test.start, err)
			}
			if got != test.want {
				t.Errorf("computeStepCount(%d) = %d, want %d", test.start, got, test.want)
			}
		}
	}

	func TestComputeStepCountNegative(t *testing.T) {
		_, err := computeStepCount(-1)
		if err == nil {
			t.Error("computeStepCount(-1) expected error, but got nil")
		}
	}

	func TestComputeStepCountZero(t *testing.T) {
		_, err := computeStepCount(0)
		if err == nil {
			t.Error("computeStepCount(0) expected error, but got nil")
		}
	}

	func TestComputeStepCountOne(t *testing.T) {
		_, err := computeStepCount(1)
		if err != nil {
			t.Error("computeStepCount(1) expected no error, but got", err)
		}
	}

	func TestComputeStepCountLarge(t *testing.T) {
		got, err := computeStepCount(123456789)
		if err != nil {
			t.Error("computeStepCount(123456789) returned error: ", err)
		}
		if got < 1 {
			t.Error("computeStepCount(123456789) returned", got, "less than 1")
		}
	}

	func TestComputeStepCountEdge(t *testing.T) {
		got, err := computeStepCount(999999999)
		if err != nil {
			t.Error("computeStepCount(999999999) returned error: ", err)
		}
		if got < 1 {
			t.Error("computeStepCount(999999999) returned", got, "less than 1")
		}
	}
	```
2024/06/06 16:24:00 $ go mod tidy
2024/06/06 16:24:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./collatzCalculator_test.go:21:15: undefined: computeStepCount
./collatzCalculator_test.go:32:12: undefined: computeStepCount
./collatzCalculator_test.go:39:12: undefined: computeStepCount
./collatzCalculator_test.go:46:12: undefined: computeStepCount
./collatzCalculator_test.go:53:14: undefined: computeStepCount
./collatzCalculator_test.go:63:14: undefined: computeStepCount
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:21:15: undefined: computeStepCount
./collatzCalculator_test.go:32:12: undefined: computeStepCount
./collatzCalculator_test.go:39:12: undefined: computeStepCount
./collatzCalculator_test.go:46:12: undefined: computeStepCount
./collatzCalculator_test.go:53:14: undefined: computeStepCount
./collatzCalculator_test.go:63:14: undefined: computeStepCount

DONE 0 tests, 6 errors in 0.104s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:24:00 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/06 16:24:03 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3093 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestConditionsAnd(t *testing.T) {
		tests := []struct {
			name string
			x    rune
			y    rune
			want bool
		}{
			{"true", 'A', 'B', true},
			{"false", 'A', 'C', false},
			{"true", 'B', 'B', false},
			{"true", 'A', 'A', false},
			{"true", 'C', 'B', false},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := conditionsAnd(tt.x, tt.y); got != tt.want {
					t.Errorf("%v: conditionsAnd(%c, %c) = %v, want %v", tt.name, tt.x, tt.y, got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:24:03 $ go mod tidy
2024/06/06 16:24:03 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestConditionsAnd
=== RUN   TestConditionsAnd/true
=== RUN   TestConditionsAnd/false
=== RUN   TestConditionsAnd/true#01
=== RUN   TestConditionsAnd/true#02
=== RUN   TestConditionsAnd/true#03
--- PASS: TestConditionsAnd (0.00s)
    --- PASS: TestConditionsAnd/true (0.00s)
    --- PASS: TestConditionsAnd/false (0.00s)
    --- PASS: TestConditionsAnd/true#01 (0.00s)
    --- PASS: TestConditionsAnd/true#02 (0.00s)
    --- PASS: TestConditionsAnd/true#03 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 6 tests in 0.327s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:24:04 Executes tests with 2 coverage objects
2024/06/06 16:24:04 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/06 16:24:08 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3924 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			name     string
			sequence []int
			want     string
		}{
			{"Test 1", []int{10, -1, -8, 5, 2}, "0;2"},
			{"Test 2", []int{5, 0, 5, 0, 5}, "0;2;3;4"},
			{"Test 3", []int{-7, 1, 5, -2, -4}, "3"},
			{"Test 4", []int{0, 0, 0, 0, 0}, "0;1;2;3;4"},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := equilibriumIndices(tt.sequence); got != tt.want {
					t.Errorf("equilibriumIndices() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:24:08 $ go mod tidy
2024/06/06 16:24:08 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Test_1
    equilibriumIndices_test.go:21: equilibriumIndices() = , want 0;2
=== RUN   TestEquilibriumIndices/Test_2
    equilibriumIndices_test.go:21: equilibriumIndices() = 2;, want 0;2;3;4
=== RUN   TestEquilibriumIndices/Test_3
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;2;, want 3
=== RUN   TestEquilibriumIndices/Test_4
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;1;2;3;4;, want 0;1;2;3;4
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_1 (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_2 (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_3 (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_4 (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestEquilibriumIndices/Test_1 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = , want 0;2
    --- FAIL: TestEquilibriumIndices/Test_1 (0.00s)

=== FAIL: . TestEquilibriumIndices/Test_2 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = 2;, want 0;2;3;4
    --- FAIL: TestEquilibriumIndices/Test_2 (0.00s)

=== FAIL: . TestEquilibriumIndices/Test_3 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;2;, want 3
    --- FAIL: TestEquilibriumIndices/Test_3 (0.00s)

=== FAIL: . TestEquilibriumIndices/Test_4 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;1;2;3;4;, want 0;1;2;3;4
    --- FAIL: TestEquilibriumIndices/Test_4 (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 5 tests, 5 failures in 0.310s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:24:08 Executes tests with 4 coverage objects
2024/06/06 16:24:08 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/06 16:24:10 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (2377 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestForLoop(t *testing.T) {
		tests := []struct {
			s int
			want int
		}{
			{0, 0},
			{1, 0},
			{2, 1},
			{3, 3},
			{4, 6},
			{5, 10},
		}
		for _, tt := range tests {
			got := forLoop(tt.s)
			if got != tt.want {
				t.Errorf("forLoop(%d) = %d, want %d", tt.s, got, tt.want)
			}
		}
	}
	```
2024/06/06 16:24:10 $ go mod tidy
2024/06/06 16:24:10 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestForLoop
    forLoop_test.go:22: forLoop(2) = 2, want 1
    forLoop_test.go:22: forLoop(3) = 6, want 3
    forLoop_test.go:22: forLoop(4) = 12, want 6
    forLoop_test.go:22: forLoop(5) = 20, want 10
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:22: forLoop(2) = 2, want 1
    forLoop_test.go:22: forLoop(3) = 6, want 3
    forLoop_test.go:22: forLoop(4) = 12, want 6
    forLoop_test.go:22: forLoop(5) = 20, want 10

DONE 1 tests, 1 failure in 0.340s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:24:11 Executes tests with 3 coverage objects
2024/06/06 16:24:11 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/06 16:24:16 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (5014 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestJacobiSymbol(t *testing.T) {
		tests := []struct {
			name      string
			k         uint64
			n         uint64
			want      int
			wantErr   bool
			wantError string
		}{
			{"valid1", 3, 8, 1, false, ""},
			{"valid2", 5, 8, -1, false, ""},
			{"valid3", 7, 8, 1, false, ""},
			{"invalid1", -3, 8, 0, true, "Invalid value. k = -3, n = 8"},
			{"invalid2", 3, 0, 0, true, "Invalid value. k = 3, n = 0"},
			{"invalid3", 3, 2, 0, true, "Invalid value. k = 3, n = 2"},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := jacobiSymbol(tt.k, tt.n)
				if (err != nil) != tt.wantErr {
					t.Errorf("jacobiSymbol() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("jacobiSymbol() got = %d, want %d", got, tt.want)
				}
				if err != nil && err.Error() != tt.wantError {
					t.Errorf("jacobiSymbol() error = %s, wantError %s", err.Error(), tt.wantError)
				}
			})
		}
	}
2024/06/06 16:24:16 $ go mod tidy
2024/06/06 16:24:16 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
jacobiSymbol_test.go:1:1: expected 'package', found golang

=== Errors
jacobiSymbol_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:24:16 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/06 16:24:21 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (4511 ms) with:
	Here is the test file for the given code:

	```go
	package light

	import (
		"math"
		"testing"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		tests := []struct {
			name     string
			limit    int
			expected []int
		}{
			{"limit 5", 5, []int{1, 1, 2, 2, 3, 4, 4, 5}},
			{"limit 10", 10, []int{1, 1, 2, 2, 3, 4, 4, 5, 5, 6}},
			{"limit 15", 15, []int{1, 1, 2, 2, 3, 4, 4, 5, 5, 6, 6, 8, 8, 9, 9}},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				actual := initialiseKlarnerRadoSequence(tt.limit)
				if !equals(actual, tt.expected) {
					t.Errorf("initialiseKlarnerRadoSequence(%d) = %v, want %v", tt.limit, actual, tt.expected)
				}
			})
		}
	}

	func equals(a, b []int) bool {
		if len(a) != len(b) {
			return false
		}
		for i := range a {
			if a[i] != b[i] {
				return false
			}
		}
		return true
	}
	```
2024/06/06 16:24:21 $ go mod tidy
2024/06/06 16:24:21 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./klarnerRadoSequence_test.go:4:2: "math" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:4:2: "math" imported and not used

DONE 0 tests, 1 error in 0.149s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:24:21 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/06 16:24:25 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3849 ms) with:
	Here is the test code for the provided Go code file "knapsack.go" with package "light":

	```golang
	package light

	import (
		"testing"
	)

	func TestMaximumValue(t *testing.T) {
		tests := []struct {
			maximumWeight int
			items         []Item
			expectedValue int
		}{
			{5, []Item{{2, 3}, {3, 4}}, 6},
			{10, []Item{{2, 3}, {3, 4}, {4, 5}}, 9},
			{0, []Item{{2, 3}, {3, 4}, {4, 5}}, 0},
		}

		for _, test := range tests {
			if actual := maximumValue(test.maximumWeight, test.items); actual != test.expectedValue {
				t.Errorf("maximumValue(%d, %v) = %d, but expected %d", test.maximumWeight, test.items, actual, test.expectedValue)
			}
		}
	}
	```
2024/06/06 16:24:25 $ go mod tidy
2024/06/06 16:24:25 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMaximumValue
    knapsack_test.go:20: maximumValue(5, [{2 3} {3 4}]) = 7, but expected 6
    knapsack_test.go:20: maximumValue(10, [{2 3} {3 4} {4 5}]) = 12, but expected 9
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:20: maximumValue(5, [{2 3} {3 4}]) = 7, but expected 6
    knapsack_test.go:20: maximumValue(10, [{2 3} {3 4} {4 5}]) = 12, but expected 9

DONE 1 tests, 1 failure in 0.327s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:24:26 Executes tests with 5 coverage objects
2024/06/06 16:24:26 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/06 16:24:32 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (6816 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestLargestProperDivisor_EdgeCases(t *testing.T) {
		_, err := largestProperDivisor(0)
		if err == nil {
			t.Errorf("Expected error for 0, but got nil")
		}
		_, err = largestProperDivisor(-1)
		if err == nil {
			t.Errorf("Expected error for -1, but got nil")
		}
		_, err = largestProperDivisor(1)
		if err != nil {
			t.Errorf("Expected no error for 1, but got %v", err)
		}

		_, err = largestProperDivisor(2)
		if err != nil {
			t.Errorf("Expected no error for 2, but got %v", err)
		}

		_, err = largestProperDivisor(3)
		if err != nil {
			t.Errorf("Expected no error for 3, but got %v", err)
		}
	}

	func TestLargestProperDivisor_OddNumbers(t *testing.T) {
		tests := []struct {
		umber int
		expected int
	}{
		{3, 1},
		{5, 1},
		{7, 1},
		{9, 3},
		{11, 1},
		{13, 1},
		{15, 3},
		{17, 1},
		{19, 1},
		{21, 3},
	}
	for _, test := range tests {
		_, err := largestProperDivisor(test.umber)
		if err != nil {
			t.Errorf("Error for %d: %v", test.umber, err)
		}
		if test.expected != largestProperDivisor(test.umber)[0] {
			t.Errorf("Expected %d for %d, but got %d", test.expected, test.umber, largestProperDivisor(test.umber)[0])
		}
	}

	func TestLargestProperDivisor_EvenNumbers(t *testing.T) {
		tests := []struct {
		umber int
		expected int
	}{
		{2, 1},
		{4, 2},
		{6, 3},
		{8, 4},
		{10, 5},
		{12, 6},
		{14, 7},
		{16, 8},
		{18, 9},
	}
	for _, test := range tests {
		_, err := largestProperDivisor(test.umber)
		if err != nil {
			t.Errorf("Error for %d: %v", test.umber, err)
		}
		if test.expected != largestProperDivisor(test.umber)[0] {
			t.Errorf("Expected %d for %d, but got %d", test.expected, test.umber, largestProperDivisor(test.umber)[0])
		}
	}
	```
2024/06/06 16:24:32 $ go mod tidy
2024/06/06 16:24:32 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]
# light
largestProperDivisor_test.go:58:6: expected '(', found TestLargestProperDivisor_EvenNumbers

=== Errors
largestProperDivisor_test.go:58:6: expected '(', found TestLargestProperDivisor_EvenNumbers

DONE 0 tests, 1 error in 0.040s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:24:33 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/06 16:24:39 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (6815 ms) with:
	```go
	package light

	import (
		"strings"
		"testing"
	)

	func TestMagicSquareOdd(t *testing.T) {
		tests := []struct {
			name string
			base int
			want[][]int
		}{
			{"base 3", 3, [][]int{{1}, {5, 3, 7}, {4, 9, 2}}},
			{"base 5", 5, {{{1}, {14, 11, 15, 2, 13}, {9, 10, 6, 12, 8}},
				{7, 3, 16, 5, 1}, {4, 2, 8, 6, 10}, {15, 14, 13, 11, 9}}},
			{"base 7", 7, {{{1}, {29, 24, 2, 3, 28, 20, 19}, {17, 4, 15, 21, 25, 8, 12},
				{6, 23, 11, 14, 18, 10, 16}, {5, 9, 22, 13, 7, 26, 1}, {28, 25, 20, 12, 4, 19, 3}, {2, 18, 15, 11, 24, 7, 22},
				{21, 16, 14, 10, 5, 26, 9}}},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := magicSquareOdd(tt.base)
				if err != nil {
					if !strings.Contains(err.Error(), "base must be odd and > 2") {
						t.Errorf("magicSquareOdd(%d) = %v, want error with specific message", tt.base, err)
						return
					}
				}
				if !equalMatrix(got, tt.want) {
					t.Errorf("magicSquareOdd(%d) = %v, want %v", tt.base, got, tt.want)
				}
			})
		}
	}

	func equalMatrix(m1, m2 [][]int) bool {
		if len(m1) != len(m2) {
			return false
		}
		for i := range m1 {
			if len(m1[i]) != len(m2[i]) {
				return false
			}
			for j := range m1[i] {
				if m1[i][j] != m2[i][j] {
					return false
				}
			}
		}
		return true
	}
2024/06/06 16:24:39 $ go mod tidy
2024/06/06 16:24:39 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
magicSquareOdd_test.go:1:1: expected 'package', found 'go'

=== Errors
magicSquareOdd_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:24:40 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/06 16:24:43 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3654 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestMatchBytes(t *testing.T) {
		tests := []struct {
			name     string
			s1       []byte
			s2       []byte
			expected bool
		}{
			{"Equal strings", []byte("hello"), []byte("hello"), true},
			{"Different strings", []byte("hello"), []byte("world"), false},
			{"Equal strings with different cases", []byte("Hello"), []byte("hello"), true},
			{"Equal strings with different cases and punctuation", []byte("Hello, World"), []byte("hello, world"), true},
			{"Unequal strings with different cases and punctuation", []byte("Hello, World"), []byte("goodbye, moon"), false},
			{"Empty strings", []byte(""), []byte(""), true},
			{"One empty string", []byte(""), []byte("hello"), false},
			{"Two empty strings", []byte(""), []byte(""), true},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := matchBytes(tt.s1, tt.s2); got != tt.expected {
					t.Errorf("matchBytes(%v, %v) = %v, want %v", tt.s1, tt.s2, got, tt.expected)
				}
			})
		}
	}
	```
2024/06/06 16:24:43 $ go mod tidy
2024/06/06 16:24:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMatchBytes
=== RUN   TestMatchBytes/Equal_strings
=== RUN   TestMatchBytes/Different_strings
=== RUN   TestMatchBytes/Equal_strings_with_different_cases
=== RUN   TestMatchBytes/Equal_strings_with_different_cases_and_punctuation
=== RUN   TestMatchBytes/Unequal_strings_with_different_cases_and_punctuation
=== RUN   TestMatchBytes/Empty_strings
=== RUN   TestMatchBytes/One_empty_string
    matchBytes_test.go:27: matchBytes([], [104 101 108 108 111]) = true, want false
=== RUN   TestMatchBytes/Two_empty_strings
--- FAIL: TestMatchBytes (0.00s)
    --- PASS: TestMatchBytes/Equal_strings (0.00s)
    --- PASS: TestMatchBytes/Different_strings (0.00s)
    --- PASS: TestMatchBytes/Equal_strings_with_different_cases (0.00s)
    --- PASS: TestMatchBytes/Equal_strings_with_different_cases_and_punctuation (0.00s)
    --- PASS: TestMatchBytes/Unequal_strings_with_different_cases_and_punctuation (0.00s)
    --- PASS: TestMatchBytes/Empty_strings (0.00s)
    --- FAIL: TestMatchBytes/One_empty_string (0.00s)
    --- PASS: TestMatchBytes/Two_empty_strings (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes/One_empty_string (0.00s)
    matchBytes_test.go:27: matchBytes([], [104 101 108 108 111]) = true, want false
    --- FAIL: TestMatchBytes/One_empty_string (0.00s)

=== FAIL: . TestMatchBytes (0.00s)

DONE 9 tests, 2 failures in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:24:44 Executes tests with 2 coverage objects
2024/06/06 16:24:44 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/06 16:24:48 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (4744 ms) with:
	Here is the test file for the provided code:

	```go
	package light

	import (
		"testing"
	)

	func TestPascalsTriangle(t *testing.T) {
		tests := []struct {
			rows int
			want [][]int
		}{
			{0, nil},
			{1, [][]int{{1}}},
			{2, [][]int{{1}, {1, 1}}},
			{3, [][]int{{1}, {1, 1}, {1, 2, 1}}},
			{4, [][]int{{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}}},
		}

		for _, tt := range tests {
			got, err := pascalsTriangle(tt.rows)
			if err != nil && err.Error() != "Rows can't be negative!" {
				t.Errorf("pascalsTriangle(%d) returns error %v, want nil", tt.rows, err)
				continue
			}
			if !deepEqual(tt.want, got) {
				t.Errorf("pascalsTriangle(%d) returns %v, want %v", tt.rows, got, tt.want)
			}
		}
	}

	func deepEqual(x, y [][]int) bool {
		if len(x) != len(y) {
			return false
		}
		for i := range x {
			if len(x[i]) != len(y[i]) {
				return false
			}
			for j := range x[i] {
				if x[i][j] != y[i][j] {
					return false
				}
			}
		}
		return true
	}
	```
2024/06/06 16:24:48 $ go mod tidy
2024/06/06 16:24:48 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestPascalsTriangle
--- PASS: TestPascalsTriangle (0.00s)
PASS
coverage: 4.3% of statements
ok  	light	0.004s	coverage: 4.3% of statements

DONE 1 tests in 0.318s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:24:49 Executes tests with 4 coverage objects
2024/06/06 16:24:49 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/06 16:24:58 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (8411 ms) with:
	Here is the test file for the given Go code:

	```go
	package light

	import (
		"errors"
		"fmt"
		"testing"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			name string
			dirtyNumber string
			want string
			wantErr bool
		}{
			{"simple number", "1234", "1234", false},
			{"number with space", "1234 5678", "12345678", false},
			{"number with dot", "1234.5678", "12345678", false},
			{"number with parentheses", "(123) 4567", "1234567", false},
			{"number with hyphen", "1234-5678", "12345678", false},
			{"number with plus", "1234+5678", "12345678", false},
			{"number with punctuation", "1234@5678", "", true},
			{"number with letters", "123a4567", "", true},
			{"empty string", "", "", true},
			{"single character", "a", "", true},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := extractDigits(tt.dirtyNumber)
				if (err != nil) != tt.wantErr {
					t.Errorf("extractDigits() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("extractDigits() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	func TestExtractDigitsError(t *testing.T) {
		_, err := extractDigits("")
		if err == nil {
			t.Errorf("extractDigits() should return error for empty string")
		}
		_, err = extractDigits("ABC")
		if err == nil {
			t.Errorf("extractDigits() should return error for letters")
		}
		_, err = extractDigits("123@456")
		if err == nil {
			t.Errorf("extractDigits() should return error for punctuation")
		}
	}
	```
2024/06/06 16:24:58 $ go mod tidy
2024/06/06 16:24:58 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:5:2: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:5:2: "fmt" imported and not used

DONE 0 tests, 2 errors in 0.153s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:24:58 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/06 16:25:00 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (2376 ms) with:
	```go
	package light_test

	import (
		"testing"
	)

	func TestSimpleIfElse(t *testing.T) {
		tests := []struct {
		>i int
		>want int
		}{
			{1, 0},
			{0, 1},
			{-1, 1},
			{2, 1},
			{-2, 1},
		}

		for _, tt := range tests {
			if got := simpleIfElse(tt.i); got != tt.want {
				t.Errorf("simpleIfElse(%d) = %d, want %d", tt.i, got, tt.want)
			}
		}
	}
	```
2024/06/06 16:25:00 $ go mod tidy
2024/06/06 16:25:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light
simpleIfElse_test.go:9:2: expected '}', found '>'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
simpleIfElse_test.go:9:2: expected '}', found '>'

DONE 0 tests, 1 error in 0.038s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:25:00 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/06 16:25:04 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3764 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			input   int
			expected int
		}{
			{1, 0},
			{-1, 1},
			{0, 1},
			{2, 1},
		}

		for _, tt := range tests {
			if result := simpleSwitchWithReturn(tt.input); result != tt.expected {
				t.Errorf("simpleSwitchWithReturn(%d) = %d, but expected %d", tt.input, result, tt.expected)
			}
		}
	}
	```
2024/06/06 16:25:05 $ go mod tidy
2024/06/06 16:25:05 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
--- PASS: TestSimpleSwitchWithReturn (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 1 tests in 0.381s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:25:06 Executes tests with 3 coverage objects
2024/06/06 16:25:06 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/06 16:25:10 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3914 ms) with:
	```go
	package light_test

	import (
		"testing"
	)

	func TestIsSorted(t *testing.T) {
		tests := []struct {
			name string
			arr  []int
			want bool
		}{
			{"empty array", []int{}, true},
			{"single element array", []int{5}, true},
			{"sorted array", []int{1, 2, 3, 4, 5}, true},
			{"unsorted array", []int{1, 3, 2, 4, 5}, false},
			{"array with duplicates", []int{1, 2, 2, 3, 4}, true},
			{"array with negative numbers", []int{-5, -3, -2, -1}, true},
			{"array with negative and positive numbers", []int{-5, 0, 1, 2, 3}, true},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := isSorted(tt.arr); got != tt.want {
					t.Errorf("%v: isSorted(%v) = %v, want %v", tt.name, tt.arr, got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:25:10 $ go mod tidy
2024/06/06 16:25:10 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./sort_test.go:24:14: undefined: isSorted
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:24:14: undefined: isSorted

DONE 0 tests, 1 error in 0.107s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:25:10 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/06 16:25:13 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3301 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestTypeArrayAccess(t *testing.T) {
		tests := []struct {
			name    string
			x       []int
		欲      int
		}{
			{"test1", []int{123}, 123},
			{"test2", []int{456}, 3},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayAccess(tt.x); got != tt.欲 {
					t.Errorf("typeArrayAccess(%v) = %v, want %v", tt.x, got, tt.欲)
				}
			})
		}
	}
	```
2024/06/06 16:25:13 $ go mod tidy
2024/06/06 16:25:13 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayAccess
=== RUN   TestTypeArrayAccess/test1
=== RUN   TestTypeArrayAccess/test2
--- PASS: TestTypeArrayAccess (0.00s)
    --- PASS: TestTypeArrayAccess/test1 (0.00s)
    --- PASS: TestTypeArrayAccess/test2 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 3 tests in 0.619s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 16:25:14 Executes tests with 2 coverage objects
2024/06/06 16:25:14 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/06 16:25:17 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3396 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			name string
			input []int
			want int
		}{
			{"empty input", []int{}, 0},
			{"single element", []int{0}, 1},
			{"second element is 8", []int{0, 8}, 2},
			{"first element is not 0", []int{1, 8}, 1},
			{"second element is not 8", []int{0, 9}, 1},
			{"input with multiple elements", []int{0, 8, 0, 8}, 4},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayConsecutiveAccess(tt.input); got != tt.want {
					t.Errorf("typeArrayConsecutiveAccess() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 16:25:17 $ go mod tidy
2024/06/06 16:25:17 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/empty_input
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_input (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56b420, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b420?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/empty_input (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_input (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56b420, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b420?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 2 tests, 2 failures in 0.327s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:25:18 Executes tests with 0 coverage objects
2024/06/06 16:25:18 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/06 16:25:22 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3740 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name     string
			x        [][]int
			expected int
		}{
			{"test1", [][]int{{1, 2}, {3, 4}}, 2},
			{"test2", [][]int{{1, 2}}, 1},
			{"test3", [][]int{}, 0},
			{"test4", [][]int{{1, 2}, {3}}, 1},
			{"test5", [][]int{{1, 2, 3}, {4, 5, 6}}, 0},
			{"test6", [][]int{{1}, {2, 3}, {4, 5, 6}}, 0},
			{"test7", [][]int{{1, 2}, {3, 4, 5}}, 0},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayMultidimensionalArrayLength(tt.x); got != tt.expected {
					t.Errorf("typeArrayMultidimensionalArrayLength(%v) = %d, want %d", tt.x, got, tt.expected)
				}
			})
		}
	}
	```
2024/06/06 16:25:22 $ go mod tidy
2024/06/06 16:25:22 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/test1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test2
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2]]) = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test3
=== RUN   TestTypeArrayMultidimensionalArrayLength/test4
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3]]) = 2, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test5
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2 3] [4 5 6]]) = 1, want 0
=== RUN   TestTypeArrayMultidimensionalArrayLength/test6
=== RUN   TestTypeArrayMultidimensionalArrayLength/test7
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test3 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test6 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test7 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2]]) = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3]]) = 2, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2 3] [4 5 6]]) = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test7 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test7 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 8 tests, 5 failures in 0.312s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:25:22 Executes tests with 3 coverage objects
2024/06/06 16:25:22 Querying model "openrouter/perplexity/llama-3-sonar-small-32k-chat" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/06 16:25:26 Model "openrouter/perplexity/llama-3-sonar-small-32k-chat" responded (3971 ms) with:
	Here is the test code for the `validDate` function:

	```golang
	package light_test

	import (
		"testing"
	)

	func TestValidDate(t *testing.T) {
		tests := []struct {
			day   int
			month int
			year  int
			want  bool
		}{
			{1, 1, 2022, true},
			{32, 1, 2022, false},
			{1, 13, 2022, false},
			{1, 2, 1582, false},
			{1, 2, 2022, true},
			{29, 2, 2020, true},
			{30, 2, 2020, false},
			{1, 1, 2022, true},
			{31, 4, 2022, true},
			{32, 4, 2022, false},
		}

		for _, tt := range tests {
			got := validDate(tt.day, tt.month, tt.year)
			if got != tt.want {
				t.Errorf("validDate(%d, %d, %d) = %t, want %t", tt.day, tt.month, tt.year, got, tt.want)
			}
		}
	}
	```
2024/06/06 16:25:26 $ go mod tidy
2024/06/06 16:25:26 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light_test [light.test]
./validateDate_test.go:27:10: undefined: validDate
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:27:10: undefined: validDate

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 16:25:26 Evaluated model "openrouter/perplexity/llama-3-sonar-small-32k-chat" using language "golang" and repository "golang/light": encountered 19 problems: [exit status 1
=== RUN   TestHasBalancedBrackets
=== RUN   TestHasBalancedBrackets/Empty_string
=== RUN   TestHasBalancedBrackets/No_brackets
    balancedBrackets_test.go:28: "hello": hasBalancedBrackets() = false, want true
=== RUN   TestHasBalancedBrackets/balanced_brackets
=== RUN   TestHasBalancedBrackets/unbalanced_brackets
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#01
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#02
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#03
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#04
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#05
    balancedBrackets_test.go:28: "[[]][]": hasBalancedBrackets() = true, want false
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#06
--- FAIL: TestHasBalancedBrackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Empty_string (0.00s)
    --- FAIL: TestHasBalancedBrackets/No_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/balanced_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#01 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#02 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#03 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#04 (0.00s)
    --- FAIL: TestHasBalancedBrackets/unbalanced_brackets#05 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#06 (0.00s)
FAIL
coverage: 4.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestHasBalancedBrackets/No_brackets (0.00s)
    balancedBrackets_test.go:28: "hello": hasBalancedBrackets() = false, want true
    --- FAIL: TestHasBalancedBrackets/No_brackets (0.00s)

=== FAIL: . TestHasBalancedBrackets/unbalanced_brackets#05 (0.00s)
    balancedBrackets_test.go:28: "[[]][]": hasBalancedBrackets() = true, want false
    --- FAIL: TestHasBalancedBrackets/unbalanced_brackets#05 (0.00s)

=== FAIL: . TestHasBalancedBrackets (0.00s)

DONE 11 tests, 3 failures in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestHasBalancedBrackets
=== RUN   TestHasBalancedBrackets/Empty_string
=== RUN   TestHasBalancedBrackets/No_brackets
    balancedBrackets_test.go:28: "hello": hasBalancedBrackets() = false, want true
=== RUN   TestHasBalancedBrackets/balanced_brackets
=== RUN   TestHasBalancedBrackets/unbalanced_brackets
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#01
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#02
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#03
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#04
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#05
    balancedBrackets_test.go:28: "[[]][]": hasBalancedBrackets() = true, want false
=== RUN   TestHasBalancedBrackets/unbalanced_brackets#06
--- FAIL: TestHasBalancedBrackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Empty_string (0.00s)
    --- FAIL: TestHasBalancedBrackets/No_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/balanced_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#01 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#02 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#03 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#04 (0.00s)
    --- FAIL: TestHasBalancedBrackets/unbalanced_brackets#05 (0.00s)
    --- PASS: TestHasBalancedBrackets/unbalanced_brackets#06 (0.00s)
FAIL
coverage: 4.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestHasBalancedBrackets/No_brackets (0.00s)
    balancedBrackets_test.go:28: "hello": hasBalancedBrackets() = false, want true
    --- FAIL: TestHasBalancedBrackets/No_brackets (0.00s)

=== FAIL: . TestHasBalancedBrackets/unbalanced_brackets#05 (0.00s)
    balancedBrackets_test.go:28: "[[]][]": hasBalancedBrackets() = true, want false
    --- FAIL: TestHasBalancedBrackets/unbalanced_brackets#05 (0.00s)

=== FAIL: . TestHasBalancedBrackets (0.00s)

DONE 11 tests, 3 failures in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light_test [light.test]
./binarySearch_test.go:24:14: undefined: light
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:24:14: undefined: light

DONE 0 tests, 1 error in 0.120s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./binarySearch_test.go:24:14: undefined: light
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:24:14: undefined: light

DONE 0 tests, 1 error in 0.120s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
# light [light.test]
./callLoopConditionsOftenEnough_test.go:28:20: undefined: got
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:28:20: undefined: got

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./callLoopConditionsOftenEnough_test.go:28:20: undefined: got
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:28:20: undefined: got

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

callLoopConditionsOftenEnough.go exit status 1
cascadingIfElse_test.go:1:1: expected 'package', found golang

=== Errors
cascadingIfElse_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
cascadingIfElse_test.go:1:1: expected 'package', found golang

=== Errors
cascadingIfElse_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

cascadingIfElse.go exit status 1
# light_test [light.test]
./collatzCalculator_test.go:21:15: undefined: computeStepCount
./collatzCalculator_test.go:32:12: undefined: computeStepCount
./collatzCalculator_test.go:39:12: undefined: computeStepCount
./collatzCalculator_test.go:46:12: undefined: computeStepCount
./collatzCalculator_test.go:53:14: undefined: computeStepCount
./collatzCalculator_test.go:63:14: undefined: computeStepCount
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:21:15: undefined: computeStepCount
./collatzCalculator_test.go:32:12: undefined: computeStepCount
./collatzCalculator_test.go:39:12: undefined: computeStepCount
./collatzCalculator_test.go:46:12: undefined: computeStepCount
./collatzCalculator_test.go:53:14: undefined: computeStepCount
./collatzCalculator_test.go:63:14: undefined: computeStepCount

DONE 0 tests, 6 errors in 0.104s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./collatzCalculator_test.go:21:15: undefined: computeStepCount
./collatzCalculator_test.go:32:12: undefined: computeStepCount
./collatzCalculator_test.go:39:12: undefined: computeStepCount
./collatzCalculator_test.go:46:12: undefined: computeStepCount
./collatzCalculator_test.go:53:14: undefined: computeStepCount
./collatzCalculator_test.go:63:14: undefined: computeStepCount
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:21:15: undefined: computeStepCount
./collatzCalculator_test.go:32:12: undefined: computeStepCount
./collatzCalculator_test.go:39:12: undefined: computeStepCount
./collatzCalculator_test.go:46:12: undefined: computeStepCount
./collatzCalculator_test.go:53:14: undefined: computeStepCount
./collatzCalculator_test.go:63:14: undefined: computeStepCount

DONE 0 tests, 6 errors in 0.104s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

collatzCalculator.go exit status 1
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Test_1
    equilibriumIndices_test.go:21: equilibriumIndices() = , want 0;2
=== RUN   TestEquilibriumIndices/Test_2
    equilibriumIndices_test.go:21: equilibriumIndices() = 2;, want 0;2;3;4
=== RUN   TestEquilibriumIndices/Test_3
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;2;, want 3
=== RUN   TestEquilibriumIndices/Test_4
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;1;2;3;4;, want 0;1;2;3;4
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_1 (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_2 (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_3 (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_4 (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestEquilibriumIndices/Test_1 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = , want 0;2
    --- FAIL: TestEquilibriumIndices/Test_1 (0.00s)

=== FAIL: . TestEquilibriumIndices/Test_2 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = 2;, want 0;2;3;4
    --- FAIL: TestEquilibriumIndices/Test_2 (0.00s)

=== FAIL: . TestEquilibriumIndices/Test_3 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;2;, want 3
    --- FAIL: TestEquilibriumIndices/Test_3 (0.00s)

=== FAIL: . TestEquilibriumIndices/Test_4 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;1;2;3;4;, want 0;1;2;3;4
    --- FAIL: TestEquilibriumIndices/Test_4 (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 5 tests, 5 failures in 0.310s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Test_1
    equilibriumIndices_test.go:21: equilibriumIndices() = , want 0;2
=== RUN   TestEquilibriumIndices/Test_2
    equilibriumIndices_test.go:21: equilibriumIndices() = 2;, want 0;2;3;4
=== RUN   TestEquilibriumIndices/Test_3
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;2;, want 3
=== RUN   TestEquilibriumIndices/Test_4
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;1;2;3;4;, want 0;1;2;3;4
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_1 (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_2 (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_3 (0.00s)
    --- FAIL: TestEquilibriumIndices/Test_4 (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestEquilibriumIndices/Test_1 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = , want 0;2
    --- FAIL: TestEquilibriumIndices/Test_1 (0.00s)

=== FAIL: . TestEquilibriumIndices/Test_2 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = 2;, want 0;2;3;4
    --- FAIL: TestEquilibriumIndices/Test_2 (0.00s)

=== FAIL: . TestEquilibriumIndices/Test_3 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;2;, want 3
    --- FAIL: TestEquilibriumIndices/Test_3 (0.00s)

=== FAIL: . TestEquilibriumIndices/Test_4 (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = 0;1;2;3;4;, want 0;1;2;3;4
    --- FAIL: TestEquilibriumIndices/Test_4 (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 5 tests, 5 failures in 0.310s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestForLoop
    forLoop_test.go:22: forLoop(2) = 2, want 1
    forLoop_test.go:22: forLoop(3) = 6, want 3
    forLoop_test.go:22: forLoop(4) = 12, want 6
    forLoop_test.go:22: forLoop(5) = 20, want 10
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:22: forLoop(2) = 2, want 1
    forLoop_test.go:22: forLoop(3) = 6, want 3
    forLoop_test.go:22: forLoop(4) = 12, want 6
    forLoop_test.go:22: forLoop(5) = 20, want 10

DONE 1 tests, 1 failure in 0.340s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestForLoop
    forLoop_test.go:22: forLoop(2) = 2, want 1
    forLoop_test.go:22: forLoop(3) = 6, want 3
    forLoop_test.go:22: forLoop(4) = 12, want 6
    forLoop_test.go:22: forLoop(5) = 20, want 10
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:22: forLoop(2) = 2, want 1
    forLoop_test.go:22: forLoop(3) = 6, want 3
    forLoop_test.go:22: forLoop(4) = 12, want 6
    forLoop_test.go:22: forLoop(5) = 20, want 10

DONE 1 tests, 1 failure in 0.340s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
jacobiSymbol_test.go:1:1: expected 'package', found golang

=== Errors
jacobiSymbol_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
jacobiSymbol_test.go:1:1: expected 'package', found golang

=== Errors
jacobiSymbol_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

jacobiSymbol.go exit status 1
# light [light.test]
./klarnerRadoSequence_test.go:4:2: "math" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:4:2: "math" imported and not used

DONE 0 tests, 1 error in 0.149s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./klarnerRadoSequence_test.go:4:2: "math" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:4:2: "math" imported and not used

DONE 0 tests, 1 error in 0.149s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

klarnerRadoSequence.go exit status 1
=== RUN   TestMaximumValue
    knapsack_test.go:20: maximumValue(5, [{2 3} {3 4}]) = 7, but expected 6
    knapsack_test.go:20: maximumValue(10, [{2 3} {3 4} {4 5}]) = 12, but expected 9
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:20: maximumValue(5, [{2 3} {3 4}]) = 7, but expected 6
    knapsack_test.go:20: maximumValue(10, [{2 3} {3 4} {4 5}]) = 12, but expected 9

DONE 1 tests, 1 failure in 0.327s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMaximumValue
    knapsack_test.go:20: maximumValue(5, [{2 3} {3 4}]) = 7, but expected 6
    knapsack_test.go:20: maximumValue(10, [{2 3} {3 4} {4 5}]) = 12, but expected 9
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:20: maximumValue(5, [{2 3} {3 4}]) = 7, but expected 6
    knapsack_test.go:20: maximumValue(10, [{2 3} {3 4} {4 5}]) = 12, but expected 9

DONE 1 tests, 1 failure in 0.327s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]
# light
largestProperDivisor_test.go:58:6: expected '(', found TestLargestProperDivisor_EvenNumbers

=== Errors
largestProperDivisor_test.go:58:6: expected '(', found TestLargestProperDivisor_EvenNumbers

DONE 0 tests, 1 error in 0.040s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]
# light
largestProperDivisor_test.go:58:6: expected '(', found TestLargestProperDivisor_EvenNumbers

=== Errors
largestProperDivisor_test.go:58:6: expected '(', found TestLargestProperDivisor_EvenNumbers

DONE 0 tests, 1 error in 0.040s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

largestProperDivisor.go exit status 1
magicSquareOdd_test.go:1:1: expected 'package', found 'go'

=== Errors
magicSquareOdd_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
magicSquareOdd_test.go:1:1: expected 'package', found 'go'

=== Errors
magicSquareOdd_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

magicSquareOdd.go exit status 1
=== RUN   TestMatchBytes
=== RUN   TestMatchBytes/Equal_strings
=== RUN   TestMatchBytes/Different_strings
=== RUN   TestMatchBytes/Equal_strings_with_different_cases
=== RUN   TestMatchBytes/Equal_strings_with_different_cases_and_punctuation
=== RUN   TestMatchBytes/Unequal_strings_with_different_cases_and_punctuation
=== RUN   TestMatchBytes/Empty_strings
=== RUN   TestMatchBytes/One_empty_string
    matchBytes_test.go:27: matchBytes([], [104 101 108 108 111]) = true, want false
=== RUN   TestMatchBytes/Two_empty_strings
--- FAIL: TestMatchBytes (0.00s)
    --- PASS: TestMatchBytes/Equal_strings (0.00s)
    --- PASS: TestMatchBytes/Different_strings (0.00s)
    --- PASS: TestMatchBytes/Equal_strings_with_different_cases (0.00s)
    --- PASS: TestMatchBytes/Equal_strings_with_different_cases_and_punctuation (0.00s)
    --- PASS: TestMatchBytes/Unequal_strings_with_different_cases_and_punctuation (0.00s)
    --- PASS: TestMatchBytes/Empty_strings (0.00s)
    --- FAIL: TestMatchBytes/One_empty_string (0.00s)
    --- PASS: TestMatchBytes/Two_empty_strings (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes/One_empty_string (0.00s)
    matchBytes_test.go:27: matchBytes([], [104 101 108 108 111]) = true, want false
    --- FAIL: TestMatchBytes/One_empty_string (0.00s)

=== FAIL: . TestMatchBytes (0.00s)

DONE 9 tests, 2 failures in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMatchBytes
=== RUN   TestMatchBytes/Equal_strings
=== RUN   TestMatchBytes/Different_strings
=== RUN   TestMatchBytes/Equal_strings_with_different_cases
=== RUN   TestMatchBytes/Equal_strings_with_different_cases_and_punctuation
=== RUN   TestMatchBytes/Unequal_strings_with_different_cases_and_punctuation
=== RUN   TestMatchBytes/Empty_strings
=== RUN   TestMatchBytes/One_empty_string
    matchBytes_test.go:27: matchBytes([], [104 101 108 108 111]) = true, want false
=== RUN   TestMatchBytes/Two_empty_strings
--- FAIL: TestMatchBytes (0.00s)
    --- PASS: TestMatchBytes/Equal_strings (0.00s)
    --- PASS: TestMatchBytes/Different_strings (0.00s)
    --- PASS: TestMatchBytes/Equal_strings_with_different_cases (0.00s)
    --- PASS: TestMatchBytes/Equal_strings_with_different_cases_and_punctuation (0.00s)
    --- PASS: TestMatchBytes/Unequal_strings_with_different_cases_and_punctuation (0.00s)
    --- PASS: TestMatchBytes/Empty_strings (0.00s)
    --- FAIL: TestMatchBytes/One_empty_string (0.00s)
    --- PASS: TestMatchBytes/Two_empty_strings (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes/One_empty_string (0.00s)
    matchBytes_test.go:27: matchBytes([], [104 101 108 108 111]) = true, want false
    --- FAIL: TestMatchBytes/One_empty_string (0.00s)

=== FAIL: . TestMatchBytes (0.00s)

DONE 9 tests, 2 failures in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:5:2: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:5:2: "fmt" imported and not used

DONE 0 tests, 2 errors in 0.153s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:5:2: "fmt" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:5:2: "fmt" imported and not used

DONE 0 tests, 2 errors in 0.153s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
# light
simpleIfElse_test.go:9:2: expected '}', found '>'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
simpleIfElse_test.go:9:2: expected '}', found '>'

DONE 0 tests, 1 error in 0.038s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
simpleIfElse_test.go:9:2: expected '}', found '>'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
simpleIfElse_test.go:9:2: expected '}', found '>'

DONE 0 tests, 1 error in 0.038s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

simpleIfElse.go exit status 1
# light_test [light.test]
./sort_test.go:24:14: undefined: isSorted
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:24:14: undefined: isSorted

DONE 0 tests, 1 error in 0.107s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./sort_test.go:24:14: undefined: isSorted
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:24:14: undefined: isSorted

DONE 0 tests, 1 error in 0.107s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

sort.go exit status 1
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/empty_input
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_input (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56b420, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b420?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/empty_input (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_input (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56b420, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b420?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 2 tests, 2 failures in 0.327s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/empty_input
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_input (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56b420, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b420?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/empty_input (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_input (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 7 [running]:
testing.tRunner.func1.2({0x56b420, 0xc000018030})
	/home/eval/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/eval/go/src/testing/testing.go:1548 +0x397
panic({0x56b420?, 0xc000018030?})
	/home/eval/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0x0?)
	/tmp/eval-dev-quality744030985/light/typeArrayConsecutiveAccess_test.go:22 +0x138
testing.tRunner(0xc000007ba0, 0xc000026240)
	/home/eval/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/eval/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 2 tests, 2 failures in 0.327s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/test1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test2
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2]]) = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test3
=== RUN   TestTypeArrayMultidimensionalArrayLength/test4
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3]]) = 2, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test5
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2 3] [4 5 6]]) = 1, want 0
=== RUN   TestTypeArrayMultidimensionalArrayLength/test6
=== RUN   TestTypeArrayMultidimensionalArrayLength/test7
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test3 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test6 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test7 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2]]) = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3]]) = 2, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2 3] [4 5 6]]) = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test7 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test7 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 8 tests, 5 failures in 0.312s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/test1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test2
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2]]) = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test3
=== RUN   TestTypeArrayMultidimensionalArrayLength/test4
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3]]) = 2, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/test5
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2 3] [4 5 6]]) = 1, want 0
=== RUN   TestTypeArrayMultidimensionalArrayLength/test6
=== RUN   TestTypeArrayMultidimensionalArrayLength/test7
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test3 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/test6 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test7 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2]]) = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3]]) = 2, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test4 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2 3] [4 5 6]]) = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test5 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/test7 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:25: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/test7 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 8 tests, 5 failures in 0.312s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light_test [light.test]
./validateDate_test.go:27:10: undefined: validDate
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:27:10: undefined: validDate

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./validateDate_test.go:27:10: undefined: validDate
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:27:10: undefined: validDate

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

validateDate.go]
