2024/06/06 11:03:14 Evaluating model "openrouter/openai/gpt-3.5-turbo" using language "golang" and repository "golang/light"
2024/06/06 11:03:14 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/06 11:03:18 Model "openrouter/openai/gpt-3.5-turbo" responded (3971 ms) with:
	```golang
	package light

	import "testing"

	func TestHasBalancedBrackets(t *testing.T) {
		tests := []struct {
			name     string
			input    string
			expected bool
		}{
			{"Test case 1", "[]", true},
			{"Test case 2", "[[]]", true},
			{"Test case 3", "[[[]", false},
			{"Test case 4", "]]", false},
			{"Test case 5", "abc", false},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				actual := hasBalancedBrackets(tt.input)
				if actual != tt.expected {
					t.Errorf("Test case %s failed: expected %v, got %v", tt.name, tt.expected, actual)
				}
			})
		}
	}
	```
2024/06/06 11:03:18 $ go mod tidy
2024/06/06 11:03:18 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestHasBalancedBrackets
=== RUN   TestHasBalancedBrackets/Test_case_1
=== RUN   TestHasBalancedBrackets/Test_case_2
=== RUN   TestHasBalancedBrackets/Test_case_3
=== RUN   TestHasBalancedBrackets/Test_case_4
=== RUN   TestHasBalancedBrackets/Test_case_5
--- PASS: TestHasBalancedBrackets (0.00s)
    --- PASS: TestHasBalancedBrackets/Test_case_1 (0.00s)
    --- PASS: TestHasBalancedBrackets/Test_case_2 (0.00s)
    --- PASS: TestHasBalancedBrackets/Test_case_3 (0.00s)
    --- PASS: TestHasBalancedBrackets/Test_case_4 (0.00s)
    --- PASS: TestHasBalancedBrackets/Test_case_5 (0.00s)
PASS
coverage: 4.7% of statements
ok  	light	0.005s	coverage: 4.7% of statements

DONE 6 tests in 0.344s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:03:19 Executes tests with 5 coverage objects
2024/06/06 11:03:19 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/06 11:03:23 Model "openrouter/openai/gpt-3.5-turbo" responded (4267 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestBinarySearch(t *testing.T) {
		tests := []struct {
			name     string
			a        []int
			x        int
			expected int
		}{
			{name: "Found", a: []int{1, 2, 3, 4, 5, 6}, x: 4, expected: 3},
			{name: "Not Found", a: []int{1, 2, 3, 4, 5, 6}, x: 7, expected: -1},
			{name: "Empty Array", a: []int{}, x: 3, expected: -1},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				result := binarySearch(tc.a, tc.x)
				if result != tc.expected {
					t.Errorf("Expected %d, got %d", tc.expected, result)
				}
			})
		}
	}
	```
2024/06/06 11:03:23 $ go mod tidy
2024/06/06 11:03:23 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestBinarySearch
=== RUN   TestBinarySearch/Found
=== RUN   TestBinarySearch/Not_Found
=== RUN   TestBinarySearch/Empty_Array
--- PASS: TestBinarySearch (0.00s)
    --- PASS: TestBinarySearch/Found (0.00s)
    --- PASS: TestBinarySearch/Not_Found (0.00s)
    --- PASS: TestBinarySearch/Empty_Array (0.00s)
PASS
coverage: 5.2% of statements
ok  	light	0.005s	coverage: 5.2% of statements

DONE 4 tests in 0.335s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:03:23 Executes tests with 4 coverage objects
2024/06/06 11:03:23 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/06 11:03:27 Model "openrouter/openai/gpt-3.5-turbo" responded (3901 ms) with:
	```golang
	package light

	import "testing"

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			name     string
			x        int
			y        int
			expected int
		}{
			{"x less than 10 and y less than 20", 5, 15, 0},
			{"x greater than 20 and y less than 20", 25, 15, 0},
			{"executing x++ more than 10 times", 5, 30, 35},
			{"reaching x > 20 block", 25, 10, 12},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := callLoopConditionsOftenEnough(tt.x, tt.y)
				if result != tt.expected {
					t.Errorf("Expected %d but got %d", tt.expected, result)
				}
			})
		}
	}
	```
2024/06/06 11:03:27 $ go mod tidy
2024/06/06 11:03:27 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x_less_than_10_and_y_less_than_20
=== RUN   TestCallLoopConditionsOftenEnough/x_greater_than_20_and_y_less_than_20
=== RUN   TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times
    callLoopConditionsOftenEnough_test.go:22: Expected 35 but got 0
=== RUN   TestCallLoopConditionsOftenEnough/reaching_x_>_20_block
    callLoopConditionsOftenEnough_test.go:22: Expected 12 but got 0
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_less_than_10_and_y_less_than_20 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_greater_than_20_and_y_less_than_20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/reaching_x_>_20_block (0.00s)
FAIL
coverage: 0.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times (0.00s)
    callLoopConditionsOftenEnough_test.go:22: Expected 35 but got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/reaching_x_>_20_block (0.00s)
    callLoopConditionsOftenEnough_test.go:22: Expected 12 but got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/reaching_x_>_20_block (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 5 tests, 3 failures in 0.332s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:03:28 Executes tests with 1 coverage objects
2024/06/06 11:03:28 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/06 11:03:31 Model "openrouter/openai/gpt-3.5-turbo" responded (3282 ms) with:
	```golang
	package light

	import "testing"

	func TestCascadingIfElse(t *testing.T) {
		tests := []struct {
			name string
			in   int
			out  int
		}{
			{name: "Test case 1", in: 1, out: 2},
			{name: "Test case 2", in: 3, out: 4},
			{name: "Test case 3", in: 5, out: 5},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := cascadingIfElse(tt.in)
				if result != tt.out {
					t.Errorf("Expected %d, but got %d", tt.out, result)
				}
			})
		}
	}
	```
2024/06/06 11:03:31 $ go mod tidy
2024/06/06 11:03:31 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCascadingIfElse
=== RUN   TestCascadingIfElse/Test_case_1
=== RUN   TestCascadingIfElse/Test_case_2
=== RUN   TestCascadingIfElse/Test_case_3
--- PASS: TestCascadingIfElse (0.00s)
    --- PASS: TestCascadingIfElse/Test_case_1 (0.00s)
    --- PASS: TestCascadingIfElse/Test_case_2 (0.00s)
    --- PASS: TestCascadingIfElse/Test_case_3 (0.00s)
PASS
coverage: 2.4% of statements
ok  	light	0.005s	coverage: 2.4% of statements

DONE 4 tests in 0.338s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:03:31 Executes tests with 3 coverage objects
2024/06/06 11:03:31 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/06 11:03:35 Model "openrouter/openai/gpt-3.5-turbo" responded (3371 ms) with:
	```golang
	package light

	import "testing"

	func TestComputeStepCount(t *testing.T) {
		tests := []struct {
			input    int
			expected int
		}{
			{1, 0},
			{2, 1},
			{3, 7},
			{4, 2},
			{5, 5},
		}

		for _, test := range tests {
			result, _ := computeStepCount(test.input)
			if result != test.expected {
				t.Errorf("For %d, expected %d but got %d", test.input, test.expected, result)
			}
		}
	}
	```
2024/06/06 11:03:35 $ go mod tidy
2024/06/06 11:03:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestComputeStepCount
--- PASS: TestComputeStepCount (0.00s)
PASS
coverage: 4.7% of statements
ok  	light	0.005s	coverage: 4.7% of statements

DONE 1 tests in 0.368s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:03:35 Executes tests with 6 coverage objects
2024/06/06 11:03:35 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/06 11:03:39 Model "openrouter/openai/gpt-3.5-turbo" responded (3297 ms) with:
	package light

	import "testing"

	func TestConditionsAnd(t *testing.T) {
		tests := []struct {
			x        rune
			y        rune
			expected bool
		}{
			{'A', 'B', true},
			{'A', 'C', false},
			{'B', 'B', false},
			{'C', 'A', false},
		}

		for _, test := range tests {
			result := conditionsAnd(test.x, test.y)
			if result != test.expected {
				t.Errorf("For x: %c, y: %c - Expected: %t, Got: %t", test.x, test.y, test.expected, result)
			}
		}
	}
	```
2024/06/06 11:03:39 $ go mod tidy
2024/06/06 11:03:39 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestConditionsAnd
--- PASS: TestConditionsAnd (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 1 tests in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:03:39 Executes tests with 2 coverage objects
2024/06/06 11:03:39 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/06 11:03:45 Model "openrouter/openai/gpt-3.5-turbo" responded (6005 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			name     string
			sequence []int
			want     string
		}{
			{
				name:     "Example 1",
				sequence: []int{1, 2, 3, 4, 5, 5, 2, 3, 1},
				want:     "2;5;",
			},
			{
				name:     "Example 2",
				sequence: []int{-7, 1, 5, 2, -4, 3, 0},
				want:     "3;4;",
			},
			{
				name:     "No equilibrium index",
				sequence: []int{1, 2, 3, 4, 5},
				want:     "",
			},
			{
				name:     "Negative numbers",
				sequence: []int{-1, -2, -3, -4, -5, 15},
				want:     "5;",
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := equilibriumIndices(tt.sequence); got != tt.want {
					t.Errorf("equilibriumIndices() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 11:03:45 $ go mod tidy
2024/06/06 11:03:45 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Example_1
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 2;5;
=== RUN   TestEquilibriumIndices/Example_2
    equilibriumIndices_test.go:37: equilibriumIndices() = 3;6;, want 3;4;
=== RUN   TestEquilibriumIndices/No_equilibrium_index
=== RUN   TestEquilibriumIndices/Negative_numbers
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 5;
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Example_1 (0.00s)
    --- FAIL: TestEquilibriumIndices/Example_2 (0.00s)
    --- PASS: TestEquilibriumIndices/No_equilibrium_index (0.00s)
    --- FAIL: TestEquilibriumIndices/Negative_numbers (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestEquilibriumIndices/Example_1 (0.00s)
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 2;5;
    --- FAIL: TestEquilibriumIndices/Example_1 (0.00s)

=== FAIL: . TestEquilibriumIndices/Example_2 (0.00s)
    equilibriumIndices_test.go:37: equilibriumIndices() = 3;6;, want 3;4;
    --- FAIL: TestEquilibriumIndices/Example_2 (0.00s)

=== FAIL: . TestEquilibriumIndices/Negative_numbers (0.00s)
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 5;
    --- FAIL: TestEquilibriumIndices/Negative_numbers (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 5 tests, 4 failures in 0.332s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:03:45 Executes tests with 4 coverage objects
2024/06/06 11:03:45 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/06 11:03:49 Model "openrouter/openai/gpt-3.5-turbo" responded (3679 ms) with:
	```golang
	package light

	import "testing"

	func TestForLoop(t *testing.T) {
		tests := []struct {
			name string
			s    int
			want int
		}{
			{"case1", 0, 0},
			{"case2", 1, 0},
			{"case3", 2, 1},
			{"case4", 3, 3},
			{"case5", 5, 20},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := forLoop(tt.s); got != tt.want {
					t.Errorf("forLoop() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 11:03:49 $ go mod tidy
2024/06/06 11:03:49 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestForLoop
=== RUN   TestForLoop/case1
=== RUN   TestForLoop/case2
=== RUN   TestForLoop/case3
    forLoop_test.go:21: forLoop() = 2, want 1
=== RUN   TestForLoop/case4
    forLoop_test.go:21: forLoop() = 6, want 3
=== RUN   TestForLoop/case5
--- FAIL: TestForLoop (0.00s)
    --- PASS: TestForLoop/case1 (0.00s)
    --- PASS: TestForLoop/case2 (0.00s)
    --- FAIL: TestForLoop/case3 (0.00s)
    --- FAIL: TestForLoop/case4 (0.00s)
    --- PASS: TestForLoop/case5 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestForLoop/case3 (0.00s)
    forLoop_test.go:21: forLoop() = 2, want 1
    --- FAIL: TestForLoop/case3 (0.00s)

=== FAIL: . TestForLoop/case4 (0.00s)
    forLoop_test.go:21: forLoop() = 6, want 3
    --- FAIL: TestForLoop/case4 (0.00s)

=== FAIL: . TestForLoop (0.00s)

DONE 6 tests, 3 failures in 0.330s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:03:50 Executes tests with 3 coverage objects
2024/06/06 11:03:50 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/06 11:03:54 Model "openrouter/openai/gpt-3.5-turbo" responded (4651 ms) with:
	```golang
	package light

	import "testing"

	func TestJacobiSymbol(t *testing.T) {
		tests := []struct {
			k        uint64
			n        uint64
			expected int
			err      string
		}{
			{2, 3, 1, ""},
			{3, 7, -1, ""},
			{1, 6, 1, ""},
			{4, 7, 1, ""},
			{0, 7, 0, "Invalid value. k = 0, n = 7"},
			{3, 4, 0, "Invalid value. k = 3, n = 4"},
		}

		for _, tt := range tests {
			result, err := jacobiSymbol(tt.k, tt.n)
			if result != tt.expected {
				t.Errorf("jacobiSymbol(%d, %d): expected %d, got %d", tt.k, tt.n, tt.expected, result)
			}
			if err != nil && err.Error() != tt.err {
				t.Errorf("jacobiSymbol(%d, %d): expected err %s, got %s", tt.k, tt.n, tt.err, err.Error())
			}
		}
	}
	```
2024/06/06 11:03:54 $ go mod tidy
2024/06/06 11:03:54 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:23: jacobiSymbol(2, 3): expected 1, got -1
    jacobiSymbol_test.go:23: jacobiSymbol(1, 6): expected 1, got 0
    jacobiSymbol_test.go:26: jacobiSymbol(1, 6): expected err , got Invalid value. k = 1, n = 6
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 9.0% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:23: jacobiSymbol(2, 3): expected 1, got -1
    jacobiSymbol_test.go:23: jacobiSymbol(1, 6): expected 1, got 0
    jacobiSymbol_test.go:26: jacobiSymbol(1, 6): expected err , got Invalid value. k = 1, n = 6

DONE 1 tests, 1 failure in 0.345s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:03:55 Executes tests with 6 coverage objects
2024/06/06 11:03:55 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/06 11:04:00 Model "openrouter/openai/gpt-3.5-turbo" responded (5242 ms) with:
	```golang
	package light

	import (
		"math"
		"testing"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		tests := []struct {
			name  string
			input int
			want  []int
		}{
			{name: "limit 0", input: 0, want: []int{0}},
			{name: "limit 1", input: 1, want: []int{0, 1}},
			{name: "limit 5", input: 5, want: []int{0, 1, 1, 2, 1, 3}},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := initialiseKlarnerRadoSequence(tt.input)
				if !equal(got, tt.want) {
					t.Errorf("initialiseKlarnerRadoSequence(%d) = %v, want %v", tt.input, got, tt.want)
				}
			})
		}
	}

	func equal(a, b []int) bool {
		if len(a) != len(b) {
			return false
		}
		for i := range a {
			if a[i] != b[i] {
				return false
			}
		}
		return true
	}
	```
2024/06/06 11:04:00 $ go mod tidy
2024/06/06 11:04:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./klarnerRadoSequence_test.go:4:2: "math" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:4:2: "math" imported and not used

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:04:00 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/06 11:04:03 Model "openrouter/openai/gpt-3.5-turbo" responded (2507 ms) with:
	```golang
	package light

	import "testing"

	func TestMaximumValue(t *testing.T) {
		items := []Item{
			{weight: 2, value: 5},
			{weight: 3, value: 7},
			{weight: 4, value: 8},
			{weight: 5, value: 9},
		}

		maxWeight := 10
		expected := 19

		result := maximumValue(maxWeight, items)

		if result != expected {
			t.Errorf("Expected: %d, but got: %d", expected, result)
		}
	}
	```
2024/06/06 11:04:03 $ go mod tidy
2024/06/06 11:04:03 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMaximumValue
    knapsack_test.go:19: Expected: 19, but got: 21
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:19: Expected: 19, but got: 21

DONE 1 tests, 1 failure in 0.355s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:04:03 Executes tests with 5 coverage objects
2024/06/06 11:04:03 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/06 11:04:12 Model "openrouter/openai/gpt-3.5-turbo" responded (9058 ms) with:
	```golang
	package light

	import "testing"

	func TestLargestProperDivisor(t *testing.T) {
		tests := []struct {
			input int
			want  int
			err   bool
		}{
			{1, 1, false},
			{2, 1, false},
			{3, 1, false},
			{4, 2, false},
			{5, 1, false},
			{9, 3, false},
			{15, 5, false},
			{17, 1, false},
			{25, 5, false},
			{100, 50, false},
			{0, 0, true},
			{-10, 0, true},
		}

		for _, test := range tests {
			got, err := largestProperDivisor(test.input)

			if err != nil {
				if !test.err {
					t.Errorf("For %d, unexpected error: %s", test.input, err)
				}
			} else {
				if test.err {
					t.Errorf("For %d, expected error, got nil", test.input)
				}

				if got != test.want {
					t.Errorf("For %d, expected %d, got %d", test.input, test.want, got)
				}
			}
		}
	}
	```
2024/06/06 11:04:12 $ go mod tidy
2024/06/06 11:04:12 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestLargestProperDivisor
--- PASS: TestLargestProperDivisor (0.00s)
PASS
coverage: 3.8% of statements
ok  	light	0.004s	coverage: 3.8% of statements

DONE 1 tests in 0.344s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:04:12 Executes tests with 4 coverage objects
2024/06/06 11:04:12 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/06 11:04:21 Model "openrouter/openai/gpt-3.5-turbo" responded (8318 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestMagicSquareOdd(t *testing.T) {
		tests := []struct {
			name     string
			base     int
			expected int
		}{
			{"base 3", 3, 1},
			{"base 5", 5, 1},
			{"base 7", 7, 1},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				grid, err := magicSquareOdd(tt.base)
				if err != nil {
					t.Errorf("magicSquareOdd(%v) returned error: %v", tt.base, err)
				}

				if len(grid) != tt.base {
					t.Errorf("Expected %d x %d grid, but got %d x %d", tt.base, tt.base, len(grid), len(grid[0]))
				}

				sum := tt.base * (tt.base*tt.base + 1) / 2
				rowSum := make([]int, tt.base)
				columnSum := make([]int, tt.base)
				diagonalSum := 0

				for i := 0; i < tt.base; i++ {
					for j := 0; j < tt.base; j++ {
						rowSum[i] += grid[i][j]
						columnSum[j] += grid[i][j]
						if i == j {
							diagonalSum += grid[i][j]
						}
					}
				}

				if diagonalSum != sum {
					t.Errorf("Diagonal sum is incorrect. Expected: %d, Got: %d", sum, diagonalSum)
				}

				for i := 0; i < tt.base; i++ {
					if rowSum[i] != sum {
						t.Errorf("Row sum is incorrect. Expected: %d, Got: %d for row %d", sum, rowSum[i], i)
					}

					if columnSum[i] != sum {
						t.Errorf("Column sum is incorrect. Expected: %d, Got: %d for column %d", sum, columnSum[i], i)
					}
				}
			})
		}
	}
	```
2024/06/06 11:04:21 $ go mod tidy
2024/06/06 11:04:21 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMagicSquareOdd
=== RUN   TestMagicSquareOdd/base_3
=== RUN   TestMagicSquareOdd/base_5
=== RUN   TestMagicSquareOdd/base_7
--- PASS: TestMagicSquareOdd (0.00s)
    --- PASS: TestMagicSquareOdd/base_3 (0.00s)
    --- PASS: TestMagicSquareOdd/base_5 (0.00s)
    --- PASS: TestMagicSquareOdd/base_7 (0.00s)
PASS
coverage: 10.9% of statements
ok  	light	0.003s	coverage: 10.9% of statements

DONE 4 tests in 0.328s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:04:21 Executes tests with 8 coverage objects
2024/06/06 11:04:21 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/06 11:04:26 Model "openrouter/openai/gpt-3.5-turbo" responded (4872 ms) with:
	```golang
	package light

	import "testing"

	func TestMatchBytes(t *testing.T) {
		tests := []struct {
			name string
			s1   []byte
			s2   []byte
			want bool
		}{
			{name: "Equal strings", s1: []byte{'a', 'b', 'c'}, s2: []byte{'a', 'b', 'c'}, want: true},
			{name: "Different strings", s1: []byte{'a', 'b', 'c'}, s2: []byte{'x', 'y', 'z'}, want: false},
			{name: "Case insensitive match", s1: []byte{'a', 'B', 'c'}, s2: []byte{'A', 'b', 'C'}, want: true},
			{name: "Empty strings", s1: []byte{}, s2: []byte{}, want: true},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := matchBytes(tt.s1, tt.s2); got != tt.want {
					t.Errorf("matchBytes() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 11:04:26 $ go mod tidy
2024/06/06 11:04:26 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMatchBytes
=== RUN   TestMatchBytes/Equal_strings
=== RUN   TestMatchBytes/Different_strings
=== RUN   TestMatchBytes/Case_insensitive_match
=== RUN   TestMatchBytes/Empty_strings
--- PASS: TestMatchBytes (0.00s)
    --- PASS: TestMatchBytes/Equal_strings (0.00s)
    --- PASS: TestMatchBytes/Different_strings (0.00s)
    --- PASS: TestMatchBytes/Case_insensitive_match (0.00s)
    --- PASS: TestMatchBytes/Empty_strings (0.00s)
PASS
coverage: 4.3% of statements
ok  	light	0.005s	coverage: 4.3% of statements

DONE 5 tests in 0.366s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:04:27 Executes tests with 2 coverage objects
2024/06/06 11:04:27 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/06 11:04:32 Model "openrouter/openai/gpt-3.5-turbo" responded (5461 ms) with:
	```golang
	package light

	import (
		"reflect"
		"testing"
	)

	func TestPascalsTriangle(t *testing.T) {
		tests := []struct {
			rows int
			want [][]int
		}{
			{0, [][]int{}},
			{1, [][]int{{1}}},
			{2, [][]int{{1}, {1, 1}}},
			{3, [][]int{{1}, {1, 1}, {1, 2, 1}}},
			{4, [][]int{{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}}},
		}

		for _, tt := range tests {
			got, err := pascalsTriangle(tt.rows)
			if err != nil {
				t.Errorf("pascalsTriangle(%d) returned error: %v", tt.rows, err)
			}

			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("pascalsTriangle(%d) = %v; want %v", tt.rows, got, tt.want)
			}
		}
	}

	func TestPascalsTriangleNegativeRows(t *testing.T) {
		_, err := pascalsTriangle(-1)
		if err == nil {
			t.Error("Expected an error for negative rows but got nil")
		}
	}
	```
2024/06/06 11:04:32 $ go mod tidy
2024/06/06 11:04:32 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestPascalsTriangle
--- PASS: TestPascalsTriangle (0.00s)
=== RUN   TestPascalsTriangleNegativeRows
--- PASS: TestPascalsTriangleNegativeRows (0.00s)
PASS
coverage: 4.7% of statements
ok  	light	0.005s	coverage: 4.7% of statements

DONE 2 tests in 0.338s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:04:33 Executes tests with 4 coverage objects
2024/06/06 11:04:33 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/06 11:04:40 Model "openrouter/openai/gpt-3.5-turbo" responded (7653 ms) with:
	```golang
	package light

	import "testing"

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			name          string
			dirtyNumber   string
			expectedError string
			expectedClean string
		}{
			{
				name:          "Valid number with spaces, dots, and parentheses",
				dirtyNumber:   "+1 (555) 123-4567",
				expectedError: "",
				expectedClean: "15551234567",
			},
			{
				name:          "Valid number without special characters",
				dirtyNumber:   "1234567890",
				expectedError: "",
				expectedClean: "1234567890",
			},
			{
				name:          "Number with letters should return error",
				dirtyNumber:   "555-abc-1234",
				expectedError: "letters not permitted",
				expectedClean: "",
			},
			{
				name:          "Number with punctuations should return error",
				dirtyNumber:   "555:123&4567",
				expectedError: "punctuations not permitted",
				expectedClean: "",
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				cleanNumber, err := extractDigits(tt.dirtyNumber)
				if err != nil && err.Error() != tt.expectedError {
					t.Errorf("got error: %v, want: %v", err.Error(), tt.expectedError)
				}
				if cleanNumber != tt.expectedClean {
					t.Errorf("got clean number: %v, want: %v", cleanNumber, tt.expectedClean)
				}
			})
		}
	}
	```
2024/06/06 11:04:40 $ go mod tidy
2024/06/06 11:04:40 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestExtractDigits
=== RUN   TestExtractDigits/Valid_number_with_spaces,_dots,_and_parentheses
=== RUN   TestExtractDigits/Valid_number_without_special_characters
=== RUN   TestExtractDigits/Number_with_letters_should_return_error
=== RUN   TestExtractDigits/Number_with_punctuations_should_return_error
--- PASS: TestExtractDigits (0.00s)
    --- PASS: TestExtractDigits/Valid_number_with_spaces,_dots,_and_parentheses (0.00s)
    --- PASS: TestExtractDigits/Valid_number_without_special_characters (0.00s)
    --- PASS: TestExtractDigits/Number_with_letters_should_return_error (0.00s)
    --- PASS: TestExtractDigits/Number_with_punctuations_should_return_error (0.00s)
PASS
coverage: 4.3% of statements
ok  	light	0.004s	coverage: 4.3% of statements

DONE 5 tests in 0.355s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:04:41 Executes tests with 5 coverage objects
2024/06/06 11:04:41 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/06 11:04:44 Model "openrouter/openai/gpt-3.5-turbo" responded (3015 ms) with:
	```golang
	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		tests := []struct {
			input    int
			expected int
		}{
			{1, 0},
			{2, 1},
			{3, 1},
		}

		for _, test := range tests {
			result := simpleIfElse(test.input)
			if result != test.expected {
				t.Errorf("For %d, expected %d but got %d", test.input, test.expected, result)
			}
		}
	}
	```
2024/06/06 11:04:44 $ go mod tidy
2024/06/06 11:04:44 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleIfElse
--- PASS: TestSimpleIfElse (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 1 tests in 0.335s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:04:45 Executes tests with 2 coverage objects
2024/06/06 11:04:45 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/06 11:04:48 Model "openrouter/openai/gpt-3.5-turbo" responded (3155 ms) with:
	```golang
	package light

	import "testing"

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			input    int
			expected int
		}{
			{1, 0},
			{2, 1},
			{3, 1},
		}

		for _, tt := range tests {
			result := simpleSwitchWithReturn(tt.input)
			if result != tt.expected {
				t.Errorf("For input %d, expected %d but got %d", tt.input, tt.expected, result)
			}
		}
	}
	```
2024/06/06 11:04:48 $ go mod tidy
2024/06/06 11:04:48 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
--- PASS: TestSimpleSwitchWithReturn (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 1 tests in 0.345s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:04:48 Executes tests with 3 coverage objects
2024/06/06 11:04:48 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/06 11:04:53 Model "openrouter/openai/gpt-3.5-turbo" responded (4858 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestIsSorted(t *testing.T) {
		tests := []struct {
			name     string
			input    []int
			expected bool
		}{
			{"Case 1: sorted array", []int{1, 2, 3, 4, 5}, true},
			{"Case 2: unsorted array", []int{5, 4, 3, 2, 1}, false},
			{"Case 3: empty array", []int{}, true},
			{"Case 4: single element array", []int{1}, true},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := isSorted(tt.input)
				if result != tt.expected {
					t.Errorf("Expected isSorted(%v) to be %v, but got %v", tt.input, tt.expected, result)
				}
			})
		}
	}
	```
2024/06/06 11:04:53 $ go mod tidy
2024/06/06 11:04:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestIsSorted
=== RUN   TestIsSorted/Case_1:_sorted_array
=== RUN   TestIsSorted/Case_2:_unsorted_array
=== RUN   TestIsSorted/Case_3:_empty_array
    sort_test.go:23: Expected isSorted([]) to be true, but got false
=== RUN   TestIsSorted/Case_4:_single_element_array
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/Case_1:_sorted_array (0.00s)
    --- PASS: TestIsSorted/Case_2:_unsorted_array (0.00s)
    --- FAIL: TestIsSorted/Case_3:_empty_array (0.00s)
    --- PASS: TestIsSorted/Case_4:_single_element_array (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted/Case_3:_empty_array (0.00s)
    sort_test.go:23: Expected isSorted([]) to be true, but got false
    --- FAIL: TestIsSorted/Case_3:_empty_array (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 5 tests, 2 failures in 0.348s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:04:53 Executes tests with 2 coverage objects
2024/06/06 11:04:53 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/06 11:04:57 Model "openrouter/openai/gpt-3.5-turbo" responded (3309 ms) with:
	```golang
	package light

	import "testing"

	func TestTypeArrayAccess(t *testing.T) {
		tests := []struct {
			name     string
			input    []int
			expected int
		}{
			{name: "First element is 123", input: []int{123, 2, 3}, expected: 123},
			{name: "First element is not 123", input: []int{1, 2, 3}, expected: 3},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := typeArrayAccess(tt.input)
				if result != tt.expected {
					t.Errorf("got %d, want %d", result, tt.expected)
				}
			})
		}
	}
	```
2024/06/06 11:04:57 $ go mod tidy
2024/06/06 11:04:57 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayAccess
=== RUN   TestTypeArrayAccess/First_element_is_123
=== RUN   TestTypeArrayAccess/First_element_is_not_123
--- PASS: TestTypeArrayAccess (0.00s)
    --- PASS: TestTypeArrayAccess/First_element_is_123 (0.00s)
    --- PASS: TestTypeArrayAccess/First_element_is_not_123 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 3 tests in 0.325s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:04:57 Executes tests with 2 coverage objects
2024/06/06 11:04:57 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/06 11:05:02 Model "openrouter/openai/gpt-3.5-turbo" responded (4775 ms) with:
	```golang
	package light

	import "testing"

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			name   string
			input  []int
			output int
		}{
			{"First element is 0 and second element is 8", []int{0, 8}, 2},
			{"First element is not 0 and second element is 8", []int{3, 8}, 1},
			{"First element is 0 and second element is not 8", []int{0, 5}, 1},
			{"First element is not 0 and second element is not 8", []int{3, 5}, 0},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := typeArrayConsecutiveAccess(tt.input)
				if got != tt.output {
					t.Errorf("Expected %d, but got %d", tt.output, got)
				}
			})
		}
	}
	```
2024/06/06 11:05:02 $ go mod tidy
2024/06/06 11:05:02 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/First_element_is_0_and_second_element_is_8
=== RUN   TestTypeArrayConsecutiveAccess/First_element_is_not_0_and_second_element_is_8
=== RUN   TestTypeArrayConsecutiveAccess/First_element_is_0_and_second_element_is_not_8
=== RUN   TestTypeArrayConsecutiveAccess/First_element_is_not_0_and_second_element_is_not_8
--- PASS: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/First_element_is_0_and_second_element_is_8 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/First_element_is_not_0_and_second_element_is_8 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/First_element_is_0_and_second_element_is_not_8 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/First_element_is_not_0_and_second_element_is_not_8 (0.00s)
PASS
coverage: 2.8% of statements
ok  	light	0.003s	coverage: 2.8% of statements

DONE 5 tests in 0.357s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:05:02 Executes tests with 3 coverage objects
2024/06/06 11:05:02 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/06 11:05:07 Model "openrouter/openai/gpt-3.5-turbo" responded (4484 ms) with:
	```golang
	package light

	import "testing"

	func Test_typeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name string
			x    [][]int
			want int
		}{
			{name: "2x2 array", x: [][]int{{1, 2}, {3, 4}}, want: 2},
			{name: "2x1 array", x: [][]int{{1}, {2}}, want: 1},
			{name: "empty array", x: [][]int{}, want: 0},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayMultidimensionalArrayLength(tt.x); got != tt.want {
					t.Errorf("typeArrayMultidimensionalArrayLength() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 11:05:07 $ go mod tidy
2024/06/06 11:05:07 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   Test_typeArrayMultidimensionalArrayLength
=== RUN   Test_typeArrayMultidimensionalArrayLength/2x2_array
=== RUN   Test_typeArrayMultidimensionalArrayLength/2x1_array
=== RUN   Test_typeArrayMultidimensionalArrayLength/empty_array
--- PASS: Test_typeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: Test_typeArrayMultidimensionalArrayLength/2x2_array (0.00s)
    --- PASS: Test_typeArrayMultidimensionalArrayLength/2x1_array (0.00s)
    --- PASS: Test_typeArrayMultidimensionalArrayLength/empty_array (0.00s)
PASS
coverage: 2.4% of statements
ok  	light	0.005s	coverage: 2.4% of statements

DONE 4 tests in 0.330s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:05:07 Executes tests with 3 coverage objects
2024/06/06 11:05:07 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/06 11:05:15 Model "openrouter/openai/gpt-3.5-turbo" responded (8032 ms) with:
	```golang
	package light

	import "testing"

	func TestValidDate(t *testing.T) {
		tests := []struct {
			day    int
			month  int
			year   int
			result bool
		}{
			{31, 1, 2000, true},
			{29, 2, 2000, true},
			{28, 2, 2001, false},
			{31, 4, 2000, false},
			{31, 12, 400, false},
		}

		for _, test := range tests {
			if validDate(test.day, test.month, test.year) != test.result {
				t.Errorf("Failed for: %d-%d-%d", test.day, test.month, test.year)
			}
		}
	}
	```
2024/06/06 11:05:15 $ go mod tidy
2024/06/06 11:05:15 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestValidDate
    validateDate_test.go:21: Failed for: 29-2-2000
    validateDate_test.go:21: Failed for: 28-2-2001
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 5.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:21: Failed for: 29-2-2000
    validateDate_test.go:21: Failed for: 28-2-2001

DONE 1 tests, 1 failure in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:05:16 Executes tests with 7 coverage objects
2024/06/06 11:05:16 Evaluated model "openrouter/openai/gpt-3.5-turbo" using language "golang" and repository "golang/light": encountered 8 problems: [exit status 1
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x_less_than_10_and_y_less_than_20
=== RUN   TestCallLoopConditionsOftenEnough/x_greater_than_20_and_y_less_than_20
=== RUN   TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times
    callLoopConditionsOftenEnough_test.go:22: Expected 35 but got 0
=== RUN   TestCallLoopConditionsOftenEnough/reaching_x_>_20_block
    callLoopConditionsOftenEnough_test.go:22: Expected 12 but got 0
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_less_than_10_and_y_less_than_20 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_greater_than_20_and_y_less_than_20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/reaching_x_>_20_block (0.00s)
FAIL
coverage: 0.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times (0.00s)
    callLoopConditionsOftenEnough_test.go:22: Expected 35 but got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/reaching_x_>_20_block (0.00s)
    callLoopConditionsOftenEnough_test.go:22: Expected 12 but got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/reaching_x_>_20_block (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 5 tests, 3 failures in 0.332s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/x_less_than_10_and_y_less_than_20
=== RUN   TestCallLoopConditionsOftenEnough/x_greater_than_20_and_y_less_than_20
=== RUN   TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times
    callLoopConditionsOftenEnough_test.go:22: Expected 35 but got 0
=== RUN   TestCallLoopConditionsOftenEnough/reaching_x_>_20_block
    callLoopConditionsOftenEnough_test.go:22: Expected 12 but got 0
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_less_than_10_and_y_less_than_20 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/x_greater_than_20_and_y_less_than_20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/reaching_x_>_20_block (0.00s)
FAIL
coverage: 0.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times (0.00s)
    callLoopConditionsOftenEnough_test.go:22: Expected 35 but got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/executing_x++_more_than_10_times (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/reaching_x_>_20_block (0.00s)
    callLoopConditionsOftenEnough_test.go:22: Expected 12 but got 0
    --- FAIL: TestCallLoopConditionsOftenEnough/reaching_x_>_20_block (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 5 tests, 3 failures in 0.332s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Example_1
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 2;5;
=== RUN   TestEquilibriumIndices/Example_2
    equilibriumIndices_test.go:37: equilibriumIndices() = 3;6;, want 3;4;
=== RUN   TestEquilibriumIndices/No_equilibrium_index
=== RUN   TestEquilibriumIndices/Negative_numbers
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 5;
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Example_1 (0.00s)
    --- FAIL: TestEquilibriumIndices/Example_2 (0.00s)
    --- PASS: TestEquilibriumIndices/No_equilibrium_index (0.00s)
    --- FAIL: TestEquilibriumIndices/Negative_numbers (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestEquilibriumIndices/Example_1 (0.00s)
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 2;5;
    --- FAIL: TestEquilibriumIndices/Example_1 (0.00s)

=== FAIL: . TestEquilibriumIndices/Example_2 (0.00s)
    equilibriumIndices_test.go:37: equilibriumIndices() = 3;6;, want 3;4;
    --- FAIL: TestEquilibriumIndices/Example_2 (0.00s)

=== FAIL: . TestEquilibriumIndices/Negative_numbers (0.00s)
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 5;
    --- FAIL: TestEquilibriumIndices/Negative_numbers (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 5 tests, 4 failures in 0.332s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Example_1
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 2;5;
=== RUN   TestEquilibriumIndices/Example_2
    equilibriumIndices_test.go:37: equilibriumIndices() = 3;6;, want 3;4;
=== RUN   TestEquilibriumIndices/No_equilibrium_index
=== RUN   TestEquilibriumIndices/Negative_numbers
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 5;
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Example_1 (0.00s)
    --- FAIL: TestEquilibriumIndices/Example_2 (0.00s)
    --- PASS: TestEquilibriumIndices/No_equilibrium_index (0.00s)
    --- FAIL: TestEquilibriumIndices/Negative_numbers (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestEquilibriumIndices/Example_1 (0.00s)
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 2;5;
    --- FAIL: TestEquilibriumIndices/Example_1 (0.00s)

=== FAIL: . TestEquilibriumIndices/Example_2 (0.00s)
    equilibriumIndices_test.go:37: equilibriumIndices() = 3;6;, want 3;4;
    --- FAIL: TestEquilibriumIndices/Example_2 (0.00s)

=== FAIL: . TestEquilibriumIndices/Negative_numbers (0.00s)
    equilibriumIndices_test.go:37: equilibriumIndices() = , want 5;
    --- FAIL: TestEquilibriumIndices/Negative_numbers (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 5 tests, 4 failures in 0.332s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestForLoop
=== RUN   TestForLoop/case1
=== RUN   TestForLoop/case2
=== RUN   TestForLoop/case3
    forLoop_test.go:21: forLoop() = 2, want 1
=== RUN   TestForLoop/case4
    forLoop_test.go:21: forLoop() = 6, want 3
=== RUN   TestForLoop/case5
--- FAIL: TestForLoop (0.00s)
    --- PASS: TestForLoop/case1 (0.00s)
    --- PASS: TestForLoop/case2 (0.00s)
    --- FAIL: TestForLoop/case3 (0.00s)
    --- FAIL: TestForLoop/case4 (0.00s)
    --- PASS: TestForLoop/case5 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestForLoop/case3 (0.00s)
    forLoop_test.go:21: forLoop() = 2, want 1
    --- FAIL: TestForLoop/case3 (0.00s)

=== FAIL: . TestForLoop/case4 (0.00s)
    forLoop_test.go:21: forLoop() = 6, want 3
    --- FAIL: TestForLoop/case4 (0.00s)

=== FAIL: . TestForLoop (0.00s)

DONE 6 tests, 3 failures in 0.330s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestForLoop
=== RUN   TestForLoop/case1
=== RUN   TestForLoop/case2
=== RUN   TestForLoop/case3
    forLoop_test.go:21: forLoop() = 2, want 1
=== RUN   TestForLoop/case4
    forLoop_test.go:21: forLoop() = 6, want 3
=== RUN   TestForLoop/case5
--- FAIL: TestForLoop (0.00s)
    --- PASS: TestForLoop/case1 (0.00s)
    --- PASS: TestForLoop/case2 (0.00s)
    --- FAIL: TestForLoop/case3 (0.00s)
    --- FAIL: TestForLoop/case4 (0.00s)
    --- PASS: TestForLoop/case5 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestForLoop/case3 (0.00s)
    forLoop_test.go:21: forLoop() = 2, want 1
    --- FAIL: TestForLoop/case3 (0.00s)

=== FAIL: . TestForLoop/case4 (0.00s)
    forLoop_test.go:21: forLoop() = 6, want 3
    --- FAIL: TestForLoop/case4 (0.00s)

=== FAIL: . TestForLoop (0.00s)

DONE 6 tests, 3 failures in 0.330s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:23: jacobiSymbol(2, 3): expected 1, got -1
    jacobiSymbol_test.go:23: jacobiSymbol(1, 6): expected 1, got 0
    jacobiSymbol_test.go:26: jacobiSymbol(1, 6): expected err , got Invalid value. k = 1, n = 6
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 9.0% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:23: jacobiSymbol(2, 3): expected 1, got -1
    jacobiSymbol_test.go:23: jacobiSymbol(1, 6): expected 1, got 0
    jacobiSymbol_test.go:26: jacobiSymbol(1, 6): expected err , got Invalid value. k = 1, n = 6

DONE 1 tests, 1 failure in 0.345s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:23: jacobiSymbol(2, 3): expected 1, got -1
    jacobiSymbol_test.go:23: jacobiSymbol(1, 6): expected 1, got 0
    jacobiSymbol_test.go:26: jacobiSymbol(1, 6): expected err , got Invalid value. k = 1, n = 6
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 9.0% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:23: jacobiSymbol(2, 3): expected 1, got -1
    jacobiSymbol_test.go:23: jacobiSymbol(1, 6): expected 1, got 0
    jacobiSymbol_test.go:26: jacobiSymbol(1, 6): expected err , got Invalid value. k = 1, n = 6

DONE 1 tests, 1 failure in 0.345s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./klarnerRadoSequence_test.go:4:2: "math" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:4:2: "math" imported and not used

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./klarnerRadoSequence_test.go:4:2: "math" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:4:2: "math" imported and not used

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

klarnerRadoSequence.go exit status 1
=== RUN   TestMaximumValue
    knapsack_test.go:19: Expected: 19, but got: 21
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:19: Expected: 19, but got: 21

DONE 1 tests, 1 failure in 0.355s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMaximumValue
    knapsack_test.go:19: Expected: 19, but got: 21
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:19: Expected: 19, but got: 21

DONE 1 tests, 1 failure in 0.355s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestIsSorted
=== RUN   TestIsSorted/Case_1:_sorted_array
=== RUN   TestIsSorted/Case_2:_unsorted_array
=== RUN   TestIsSorted/Case_3:_empty_array
    sort_test.go:23: Expected isSorted([]) to be true, but got false
=== RUN   TestIsSorted/Case_4:_single_element_array
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/Case_1:_sorted_array (0.00s)
    --- PASS: TestIsSorted/Case_2:_unsorted_array (0.00s)
    --- FAIL: TestIsSorted/Case_3:_empty_array (0.00s)
    --- PASS: TestIsSorted/Case_4:_single_element_array (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted/Case_3:_empty_array (0.00s)
    sort_test.go:23: Expected isSorted([]) to be true, but got false
    --- FAIL: TestIsSorted/Case_3:_empty_array (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 5 tests, 2 failures in 0.348s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestIsSorted
=== RUN   TestIsSorted/Case_1:_sorted_array
=== RUN   TestIsSorted/Case_2:_unsorted_array
=== RUN   TestIsSorted/Case_3:_empty_array
    sort_test.go:23: Expected isSorted([]) to be true, but got false
=== RUN   TestIsSorted/Case_4:_single_element_array
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/Case_1:_sorted_array (0.00s)
    --- PASS: TestIsSorted/Case_2:_unsorted_array (0.00s)
    --- FAIL: TestIsSorted/Case_3:_empty_array (0.00s)
    --- PASS: TestIsSorted/Case_4:_single_element_array (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted/Case_3:_empty_array (0.00s)
    sort_test.go:23: Expected isSorted([]) to be true, but got false
    --- FAIL: TestIsSorted/Case_3:_empty_array (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 5 tests, 2 failures in 0.348s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestValidDate
    validateDate_test.go:21: Failed for: 29-2-2000
    validateDate_test.go:21: Failed for: 28-2-2001
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 5.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:21: Failed for: 29-2-2000
    validateDate_test.go:21: Failed for: 28-2-2001

DONE 1 tests, 1 failure in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestValidDate
    validateDate_test.go:21: Failed for: 29-2-2000
    validateDate_test.go:21: Failed for: 28-2-2001
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 5.7% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:21: Failed for: 29-2-2000
    validateDate_test.go:21: Failed for: 28-2-2001

DONE 1 tests, 1 failure in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
2024/06/06 15:51:11 Evaluating model "openrouter/openai/gpt-3.5-turbo" using language "golang" and repository "golang/light"
2024/06/06 15:51:11 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/06 15:51:15 Model "openrouter/openai/gpt-3.5-turbo" responded (4771 ms) with:
	```golang
	package light

	import "testing"

	func TestHasBalancedBrackets(t *testing.T) {
		tests := []struct {
			input    string
			expected bool
		}{
			{"[[]]", true},
			{"[]", true},
			{"[[", false},
			{"[", false},
			{"]", false},
			{"a", false},
			{"[a]", false},
			{"ab", false},
			{"[]]", false},
		}

		for _, test := range tests {
			result := hasBalancedBrackets(test.input)
			if result != test.expected {
				t.Errorf("Expected hasBalancedBrackets(%q) to be %v, but got %v", test.input, test.expected, result)
			}
		}
	}
	```
2024/06/06 15:51:15 $ go mod tidy
2024/06/06 15:51:15 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestHasBalancedBrackets
--- PASS: TestHasBalancedBrackets (0.00s)
PASS
coverage: 4.7% of statements
ok  	light	0.004s	coverage: 4.7% of statements

DONE 1 tests in 0.314s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 15:51:16 Executes tests with 5 coverage objects
2024/06/06 15:51:16 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/06 15:51:23 Model "openrouter/openai/gpt-3.5-turbo" responded (6735 ms) with:
	```golang
	package light

	import "testing"

	func TestBinarySearch(t *testing.T) {
		tests := []struct {
			name     string
			array    []int
			target   int
			expected int
		}{
			{name: "Found at middle index", array: []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, target: 5, expected: 4},
			{name: "Found at first index", array: []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, target: 1, expected: 0},
			{name: "Found at last index", array: []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, target: 10, expected: 9},
			{name: "Not found in array", array: []int{1, 3, 5, 7, 9, 11, 13, 15, 17, 19}, target: 8, expected: -1},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := binarySearch(tt.array, tt.target)
				if result != tt.expected {
					t.Errorf("Expected index %d, but got %d", tt.expected, result)
				}
			})
		}
	}
	```
2024/06/06 15:51:23 $ go mod tidy
2024/06/06 15:51:23 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestBinarySearch
=== RUN   TestBinarySearch/Found_at_middle_index
=== RUN   TestBinarySearch/Found_at_first_index
=== RUN   TestBinarySearch/Found_at_last_index
=== RUN   TestBinarySearch/Not_found_in_array
--- PASS: TestBinarySearch (0.00s)
    --- PASS: TestBinarySearch/Found_at_middle_index (0.00s)
    --- PASS: TestBinarySearch/Found_at_first_index (0.00s)
    --- PASS: TestBinarySearch/Found_at_last_index (0.00s)
    --- PASS: TestBinarySearch/Not_found_in_array (0.00s)
PASS
coverage: 5.2% of statements
ok  	light	0.004s	coverage: 5.2% of statements

DONE 5 tests in 0.316s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 15:51:23 Executes tests with 4 coverage objects
2024/06/06 15:51:23 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/06 15:51:29 Model "openrouter/openai/gpt-3.5-turbo" responded (5735 ms) with:
	```golang
	package light

	import "testing"

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			name string
			x    int
			y    int
			want int
		}{
			{name: "Test x < 10", x: 5, y: 10, want: 0},
			{name: "Test x > 20", x: 25, y: 10, want: 0},
			{name: "Test x = 15, y = 5", x: 15, y: 5, want: 10},
			{name: "Test x = 10, y = 15", x: 10, y: 15, want: 5},
			{name: "Test x = 25, y = 30", x: 25, y: 30, want: 12},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := callLoopConditionsOftenEnough(tt.x, tt.y); got != tt.want {
					t.Errorf("callLoopConditionsOftenEnough() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 15:51:29 $ go mod tidy
2024/06/06 15:51:29 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_<_10
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_>_20
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 15, want 10
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 10, want 5
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 0, want 12
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/Test_x_<_10 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/Test_x_>_20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5 (0.00s)
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 15, want 10
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15 (0.00s)
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 10, want 5
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30 (0.00s)
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 0, want 12
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 6 tests, 4 failures in 0.368s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:51:29 Executes tests with 4 coverage objects
2024/06/06 15:51:29 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/06 15:51:33 Model "openrouter/openai/gpt-3.5-turbo" responded (4145 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestCascadingIfElse(t *testing.T) {
		tests := []struct {
			name     string
			input    int
			expected int
		}{
			{name: "case 1", input: 1, expected: 2},
			{name: "case 2", input: 3, expected: 4},
			{name: "default case", input: 5, expected: 5},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := cascadingIfElse(tt.input)
				if result != tt.expected {
					t.Errorf("For input %d, expected %d, but got %d", tt.input, tt.expected, result)
				}
			})
		}
	}
	```
2024/06/06 15:51:33 $ go mod tidy
2024/06/06 15:51:34 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestCascadingIfElse
=== RUN   TestCascadingIfElse/case_1
=== RUN   TestCascadingIfElse/case_2
=== RUN   TestCascadingIfElse/default_case
--- PASS: TestCascadingIfElse (0.00s)
    --- PASS: TestCascadingIfElse/case_1 (0.00s)
    --- PASS: TestCascadingIfElse/case_2 (0.00s)
    --- PASS: TestCascadingIfElse/default_case (0.00s)
PASS
coverage: 2.4% of statements
ok  	light	0.004s	coverage: 2.4% of statements

DONE 4 tests in 0.320s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 15:51:34 Executes tests with 3 coverage objects
2024/06/06 15:51:34 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/06 15:51:39 Model "openrouter/openai/gpt-3.5-turbo" responded (5505 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestComputeStepCount(t *testing.T) {
		tests := []struct {
			start    int
			expected int
			err      error
		}{
			{1, 0, nil},
			{6, 8, nil},
			{27, 111, nil},
			{0, 0, errors.New("Only positive integers are allowed")},
		}

		for _, tt := range tests {
			count, err := computeStepCount(tt.start)
			if count != tt.expected {
				t.Errorf("For %d, expected count %d, but got %d", tt.start, tt.expected, count)
			}
			if (err == nil && tt.err != nil) || (err != nil && tt.err == nil) {
				t.Errorf("For %d, expected error %v, but got error %v", tt.start, tt.err, err)
			}
		}
	}
	```
2024/06/06 15:51:39 $ go mod tidy
2024/06/06 15:51:40 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./collatzCalculator_test.go:16:10: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:16:10: undefined: errors

DONE 0 tests, 1 error in 0.173s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:51:40 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/06 15:51:44 Model "openrouter/openai/gpt-3.5-turbo" responded (3891 ms) with:
	```golang
	package light

	import "testing"

	func TestConditionsAnd(t *testing.T) {
		tests := []struct {
			x           rune
			y           rune
			expected    bool
		}{
			{'A', 'B', true},
			{'A', 'A', false},
			{'B', 'B', false},
			{'C', 'D', false},
		}

		for _, test := range tests {
			result := conditionsAnd(test.x, test.y)
			if result != test.expected {
				t.Errorf("For x=%c, y=%c expected %t but got %t", test.x, test.y, test.expected, result)
			}
		}
	}
	```
2024/06/06 15:51:44 $ go mod tidy
2024/06/06 15:51:44 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestConditionsAnd
--- PASS: TestConditionsAnd (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 1 tests in 0.328s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 15:51:45 Executes tests with 2 coverage objects
2024/06/06 15:51:45 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/06 15:51:49 Model "openrouter/openai/gpt-3.5-turbo" responded (4547 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			name     string
			sequence []int
			expected string
		}{
			{"Equilibrium at index 3", []int{-7, 1, 5, 2, -4, 3, 0}, "3;"},
			{"No equilibrium indices", []int{1, 2, 3, 4, 5}, ""},
			{"Multiple equilibrium indices", []int{-1, 3, -4, 5, 0, 4, -2}, "1;3;5;"},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				result := equilibriumIndices(test.sequence)
				if result != test.expected {
					t.Errorf("Expected: %s, but got: %s", test.expected, result)
				}
			})
		}
	}
	```
2024/06/06 15:51:49 $ go mod tidy
2024/06/06 15:51:49 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Equilibrium_at_index_3
    equilibriumIndices_test.go:22: Expected: 3;, but got: 3;6;
=== RUN   TestEquilibriumIndices/No_equilibrium_indices
=== RUN   TestEquilibriumIndices/Multiple_equilibrium_indices
    equilibriumIndices_test.go:22: Expected: 1;3;5;, but got: 
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Equilibrium_at_index_3 (0.00s)
    --- PASS: TestEquilibriumIndices/No_equilibrium_indices (0.00s)
    --- FAIL: TestEquilibriumIndices/Multiple_equilibrium_indices (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestEquilibriumIndices/Equilibrium_at_index_3 (0.00s)
    equilibriumIndices_test.go:22: Expected: 3;, but got: 3;6;
    --- FAIL: TestEquilibriumIndices/Equilibrium_at_index_3 (0.00s)

=== FAIL: . TestEquilibriumIndices/Multiple_equilibrium_indices (0.00s)
    equilibriumIndices_test.go:22: Expected: 1;3;5;, but got: 
    --- FAIL: TestEquilibriumIndices/Multiple_equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 4 tests, 3 failures in 0.356s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:51:50 Executes tests with 4 coverage objects
2024/06/06 15:51:50 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/06 15:51:53 Model "openrouter/openai/gpt-3.5-turbo" responded (3332 ms) with:
	```golang
	package light

	import "testing"

	func TestForLoop(t *testing.T) {
		tests := []struct {
			input    int
			expected int
		}{
			{0, 0},
			{1, 0},
			{2, 1},
			{5, 20},
			{10, 90},
		}

		for _, test := range tests {
			result := forLoop(test.input)
			if result != test.expected {
				t.Errorf("For input %d, expected %d, but got %d", test.input, test.expected, result)
			}
		}
	}
	```
2024/06/06 15:51:53 $ go mod tidy
2024/06/06 15:51:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestForLoop
    forLoop_test.go:20: For input 2, expected 1, but got 2
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:20: For input 2, expected 1, but got 2

DONE 1 tests, 1 failure in 0.311s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:51:54 Executes tests with 3 coverage objects
2024/06/06 15:51:54 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/06 15:51:59 Model "openrouter/openai/gpt-3.5-turbo" responded (5205 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestJacobiSymbol(t *testing.T) {
		testCases := []struct {
			k         uint64
			n         uint64
			expected  int
			expectErr bool
		}{
			{1, 2, 1, false},
			{3, 5, -1, false},
			{4, 8, 0, true},
			{7, 10, -1, false},
			{25, 60, -1, false},
		}

		for _, tc := range testCases {
			result, err := jacobiSymbol(tc.k, tc.n)
			if (err != nil) != tc.expectErr {
				t.Errorf("jacobiSymbol(%d, %d) unexpected error: %v", tc.k, tc.n, err)
			}
			if result != tc.expected {
				t.Errorf("jacobiSymbol(%d, %d) = %d; want %d", tc.k, tc.n, result, tc.expected)
			}
		}
	}
	```
2024/06/06 15:51:59 $ go mod tidy
2024/06/06 15:51:59 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:24: jacobiSymbol(1, 2) unexpected error: Invalid value. k = 1, n = 2
    jacobiSymbol_test.go:27: jacobiSymbol(1, 2) = 0; want 1
    jacobiSymbol_test.go:24: jacobiSymbol(7, 10) unexpected error: Invalid value. k = 7, n = 10
    jacobiSymbol_test.go:27: jacobiSymbol(7, 10) = 0; want -1
    jacobiSymbol_test.go:24: jacobiSymbol(25, 60) unexpected error: Invalid value. k = 25, n = 60
    jacobiSymbol_test.go:27: jacobiSymbol(25, 60) = 0; want -1
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 8.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:24: jacobiSymbol(1, 2) unexpected error: Invalid value. k = 1, n = 2
    jacobiSymbol_test.go:27: jacobiSymbol(1, 2) = 0; want 1
    jacobiSymbol_test.go:24: jacobiSymbol(7, 10) unexpected error: Invalid value. k = 7, n = 10
    jacobiSymbol_test.go:27: jacobiSymbol(7, 10) = 0; want -1
    jacobiSymbol_test.go:24: jacobiSymbol(25, 60) unexpected error: Invalid value. k = 25, n = 60
    jacobiSymbol_test.go:27: jacobiSymbol(25, 60) = 0; want -1

DONE 1 tests, 1 failure in 0.336s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:52:00 Executes tests with 5 coverage objects
2024/06/06 15:52:00 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/06 15:52:08 Model "openrouter/openai/gpt-3.5-turbo" responded (8247 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		tests := []struct {
			name  string
			limit int
			want  []int
		}{
			{name: "test with limit 5", limit: 5, want: []int{0, 1, 1, 3, 4, 5}},
			{name: "test with limit 10", limit: 10, want: []int{0, 1, 1, 1, 3, 4, 5, 5, 6, 9, 10}},
			{name: "test with limit 15", limit: 15, want: []int{0, 1, 1, 1, 3, 4, 5, 5, 5, 5, 9, 10, 10, 11, 19, 20}},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := initialiseKlarnerRadoSequence(tt.limit)

				if len(got) != len(tt.want) {
					t.Errorf("got length %d, want length %d", len(got), len(tt.want))
				}

				for i := 0; i < len(got); i++ {
					if got[i] != tt.want[i] {
						t.Errorf("at index %d, got %d, want %d", i, got[i], tt.want[i])
					}
				}
			})
		}
	}
	```
2024/06/06 15:52:08 $ go mod tidy
2024/06/06 15:52:08 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/test_with_limit_5
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 3
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 4
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 5
=== RUN   TestInitialiseKlarnerRadoSequence/test_with_limit_10
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 6
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 9
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 10
=== RUN   TestInitialiseKlarnerRadoSequence/test_with_limit_15
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 5
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 5
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 9
    klarnerRadoSequence_test.go:28: at index 11, got 22, want 10
    klarnerRadoSequence_test.go:28: at index 12, got 27, want 10
    klarnerRadoSequence_test.go:28: at index 13, got 28, want 11
    klarnerRadoSequence_test.go:28: at index 14, got 31, want 19
    klarnerRadoSequence_test.go:28: at index 15, got 39, want 20
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_5 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_10 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_15 (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/test_with_limit_5 (0.00s)
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 3
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 4
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 5
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_5 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/test_with_limit_10 (0.00s)
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 6
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 9
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 10
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_10 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/test_with_limit_15 (0.00s)
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 5
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 5
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 9
    klarnerRadoSequence_test.go:28: at index 11, got 22, want 10
    klarnerRadoSequence_test.go:28: at index 12, got 27, want 10
    klarnerRadoSequence_test.go:28: at index 13, got 28, want 11
    klarnerRadoSequence_test.go:28: at index 14, got 31, want 19
    klarnerRadoSequence_test.go:28: at index 15, got 39, want 20
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_15 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)

DONE 4 tests, 4 failures in 0.344s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:52:08 Executes tests with 3 coverage objects
2024/06/06 15:52:08 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/06 15:52:16 Model "openrouter/openai/gpt-3.5-turbo" responded (7144 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestMaximumValue(t *testing.T) {
		tests := []struct {
			name           string
			maximumWeight  int
			items          []Item
			expectedResult int
		}{
			{
				name:           "Test Case 1",
				maximumWeight:  10,
				items:          []Item{{weight: 5, value: 10}, {weight: 4, value: 40}, {weight: 6, value: 30}, {weight: 3, value: 50}},
				expectedResult: 90,
			},
			{
				name:           "Test Case 2",
				maximumWeight:  5,
				items:          []Item{{weight: 2, value: 60}, {weight: 3, value: 90}, {weight: 2, value: 15}, {weight: 1, value: 30}},
				expectedResult: 105,
			},
			{
				name:           "Test Case 3",
				maximumWeight:  8,
				items:          []Item{{weight: 2, value: 40}, {weight: 3, value: 10}, {weight: 4, value: 50}, {weight: 5, value: 70}},
				expectedResult: 90,
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {

				result := maximumValue(test.maximumWeight, test.items)

				if result != test.expectedResult {
					t.Errorf("Expected %d but got %d", test.expectedResult, result)
				}
			})
		}
	}
	```
2024/06/06 15:52:16 $ go mod tidy
2024/06/06 15:52:16 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMaximumValue
=== RUN   TestMaximumValue/Test_Case_1
=== RUN   TestMaximumValue/Test_Case_2
    knapsack_test.go:40: Expected 105 but got 150
=== RUN   TestMaximumValue/Test_Case_3
    knapsack_test.go:40: Expected 90 but got 110
--- FAIL: TestMaximumValue (0.00s)
    --- PASS: TestMaximumValue/Test_Case_1 (0.00s)
    --- FAIL: TestMaximumValue/Test_Case_2 (0.00s)
    --- FAIL: TestMaximumValue/Test_Case_3 (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMaximumValue/Test_Case_2 (0.00s)
    knapsack_test.go:40: Expected 105 but got 150
    --- FAIL: TestMaximumValue/Test_Case_2 (0.00s)

=== FAIL: . TestMaximumValue/Test_Case_3 (0.00s)
    knapsack_test.go:40: Expected 90 but got 110
    --- FAIL: TestMaximumValue/Test_Case_3 (0.00s)

=== FAIL: . TestMaximumValue (0.00s)

DONE 4 tests, 3 failures in 0.313s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:52:16 Executes tests with 5 coverage objects
2024/06/06 15:52:16 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/06 15:52:21 Model "openrouter/openai/gpt-3.5-turbo" responded (4590 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestLargestProperDivisor(t *testing.T) {
		tests := []struct {
			input          int
			expectedOutput int
		}{
			{1, 1},
			{2, 1},
			{3, 1},
			{4, 2},
			{5, 1},
			{6, 3},
			{7, 1},
			{8, 4},
			{9, 3},
			{10, 5},
		}

		for _, test := range tests {
			result, err := largestProperDivisor(test.input)
			if err != nil {
				t.Errorf("largestProperDivisor(%d) returned an error: %v", test.input, err)
			}
			if result != test.expectedOutput {
				t.Errorf("largestProperDivisor(%d) = %d; want %d", test.input, result, test.expectedOutput)
			}
		}
	}
	```
2024/06/06 15:52:21 $ go mod tidy
2024/06/06 15:52:21 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestLargestProperDivisor
--- PASS: TestLargestProperDivisor (0.00s)
PASS
coverage: 3.3% of statements
ok  	light	0.004s	coverage: 3.3% of statements

DONE 1 tests in 0.345s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 15:52:21 Executes tests with 4 coverage objects
2024/06/06 15:52:21 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/06 15:52:27 Model "openrouter/openai/gpt-3.5-turbo" responded (6125 ms) with:
	```golang
	package light

	import "testing"

	func TestMagicSquareOdd(t *testing.T) {
		tests := []struct {
			base   int
			result [][]int
			err    error
		}{
			{3, [][]int{{2, 7, 6}, {9, 5, 1}, {4, 3, 8}}, nil},
			{5, [][]int{{9, 3, 22, 16, 15}, {2, 21, 20, 14, 8}, {25, 19, 13, 7, 1}, {18, 12, 6, 5, 24}, {11, 10, 4, 23, 17}}, nil},
		}

		for _, test := range tests {
			result, err := magicSquareOdd(test.base)
			if err != test.err {
				t.Errorf("Error: Expected %v but got %v", test.err, err)
			}

			for i := 0; i < len(test.result); i++ {
				for j := 0; j < len(test.result[i]); j++ {
					if result[i][j] != test.result[i][j] {
						t.Errorf("Error: At index (%d,%d) Expected: %d but got %d", i, j, test.result[i][j], result[i][j])
					}
				}
			}
		}
	}
	```
2024/06/06 15:52:27 $ go mod tidy
2024/06/06 15:52:27 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 2 but got 8
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 7 but got 1
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 9 but got 3
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 1 but got 7
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 3 but got 9
    magicSquareOdd_test.go:24: Error: At index (2,2) Expected: 8 but got 2
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 9 but got 17
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 3 but got 24
    magicSquareOdd_test.go:24: Error: At index (0,2) Expected: 22 but got 1
    magicSquareOdd_test.go:24: Error: At index (0,3) Expected: 16 but got 8
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 2 but got 23
    magicSquareOdd_test.go:24: Error: At index (1,1) Expected: 21 but got 5
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 20 but got 7
    magicSquareOdd_test.go:24: Error: At index (1,4) Expected: 8 but got 16
    magicSquareOdd_test.go:24: Error: At index (2,0) Expected: 25 but got 4
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 19 but got 6
    magicSquareOdd_test.go:24: Error: At index (2,3) Expected: 7 but got 20
    magicSquareOdd_test.go:24: Error: At index (2,4) Expected: 1 but got 22
    magicSquareOdd_test.go:24: Error: At index (3,0) Expected: 18 but got 10
    magicSquareOdd_test.go:24: Error: At index (3,2) Expected: 6 but got 19
    magicSquareOdd_test.go:24: Error: At index (3,3) Expected: 5 but got 21
    magicSquareOdd_test.go:24: Error: At index (3,4) Expected: 24 but got 3
    magicSquareOdd_test.go:24: Error: At index (4,1) Expected: 10 but got 18
    magicSquareOdd_test.go:24: Error: At index (4,2) Expected: 4 but got 25
    magicSquareOdd_test.go:24: Error: At index (4,3) Expected: 23 but got 2
    magicSquareOdd_test.go:24: Error: At index (4,4) Expected: 17 but got 9
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 10.9% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 2 but got 8
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 7 but got 1
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 9 but got 3
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 1 but got 7
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 3 but got 9
    magicSquareOdd_test.go:24: Error: At index (2,2) Expected: 8 but got 2
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 9 but got 17
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 3 but got 24
    magicSquareOdd_test.go:24: Error: At index (0,2) Expected: 22 but got 1
    magicSquareOdd_test.go:24: Error: At index (0,3) Expected: 16 but got 8
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 2 but got 23
    magicSquareOdd_test.go:24: Error: At index (1,1) Expected: 21 but got 5
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 20 but got 7
    magicSquareOdd_test.go:24: Error: At index (1,4) Expected: 8 but got 16
    magicSquareOdd_test.go:24: Error: At index (2,0) Expected: 25 but got 4
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 19 but got 6
    magicSquareOdd_test.go:24: Error: At index (2,3) Expected: 7 but got 20
    magicSquareOdd_test.go:24: Error: At index (2,4) Expected: 1 but got 22
    magicSquareOdd_test.go:24: Error: At index (3,0) Expected: 18 but got 10
    magicSquareOdd_test.go:24: Error: At index (3,2) Expected: 6 but got 19
    magicSquareOdd_test.go:24: Error: At index (3,3) Expected: 5 but got 21
    magicSquareOdd_test.go:24: Error: At index (3,4) Expected: 24 but got 3
    magicSquareOdd_test.go:24: Error: At index (4,1) Expected: 10 but got 18
    magicSquareOdd_test.go:24: Error: At index (4,2) Expected: 4 but got 25
    magicSquareOdd_test.go:24: Error: At index (4,3) Expected: 23 but got 2
    magicSquareOdd_test.go:24: Error: At index (4,4) Expected: 17 but got 9

DONE 1 tests, 1 failure in 0.322s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:52:27 Executes tests with 8 coverage objects
2024/06/06 15:52:27 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/06 15:52:31 Model "openrouter/openai/gpt-3.5-turbo" responded (3786 ms) with:
	```golang
	package light

	import "testing"

	func TestMatchBytes(t *testing.T) {
		tests := []struct {
			name   string
			s1     []byte
			s2     []byte
			result bool
		}{
			{"matching bytes", []byte("hello"), []byte("hello"), true},
			{"mismatching bytes", []byte("hello"), []byte("world"), false},
			{"empty bytes", []byte(""), []byte(""), true},
			{"different lengths", []byte("hello"), []byte("hi"), false},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := matchBytes(tt.s1, tt.s2); got != tt.result {
					t.Errorf("matchBytes() = %v, want %v", got, tt.result)
				}
			})
		}
	}
	```
2024/06/06 15:52:31 $ go mod tidy
2024/06/06 15:52:31 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestMatchBytes
=== RUN   TestMatchBytes/matching_bytes
=== RUN   TestMatchBytes/mismatching_bytes
=== RUN   TestMatchBytes/empty_bytes
=== RUN   TestMatchBytes/different_lengths
--- PASS: TestMatchBytes (0.00s)
    --- PASS: TestMatchBytes/matching_bytes (0.00s)
    --- PASS: TestMatchBytes/mismatching_bytes (0.00s)
    --- PASS: TestMatchBytes/empty_bytes (0.00s)
    --- PASS: TestMatchBytes/different_lengths (0.00s)
PASS
coverage: 4.3% of statements
ok  	light	0.004s	coverage: 4.3% of statements

DONE 5 tests in 0.352s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 15:52:32 Executes tests with 2 coverage objects
2024/06/06 15:52:32 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/06 15:52:38 Model "openrouter/openai/gpt-3.5-turbo" responded (6426 ms) with:
	```go
	package light

	import (
		"reflect"
		"testing"
	)

	func TestPascalsTriangle(t *testing.T) {
		tests := []struct {
			name   string
			rows   int
			output [][]int
			err    error
		}{
			{"Valid input 1", 5, [][]int{{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}, {1, 4, 6, 4, 1}}, nil},
			{"Valid input 2", 0, [][]int{}, nil},
			{"Negative rows input", -1, nil, errors.New("Rows can't be negative!")},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				output, err := pascalsTriangle(tc.rows)
				if !reflect.DeepEqual(output, tc.output) {
					t.Errorf("Expected %v, but got %v", tc.output, output)
				}
				if (err == nil && tc.err != nil) || (err != nil && tc.err == nil) || (err != nil && tc.err != nil && err.Error() != tc.err.Error()) {
					t.Errorf("Expected error to be %v, but got %v", tc.err, err)
				}
			})
		}
	}
	```
2024/06/06 15:52:38 $ go mod tidy
2024/06/06 15:52:38 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./pascalsTriangle_test.go:17:36: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:17:36: undefined: errors

DONE 0 tests, 1 error in 0.143s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:52:39 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/06 15:52:46 Model "openrouter/openai/gpt-3.5-turbo" responded (7652 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			name        string
			dirtyNumber string
			expected    string
			expectedErr error
		}{
			{
				name:        "Valid input, no special characters",
				dirtyNumber: "1234567890",
				expected:    "1234567890",
				expectedErr: nil,
			},
			{
				name:        "Valid input with special characters, should remove them",
				dirtyNumber: "(123) 456-7890",
				expected:    "1234567890",
				expectedErr: nil,
			},
			{
				name:        "Invalid input with letters, should return error",
				dirtyNumber: "abc123",
				expected:    "",
				expectedErr: errors.New("letters not permitted"),
			},
			{
				name:        "Invalid input with punctuations, should return error",
				dirtyNumber: "12@34",
				expected:    "",
				expectedErr: errors.New("punctuations not permitted"),
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				result, err := extractDigits(test.dirtyNumber)

				if result != test.expected {
					t.Errorf("Expected: %s, but got: %s", test.expected, result)
				}

				if (test.expectedErr == nil && err != nil) || (test.expectedErr != nil && err == nil) {
					t.Errorf("Expected error: %v, but got: %v", test.expectedErr, err)
				}

				if test.expectedErr != nil && err != nil && test.expectedErr.Error() != err.Error() {
					t.Errorf("Expected error message: %v, but got: %v", test.expectedErr, err)
				}
			})
		}
	}
	```
2024/06/06 15:52:46 $ go mod tidy
2024/06/06 15:52:46 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
# light [light.test]
./phoneNumber_test.go:30:17: undefined: errors
./phoneNumber_test.go:36:17: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:30:17: undefined: errors
./phoneNumber_test.go:36:17: undefined: errors

DONE 0 tests, 2 errors in 0.143s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:52:47 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/06 15:52:51 Model "openrouter/openai/gpt-3.5-turbo" responded (3779 ms) with:
	```golang
	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{name: "i is 1", i: 1, want: 0},
			{name: "i is not 1", i: 0, want: 1},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := simpleIfElse(tt.i); got != tt.want {
					t.Errorf("simpleIfElse() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/06 15:52:51 $ go mod tidy
2024/06/06 15:52:51 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleIfElse
=== RUN   TestSimpleIfElse/i_is_1
=== RUN   TestSimpleIfElse/i_is_not_1
--- PASS: TestSimpleIfElse (0.00s)
    --- PASS: TestSimpleIfElse/i_is_1 (0.00s)
    --- PASS: TestSimpleIfElse/i_is_not_1 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 3 tests in 0.334s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 15:52:51 Executes tests with 2 coverage objects
2024/06/06 15:52:51 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/06 15:52:54 Model "openrouter/openai/gpt-3.5-turbo" responded (3058 ms) with:
	```golang
	package light

	import "testing"

	func TestSimpleSwitchWithReturn(t *testing.T) {
		testCases := []struct {
			input    int
			expected int
		}{
			{1, 0},
			{2, 1},
			{3, 1},
		}

		for _, tc := range testCases {
			result := simpleSwitchWithReturn(tc.input)

			if result != tc.expected {
				t.Errorf("For input %d, expected %d but got %d", tc.input, tc.expected, result)
			}
		}
	}
	```
2024/06/06 15:52:54 $ go mod tidy
2024/06/06 15:52:54 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
--- PASS: TestSimpleSwitchWithReturn (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 1 tests in 0.342s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 15:52:55 Executes tests with 3 coverage objects
2024/06/06 15:52:55 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/06 15:52:59 Model "openrouter/openai/gpt-3.5-turbo" responded (4714 ms) with:
	```golang
	package light

	import "testing"

	func TestIsSorted(t *testing.T) {
		tests := []struct {
			name     string
			input    []int
			expected bool
		}{
			{"sorted array", []int{1, 2, 3, 4, 5}, true},
			{"reversed array", []int{5, 4, 3, 2, 1}, false},
			{"random array", []int{3, 1, 4, 1, 5, 9, 2, 6}, false},
			{"empty array", []int{}, true},
			{"single element array", []int{42}, true},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := isSorted(tt.input)
				if result != tt.expected {
					t.Errorf("Expected isSorted(%v) to be %v, but got %v", tt.input, tt.expected, result)
				}
			})
		}
	}
	```
2024/06/06 15:52:59 $ go mod tidy
2024/06/06 15:52:59 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestIsSorted
=== RUN   TestIsSorted/sorted_array
=== RUN   TestIsSorted/reversed_array
=== RUN   TestIsSorted/random_array
=== RUN   TestIsSorted/empty_array
    sort_test.go:22: Expected isSorted([]) to be true, but got false
=== RUN   TestIsSorted/single_element_array
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/sorted_array (0.00s)
    --- PASS: TestIsSorted/reversed_array (0.00s)
    --- PASS: TestIsSorted/random_array (0.00s)
    --- FAIL: TestIsSorted/empty_array (0.00s)
    --- PASS: TestIsSorted/single_element_array (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted/empty_array (0.00s)
    sort_test.go:22: Expected isSorted([]) to be true, but got false
    --- FAIL: TestIsSorted/empty_array (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 6 tests, 2 failures in 0.369s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:53:00 Executes tests with 2 coverage objects
2024/06/06 15:53:00 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/06 15:53:03 Model "openrouter/openai/gpt-3.5-turbo" responded (2758 ms) with:
	```golang
	package light

	import "testing"

	func TestTypeArrayAccess(t *testing.T) {
		tests := []struct {
			input    []int
			expected int
		}{
			{[]int{123}, 123},
			{[]int{1, 2, 3}, 3},
		}

		for _, test := range tests {
			result := typeArrayAccess(test.input)
			if result != test.expected {
				t.Errorf("Expected %d, but got %d for input %v", test.expected, result, test.input)
			}
		}
	}
	```
2024/06/06 15:53:03 $ go mod tidy
2024/06/06 15:53:03 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayAccess
--- PASS: TestTypeArrayAccess (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 1 tests in 0.317s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 15:53:03 Executes tests with 2 coverage objects
2024/06/06 15:53:03 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/06 15:53:07 Model "openrouter/openai/gpt-3.5-turbo" responded (4060 ms) with:
	```golang
	package light

	import "testing"

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			name   string
			input  []int
			output int
		}{
			{"Case 1", []int{0, 8}, 2},
			{"Case 2", []int{5, 8}, 1},
			{"Case 3", []int{0, 9}, 1},
			{"Case 4", []int{2, 3}, 0},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := typeArrayConsecutiveAccess(tt.input)
				if result != tt.output {
					t.Errorf("Expected %d, but got %d", tt.output, result)
				}
			})
		}
	}
	```
2024/06/06 15:53:07 $ go mod tidy
2024/06/06 15:53:07 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/Case_1
=== RUN   TestTypeArrayConsecutiveAccess/Case_2
=== RUN   TestTypeArrayConsecutiveAccess/Case_3
=== RUN   TestTypeArrayConsecutiveAccess/Case_4
--- PASS: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_1 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_2 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_3 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_4 (0.00s)
PASS
coverage: 2.8% of statements
ok  	light	0.004s	coverage: 2.8% of statements

DONE 5 tests in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 15:53:08 Executes tests with 3 coverage objects
2024/06/06 15:53:08 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/06 15:53:12 Model "openrouter/openai/gpt-3.5-turbo" responded (4689 ms) with:
	```golang
	package light

	import "testing"

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name     string
			input    [][]int
			expected int
		}{
			{name: "Empty array", input: [][]int{}, expected: 0},
			{name: "Single inner array length 2", input: [][]int{{1, 2}}, expected: 1},
			{name: "Two inner arrays length 2", input: [][]int{{1, 2}, {3, 4}}, expected: 2},
			{name: "Single inner array length 1", input: [][]int{{1}}, expected: 0},
			{name: "Two inner arrays, one length 1 and one length 2", input: [][]int{{1}, {3, 4}}, expected: 0},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				output := typeArrayMultidimensionalArrayLength(test.input)
				if output != test.expected {
					t.Errorf("Expected: %d, but got %d", test.expected, output)
				}
			})
		}
	}
	```
2024/06/06 15:53:12 $ go mod tidy
2024/06/06 15:53:12 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/Empty_array
=== RUN   TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 1, but got 0
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays_length_2
=== RUN   TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 0, but got 1
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Empty_array (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays_length_2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 1, but got 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 0, but got 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 6 tests, 3 failures in 0.337s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 15:53:13 Executes tests with 3 coverage objects
2024/06/06 15:53:13 Querying model "openrouter/openai/gpt-3.5-turbo" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/06 15:53:19 Model "openrouter/openai/gpt-3.5-turbo" responded (5980 ms) with:
	```golang
	package light

	import "testing"

	func TestValidDate(t *testing.T) {
		tests := []struct {
			name    string
			day     int
			month   int
			year    int
			isValid bool
		}{
			{"Valid date", 15, 5, 2022, true},
			{"Invalid year", 15, 5, 1500, false},
			{"Invalid month", 15, 15, 2022, false},
			{"Invalid day", 0, 5, 2022, false},
			{"Leap year with valid date", 29, 2, 2020, true},
			{"Leap year with invalid date", 30, 2, 2020, false},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := validDate(tt.day, tt.month, tt.year)
				if got != tt.isValid {
					t.Errorf("validDate(%d, %d, %d) = %t; want %t", tt.day, tt.month, tt.year, got, tt.isValid)
				}
			})
		}
	}
	```
2024/06/06 15:53:19 $ go mod tidy
2024/06/06 15:53:19 $ symflower test --language golang --workspace /tmp/eval-dev-quality744030985/light --coverage-file /tmp/eval-dev-quality744030985/light/coverage.json
=== RUN   TestValidDate
=== RUN   TestValidDate/Valid_date
=== RUN   TestValidDate/Invalid_year
=== RUN   TestValidDate/Invalid_month
=== RUN   TestValidDate/Invalid_day
=== RUN   TestValidDate/Leap_year_with_valid_date
=== RUN   TestValidDate/Leap_year_with_invalid_date
--- PASS: TestValidDate (0.00s)
    --- PASS: TestValidDate/Valid_date (0.00s)
    --- PASS: TestValidDate/Invalid_year (0.00s)
    --- PASS: TestValidDate/Invalid_month (0.00s)
    --- PASS: TestValidDate/Invalid_day (0.00s)
    --- PASS: TestValidDate/Leap_year_with_valid_date (0.00s)
    --- PASS: TestValidDate/Leap_year_with_invalid_date (0.00s)
PASS
coverage: 6.2% of statements
ok  	light	0.005s	coverage: 6.2% of statements

DONE 7 tests in 0.323s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 15:53:19 Executes tests with 6 coverage objects
2024/06/06 15:53:19 Evaluated model "openrouter/openai/gpt-3.5-turbo" using language "golang" and repository "golang/light": encountered 12 problems: [exit status 1
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_<_10
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_>_20
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 15, want 10
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 10, want 5
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 0, want 12
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/Test_x_<_10 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/Test_x_>_20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5 (0.00s)
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 15, want 10
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15 (0.00s)
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 10, want 5
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30 (0.00s)
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 0, want 12
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 6 tests, 4 failures in 0.368s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestCallLoopConditionsOftenEnough
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_<_10
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_>_20
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 15, want 10
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 10, want 5
=== RUN   TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 0, want 12
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/Test_x_<_10 (0.00s)
    --- PASS: TestCallLoopConditionsOftenEnough/Test_x_>_20 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15 (0.00s)
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5 (0.00s)
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 15, want 10
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_15,_y_=_5 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15 (0.00s)
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 10, want 5
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_10,_y_=_15 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30 (0.00s)
    callLoopConditionsOftenEnough_test.go:22: callLoopConditionsOftenEnough() = 0, want 12
    --- FAIL: TestCallLoopConditionsOftenEnough/Test_x_=_25,_y_=_30 (0.00s)

=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)

DONE 6 tests, 4 failures in 0.368s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./collatzCalculator_test.go:16:10: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:16:10: undefined: errors

DONE 0 tests, 1 error in 0.173s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./collatzCalculator_test.go:16:10: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:16:10: undefined: errors

DONE 0 tests, 1 error in 0.173s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

collatzCalculator.go exit status 1
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Equilibrium_at_index_3
    equilibriumIndices_test.go:22: Expected: 3;, but got: 3;6;
=== RUN   TestEquilibriumIndices/No_equilibrium_indices
=== RUN   TestEquilibriumIndices/Multiple_equilibrium_indices
    equilibriumIndices_test.go:22: Expected: 1;3;5;, but got: 
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Equilibrium_at_index_3 (0.00s)
    --- PASS: TestEquilibriumIndices/No_equilibrium_indices (0.00s)
    --- FAIL: TestEquilibriumIndices/Multiple_equilibrium_indices (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestEquilibriumIndices/Equilibrium_at_index_3 (0.00s)
    equilibriumIndices_test.go:22: Expected: 3;, but got: 3;6;
    --- FAIL: TestEquilibriumIndices/Equilibrium_at_index_3 (0.00s)

=== FAIL: . TestEquilibriumIndices/Multiple_equilibrium_indices (0.00s)
    equilibriumIndices_test.go:22: Expected: 1;3;5;, but got: 
    --- FAIL: TestEquilibriumIndices/Multiple_equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 4 tests, 3 failures in 0.356s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Equilibrium_at_index_3
    equilibriumIndices_test.go:22: Expected: 3;, but got: 3;6;
=== RUN   TestEquilibriumIndices/No_equilibrium_indices
=== RUN   TestEquilibriumIndices/Multiple_equilibrium_indices
    equilibriumIndices_test.go:22: Expected: 1;3;5;, but got: 
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Equilibrium_at_index_3 (0.00s)
    --- PASS: TestEquilibriumIndices/No_equilibrium_indices (0.00s)
    --- FAIL: TestEquilibriumIndices/Multiple_equilibrium_indices (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestEquilibriumIndices/Equilibrium_at_index_3 (0.00s)
    equilibriumIndices_test.go:22: Expected: 3;, but got: 3;6;
    --- FAIL: TestEquilibriumIndices/Equilibrium_at_index_3 (0.00s)

=== FAIL: . TestEquilibriumIndices/Multiple_equilibrium_indices (0.00s)
    equilibriumIndices_test.go:22: Expected: 1;3;5;, but got: 
    --- FAIL: TestEquilibriumIndices/Multiple_equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 4 tests, 3 failures in 0.356s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestForLoop
    forLoop_test.go:20: For input 2, expected 1, but got 2
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:20: For input 2, expected 1, but got 2

DONE 1 tests, 1 failure in 0.311s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestForLoop
    forLoop_test.go:20: For input 2, expected 1, but got 2
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:20: For input 2, expected 1, but got 2

DONE 1 tests, 1 failure in 0.311s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:24: jacobiSymbol(1, 2) unexpected error: Invalid value. k = 1, n = 2
    jacobiSymbol_test.go:27: jacobiSymbol(1, 2) = 0; want 1
    jacobiSymbol_test.go:24: jacobiSymbol(7, 10) unexpected error: Invalid value. k = 7, n = 10
    jacobiSymbol_test.go:27: jacobiSymbol(7, 10) = 0; want -1
    jacobiSymbol_test.go:24: jacobiSymbol(25, 60) unexpected error: Invalid value. k = 25, n = 60
    jacobiSymbol_test.go:27: jacobiSymbol(25, 60) = 0; want -1
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 8.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:24: jacobiSymbol(1, 2) unexpected error: Invalid value. k = 1, n = 2
    jacobiSymbol_test.go:27: jacobiSymbol(1, 2) = 0; want 1
    jacobiSymbol_test.go:24: jacobiSymbol(7, 10) unexpected error: Invalid value. k = 7, n = 10
    jacobiSymbol_test.go:27: jacobiSymbol(7, 10) = 0; want -1
    jacobiSymbol_test.go:24: jacobiSymbol(25, 60) unexpected error: Invalid value. k = 25, n = 60
    jacobiSymbol_test.go:27: jacobiSymbol(25, 60) = 0; want -1

DONE 1 tests, 1 failure in 0.336s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:24: jacobiSymbol(1, 2) unexpected error: Invalid value. k = 1, n = 2
    jacobiSymbol_test.go:27: jacobiSymbol(1, 2) = 0; want 1
    jacobiSymbol_test.go:24: jacobiSymbol(7, 10) unexpected error: Invalid value. k = 7, n = 10
    jacobiSymbol_test.go:27: jacobiSymbol(7, 10) = 0; want -1
    jacobiSymbol_test.go:24: jacobiSymbol(25, 60) unexpected error: Invalid value. k = 25, n = 60
    jacobiSymbol_test.go:27: jacobiSymbol(25, 60) = 0; want -1
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 8.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:24: jacobiSymbol(1, 2) unexpected error: Invalid value. k = 1, n = 2
    jacobiSymbol_test.go:27: jacobiSymbol(1, 2) = 0; want 1
    jacobiSymbol_test.go:24: jacobiSymbol(7, 10) unexpected error: Invalid value. k = 7, n = 10
    jacobiSymbol_test.go:27: jacobiSymbol(7, 10) = 0; want -1
    jacobiSymbol_test.go:24: jacobiSymbol(25, 60) unexpected error: Invalid value. k = 25, n = 60
    jacobiSymbol_test.go:27: jacobiSymbol(25, 60) = 0; want -1

DONE 1 tests, 1 failure in 0.336s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/test_with_limit_5
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 3
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 4
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 5
=== RUN   TestInitialiseKlarnerRadoSequence/test_with_limit_10
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 6
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 9
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 10
=== RUN   TestInitialiseKlarnerRadoSequence/test_with_limit_15
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 5
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 5
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 9
    klarnerRadoSequence_test.go:28: at index 11, got 22, want 10
    klarnerRadoSequence_test.go:28: at index 12, got 27, want 10
    klarnerRadoSequence_test.go:28: at index 13, got 28, want 11
    klarnerRadoSequence_test.go:28: at index 14, got 31, want 19
    klarnerRadoSequence_test.go:28: at index 15, got 39, want 20
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_5 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_10 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_15 (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/test_with_limit_5 (0.00s)
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 3
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 4
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 5
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_5 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/test_with_limit_10 (0.00s)
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 6
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 9
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 10
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_10 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/test_with_limit_15 (0.00s)
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 5
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 5
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 9
    klarnerRadoSequence_test.go:28: at index 11, got 22, want 10
    klarnerRadoSequence_test.go:28: at index 12, got 27, want 10
    klarnerRadoSequence_test.go:28: at index 13, got 28, want 11
    klarnerRadoSequence_test.go:28: at index 14, got 31, want 19
    klarnerRadoSequence_test.go:28: at index 15, got 39, want 20
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_15 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)

DONE 4 tests, 4 failures in 0.344s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/test_with_limit_5
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 3
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 4
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 5
=== RUN   TestInitialiseKlarnerRadoSequence/test_with_limit_10
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 6
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 9
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 10
=== RUN   TestInitialiseKlarnerRadoSequence/test_with_limit_15
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 5
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 5
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 9
    klarnerRadoSequence_test.go:28: at index 11, got 22, want 10
    klarnerRadoSequence_test.go:28: at index 12, got 27, want 10
    klarnerRadoSequence_test.go:28: at index 13, got 28, want 11
    klarnerRadoSequence_test.go:28: at index 14, got 31, want 19
    klarnerRadoSequence_test.go:28: at index 15, got 39, want 20
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_5 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_10 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_15 (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/test_with_limit_5 (0.00s)
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 3
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 4
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 5
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_5 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/test_with_limit_10 (0.00s)
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 6
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 9
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 10
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_10 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/test_with_limit_15 (0.00s)
    klarnerRadoSequence_test.go:28: at index 2, got 3, want 1
    klarnerRadoSequence_test.go:28: at index 3, got 4, want 1
    klarnerRadoSequence_test.go:28: at index 4, got 7, want 3
    klarnerRadoSequence_test.go:28: at index 5, got 9, want 4
    klarnerRadoSequence_test.go:28: at index 6, got 10, want 5
    klarnerRadoSequence_test.go:28: at index 7, got 13, want 5
    klarnerRadoSequence_test.go:28: at index 8, got 15, want 5
    klarnerRadoSequence_test.go:28: at index 9, got 19, want 5
    klarnerRadoSequence_test.go:28: at index 10, got 21, want 9
    klarnerRadoSequence_test.go:28: at index 11, got 22, want 10
    klarnerRadoSequence_test.go:28: at index 12, got 27, want 10
    klarnerRadoSequence_test.go:28: at index 13, got 28, want 11
    klarnerRadoSequence_test.go:28: at index 14, got 31, want 19
    klarnerRadoSequence_test.go:28: at index 15, got 39, want 20
    --- FAIL: TestInitialiseKlarnerRadoSequence/test_with_limit_15 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)

DONE 4 tests, 4 failures in 0.344s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestMaximumValue
=== RUN   TestMaximumValue/Test_Case_1
=== RUN   TestMaximumValue/Test_Case_2
    knapsack_test.go:40: Expected 105 but got 150
=== RUN   TestMaximumValue/Test_Case_3
    knapsack_test.go:40: Expected 90 but got 110
--- FAIL: TestMaximumValue (0.00s)
    --- PASS: TestMaximumValue/Test_Case_1 (0.00s)
    --- FAIL: TestMaximumValue/Test_Case_2 (0.00s)
    --- FAIL: TestMaximumValue/Test_Case_3 (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMaximumValue/Test_Case_2 (0.00s)
    knapsack_test.go:40: Expected 105 but got 150
    --- FAIL: TestMaximumValue/Test_Case_2 (0.00s)

=== FAIL: . TestMaximumValue/Test_Case_3 (0.00s)
    knapsack_test.go:40: Expected 90 but got 110
    --- FAIL: TestMaximumValue/Test_Case_3 (0.00s)

=== FAIL: . TestMaximumValue (0.00s)

DONE 4 tests, 3 failures in 0.313s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMaximumValue
=== RUN   TestMaximumValue/Test_Case_1
=== RUN   TestMaximumValue/Test_Case_2
    knapsack_test.go:40: Expected 105 but got 150
=== RUN   TestMaximumValue/Test_Case_3
    knapsack_test.go:40: Expected 90 but got 110
--- FAIL: TestMaximumValue (0.00s)
    --- PASS: TestMaximumValue/Test_Case_1 (0.00s)
    --- FAIL: TestMaximumValue/Test_Case_2 (0.00s)
    --- FAIL: TestMaximumValue/Test_Case_3 (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMaximumValue/Test_Case_2 (0.00s)
    knapsack_test.go:40: Expected 105 but got 150
    --- FAIL: TestMaximumValue/Test_Case_2 (0.00s)

=== FAIL: . TestMaximumValue/Test_Case_3 (0.00s)
    knapsack_test.go:40: Expected 90 but got 110
    --- FAIL: TestMaximumValue/Test_Case_3 (0.00s)

=== FAIL: . TestMaximumValue (0.00s)

DONE 4 tests, 3 failures in 0.313s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 2 but got 8
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 7 but got 1
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 9 but got 3
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 1 but got 7
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 3 but got 9
    magicSquareOdd_test.go:24: Error: At index (2,2) Expected: 8 but got 2
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 9 but got 17
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 3 but got 24
    magicSquareOdd_test.go:24: Error: At index (0,2) Expected: 22 but got 1
    magicSquareOdd_test.go:24: Error: At index (0,3) Expected: 16 but got 8
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 2 but got 23
    magicSquareOdd_test.go:24: Error: At index (1,1) Expected: 21 but got 5
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 20 but got 7
    magicSquareOdd_test.go:24: Error: At index (1,4) Expected: 8 but got 16
    magicSquareOdd_test.go:24: Error: At index (2,0) Expected: 25 but got 4
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 19 but got 6
    magicSquareOdd_test.go:24: Error: At index (2,3) Expected: 7 but got 20
    magicSquareOdd_test.go:24: Error: At index (2,4) Expected: 1 but got 22
    magicSquareOdd_test.go:24: Error: At index (3,0) Expected: 18 but got 10
    magicSquareOdd_test.go:24: Error: At index (3,2) Expected: 6 but got 19
    magicSquareOdd_test.go:24: Error: At index (3,3) Expected: 5 but got 21
    magicSquareOdd_test.go:24: Error: At index (3,4) Expected: 24 but got 3
    magicSquareOdd_test.go:24: Error: At index (4,1) Expected: 10 but got 18
    magicSquareOdd_test.go:24: Error: At index (4,2) Expected: 4 but got 25
    magicSquareOdd_test.go:24: Error: At index (4,3) Expected: 23 but got 2
    magicSquareOdd_test.go:24: Error: At index (4,4) Expected: 17 but got 9
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 10.9% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 2 but got 8
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 7 but got 1
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 9 but got 3
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 1 but got 7
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 3 but got 9
    magicSquareOdd_test.go:24: Error: At index (2,2) Expected: 8 but got 2
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 9 but got 17
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 3 but got 24
    magicSquareOdd_test.go:24: Error: At index (0,2) Expected: 22 but got 1
    magicSquareOdd_test.go:24: Error: At index (0,3) Expected: 16 but got 8
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 2 but got 23
    magicSquareOdd_test.go:24: Error: At index (1,1) Expected: 21 but got 5
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 20 but got 7
    magicSquareOdd_test.go:24: Error: At index (1,4) Expected: 8 but got 16
    magicSquareOdd_test.go:24: Error: At index (2,0) Expected: 25 but got 4
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 19 but got 6
    magicSquareOdd_test.go:24: Error: At index (2,3) Expected: 7 but got 20
    magicSquareOdd_test.go:24: Error: At index (2,4) Expected: 1 but got 22
    magicSquareOdd_test.go:24: Error: At index (3,0) Expected: 18 but got 10
    magicSquareOdd_test.go:24: Error: At index (3,2) Expected: 6 but got 19
    magicSquareOdd_test.go:24: Error: At index (3,3) Expected: 5 but got 21
    magicSquareOdd_test.go:24: Error: At index (3,4) Expected: 24 but got 3
    magicSquareOdd_test.go:24: Error: At index (4,1) Expected: 10 but got 18
    magicSquareOdd_test.go:24: Error: At index (4,2) Expected: 4 but got 25
    magicSquareOdd_test.go:24: Error: At index (4,3) Expected: 23 but got 2
    magicSquareOdd_test.go:24: Error: At index (4,4) Expected: 17 but got 9

DONE 1 tests, 1 failure in 0.322s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 2 but got 8
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 7 but got 1
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 9 but got 3
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 1 but got 7
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 3 but got 9
    magicSquareOdd_test.go:24: Error: At index (2,2) Expected: 8 but got 2
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 9 but got 17
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 3 but got 24
    magicSquareOdd_test.go:24: Error: At index (0,2) Expected: 22 but got 1
    magicSquareOdd_test.go:24: Error: At index (0,3) Expected: 16 but got 8
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 2 but got 23
    magicSquareOdd_test.go:24: Error: At index (1,1) Expected: 21 but got 5
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 20 but got 7
    magicSquareOdd_test.go:24: Error: At index (1,4) Expected: 8 but got 16
    magicSquareOdd_test.go:24: Error: At index (2,0) Expected: 25 but got 4
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 19 but got 6
    magicSquareOdd_test.go:24: Error: At index (2,3) Expected: 7 but got 20
    magicSquareOdd_test.go:24: Error: At index (2,4) Expected: 1 but got 22
    magicSquareOdd_test.go:24: Error: At index (3,0) Expected: 18 but got 10
    magicSquareOdd_test.go:24: Error: At index (3,2) Expected: 6 but got 19
    magicSquareOdd_test.go:24: Error: At index (3,3) Expected: 5 but got 21
    magicSquareOdd_test.go:24: Error: At index (3,4) Expected: 24 but got 3
    magicSquareOdd_test.go:24: Error: At index (4,1) Expected: 10 but got 18
    magicSquareOdd_test.go:24: Error: At index (4,2) Expected: 4 but got 25
    magicSquareOdd_test.go:24: Error: At index (4,3) Expected: 23 but got 2
    magicSquareOdd_test.go:24: Error: At index (4,4) Expected: 17 but got 9
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 10.9% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 2 but got 8
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 7 but got 1
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 9 but got 3
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 1 but got 7
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 3 but got 9
    magicSquareOdd_test.go:24: Error: At index (2,2) Expected: 8 but got 2
    magicSquareOdd_test.go:24: Error: At index (0,0) Expected: 9 but got 17
    magicSquareOdd_test.go:24: Error: At index (0,1) Expected: 3 but got 24
    magicSquareOdd_test.go:24: Error: At index (0,2) Expected: 22 but got 1
    magicSquareOdd_test.go:24: Error: At index (0,3) Expected: 16 but got 8
    magicSquareOdd_test.go:24: Error: At index (1,0) Expected: 2 but got 23
    magicSquareOdd_test.go:24: Error: At index (1,1) Expected: 21 but got 5
    magicSquareOdd_test.go:24: Error: At index (1,2) Expected: 20 but got 7
    magicSquareOdd_test.go:24: Error: At index (1,4) Expected: 8 but got 16
    magicSquareOdd_test.go:24: Error: At index (2,0) Expected: 25 but got 4
    magicSquareOdd_test.go:24: Error: At index (2,1) Expected: 19 but got 6
    magicSquareOdd_test.go:24: Error: At index (2,3) Expected: 7 but got 20
    magicSquareOdd_test.go:24: Error: At index (2,4) Expected: 1 but got 22
    magicSquareOdd_test.go:24: Error: At index (3,0) Expected: 18 but got 10
    magicSquareOdd_test.go:24: Error: At index (3,2) Expected: 6 but got 19
    magicSquareOdd_test.go:24: Error: At index (3,3) Expected: 5 but got 21
    magicSquareOdd_test.go:24: Error: At index (3,4) Expected: 24 but got 3
    magicSquareOdd_test.go:24: Error: At index (4,1) Expected: 10 but got 18
    magicSquareOdd_test.go:24: Error: At index (4,2) Expected: 4 but got 25
    magicSquareOdd_test.go:24: Error: At index (4,3) Expected: 23 but got 2
    magicSquareOdd_test.go:24: Error: At index (4,4) Expected: 17 but got 9

DONE 1 tests, 1 failure in 0.322s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./pascalsTriangle_test.go:17:36: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:17:36: undefined: errors

DONE 0 tests, 1 error in 0.143s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./pascalsTriangle_test.go:17:36: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:17:36: undefined: errors

DONE 0 tests, 1 error in 0.143s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light [light.test]
./phoneNumber_test.go:30:17: undefined: errors
./phoneNumber_test.go:36:17: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:30:17: undefined: errors
./phoneNumber_test.go:36:17: undefined: errors

DONE 0 tests, 2 errors in 0.143s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./phoneNumber_test.go:30:17: undefined: errors
./phoneNumber_test.go:36:17: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:30:17: undefined: errors
./phoneNumber_test.go:36:17: undefined: errors

DONE 0 tests, 2 errors in 0.143s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
=== RUN   TestIsSorted
=== RUN   TestIsSorted/sorted_array
=== RUN   TestIsSorted/reversed_array
=== RUN   TestIsSorted/random_array
=== RUN   TestIsSorted/empty_array
    sort_test.go:22: Expected isSorted([]) to be true, but got false
=== RUN   TestIsSorted/single_element_array
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/sorted_array (0.00s)
    --- PASS: TestIsSorted/reversed_array (0.00s)
    --- PASS: TestIsSorted/random_array (0.00s)
    --- FAIL: TestIsSorted/empty_array (0.00s)
    --- PASS: TestIsSorted/single_element_array (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted/empty_array (0.00s)
    sort_test.go:22: Expected isSorted([]) to be true, but got false
    --- FAIL: TestIsSorted/empty_array (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 6 tests, 2 failures in 0.369s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestIsSorted
=== RUN   TestIsSorted/sorted_array
=== RUN   TestIsSorted/reversed_array
=== RUN   TestIsSorted/random_array
=== RUN   TestIsSorted/empty_array
    sort_test.go:22: Expected isSorted([]) to be true, but got false
=== RUN   TestIsSorted/single_element_array
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/sorted_array (0.00s)
    --- PASS: TestIsSorted/reversed_array (0.00s)
    --- PASS: TestIsSorted/random_array (0.00s)
    --- FAIL: TestIsSorted/empty_array (0.00s)
    --- PASS: TestIsSorted/single_element_array (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted/empty_array (0.00s)
    sort_test.go:22: Expected isSorted([]) to be true, but got false
    --- FAIL: TestIsSorted/empty_array (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 6 tests, 2 failures in 0.369s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/Empty_array
=== RUN   TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 1, but got 0
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays_length_2
=== RUN   TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 0, but got 1
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Empty_array (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays_length_2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 1, but got 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 0, but got 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 6 tests, 3 failures in 0.337s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/Empty_array
=== RUN   TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 1, but got 0
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays_length_2
=== RUN   TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 0, but got 1
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Empty_array (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays_length_2 (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 1, but got 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Single_inner_array_length_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:22: Expected: 0, but got 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_inner_arrays,_one_length_1_and_one_length_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 6 tests, 3 failures in 0.337s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
