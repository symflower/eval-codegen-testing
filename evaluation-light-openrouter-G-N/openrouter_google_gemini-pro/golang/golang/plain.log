2024/06/06 10:01:44 Evaluating model "openrouter/google/gemini-pro" using language "golang" and repository "golang/plain"
2024/06/06 10:01:44 Querying model "openrouter/google/gemini-pro" with:
	Given the following Go code file "plain.go" with package "plain", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package plain

	func plain() {
		return // This does not do anything but it gives us a line to cover.
	}
	```
2024/06/06 10:01:46 Model "openrouter/google/gemini-pro" responded (1831 ms) with:
2024/06/06 10:01:46 Evaluated model "openrouter/google/gemini-pro" using language "golang" and repository "golang/plain": encountered 1 problems: [empty response from model
github.com/symflower/eval-dev-quality/model/llm/prompt.ParseResponse
	/home/eval/eval-dev-quality/model/llm/prompt/parse.go:24
github.com/symflower/eval-dev-quality/model/llm.(*Model).GenerateTestsForFile
	/home/eval/eval-dev-quality/model/llm/llm.go:136
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:45
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/eval/eval-dev-quality/evaluate/evaluate.go:119
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:109
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
plain.go]
2024/06/06 10:13:05 Evaluating model "openrouter/google/gemini-pro" using language "golang" and repository "golang/plain"
2024/06/06 10:13:05 Querying model "openrouter/google/gemini-pro" with:
	Given the following Go code file "plain.go" with package "plain", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package plain

	func plain() {
		return // This does not do anything but it gives us a line to cover.
	}
	```
2024/06/06 10:13:07 Model "openrouter/google/gemini-pro" responded (1807 ms) with:
	```golang
	package plain_test

	import (
		"plain"
		"testing"
	)

	func TestPlain(t *testing.T) {
		plain.plain()
	}

	```
2024/06/06 10:13:07 $ go mod tidy
2024/06/06 10:13:07 $ symflower test --language golang --workspace /tmp/eval-dev-quality4253653219/plain --coverage-file /tmp/eval-dev-quality4253653219/plain/coverage.json
# plain_test [plain.test]
./plain_test.go:9:8: undefined: plain.plain
WARN invalid TestEvent: FAIL	plain [build failed]
bad output from test2json: FAIL	plain [build failed]

=== Errors
./plain_test.go:9:8: undefined: plain.plain

DONE 0 tests, 1 error in 0.116s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 10:13:07 Evaluated model "openrouter/google/gemini-pro" using language "golang" and repository "golang/plain": encountered 1 problems: [exit status 1
# plain_test [plain.test]
./plain_test.go:9:8: undefined: plain.plain
WARN invalid TestEvent: FAIL	plain [build failed]
bad output from test2json: FAIL	plain [build failed]

=== Errors
./plain_test.go:9:8: undefined: plain.plain

DONE 0 tests, 1 error in 0.116s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/eval/eval-dev-quality/evaluate/evaluate.go:119
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:109
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/eval/eval-dev-quality/evaluate/evaluate.go:119
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:109
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# plain_test [plain.test]
./plain_test.go:9:8: undefined: plain.plain
WARN invalid TestEvent: FAIL	plain [build failed]
bad output from test2json: FAIL	plain [build failed]

=== Errors
./plain_test.go:9:8: undefined: plain.plain

DONE 0 tests, 1 error in 0.116s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

plain.go]
2024/06/06 10:21:39 Evaluating model "openrouter/google/gemini-pro" using language "golang" and repository "golang/plain"
2024/06/06 10:21:39 Querying model "openrouter/google/gemini-pro" with:
	Given the following Go code file "plain.go" with package "plain", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package plain

	func plain() {
		return // This does not do anything but it gives us a line to cover.
	}
	```
2024/06/06 10:21:40 Model "openrouter/google/gemini-pro" responded (1901 ms) with:
2024/06/06 10:21:40 Evaluated model "openrouter/google/gemini-pro" using language "golang" and repository "golang/plain": encountered 1 problems: [empty response from model
github.com/symflower/eval-dev-quality/model/llm/prompt.ParseResponse
	/home/eval/eval-dev-quality/model/llm/prompt/parse.go:24
github.com/symflower/eval-dev-quality/model/llm.(*Model).GenerateTestsForFile
	/home/eval/eval-dev-quality/model/llm/llm.go:136
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:45
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/eval/eval-dev-quality/evaluate/evaluate.go:119
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:109
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
plain.go]
2024/06/06 10:32:21 Evaluating model "openrouter/google/gemini-pro" using language "golang" and repository "golang/plain"
2024/06/06 10:32:21 Querying model "openrouter/google/gemini-pro" with:
	Given the following Go code file "plain.go" with package "plain", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package plain

	func plain() {
		return // This does not do anything but it gives us a line to cover.
	}
	```
2024/06/06 10:32:22 Model "openrouter/google/gemini-pro" responded (1140 ms) with:
	```
	package plain

	import "testing"

	func Test_plain(t *testing.T) {
		t.Parallel()
		plain()
	}
	```
2024/06/06 10:32:22 $ go mod tidy
2024/06/06 10:32:22 $ symflower test --language golang --workspace /tmp/eval-dev-quality4253653219/plain --coverage-file /tmp/eval-dev-quality4253653219/plain/coverage.json
=== RUN   Test_plain
=== PAUSE Test_plain
=== CONT  Test_plain
--- PASS: Test_plain (0.00s)
PASS
coverage: 100.0% of statements
ok  	plain	0.004s	coverage: 100.0% of statements

DONE 1 tests in 0.283s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 10:32:22 Executes tests with 1 coverage objects
2024/06/06 10:32:22 Evaluated model "openrouter/google/gemini-pro" using language "golang" and repository "golang/plain": encountered 0 problems: []
2024/06/06 10:46:51 Evaluating model "openrouter/google/gemini-pro" using language "golang" and repository "golang/plain"
2024/06/06 10:46:51 Querying model "openrouter/google/gemini-pro" with:
	Given the following Go code file "plain.go" with package "plain", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package plain

	func plain() {
		return // This does not do anything but it gives us a line to cover.
	}
	```
2024/06/06 10:47:00 Model "openrouter/google/gemini-pro" responded (9372 ms) with:
	```go
	// +build !plain_no_test

	package plain_test

	import (
		"testing"

		"github.com/google/go-cmp/cmp"
		"github.com/metrumresearchgroup/pkgr/testutils"

		"github.com/metrumresearchgroup/pkgr/testutils/validate"

		"github.com/metrumresearchgroup/wrapt"
	)

	//go:generate go run github.com/golang/mock/mockgen -destination mocks.go github.com/metrumresearchgroup/pkgr/testutils/validate FakeValidator

	// mockValidator is a mock version of the validate.Validator interface.
	type mockValidator struct {
		validate.FakeValidator
	}

	func buildTestValidator() *mockValidator {
		// use a custom return type here since the Validate function does more than just
		// return an error
		validator := mockValidator{}
		validator.ValidateFunc.SetDefaultHook(func(s string, validate validate.Validator, validatorError validate.ValidatorError) *validate.Result {
			// do nothing, as this is just a mock
			return &validate.Result{}
		})
		return &validator
	}

	// testValidator is a mockValidator that returns a testutils.TestError. This makes
	// it easy to test the handling of errors in the plain function.
	func testValidator() *mockValidator {
		validator := buildTestValidator()
		validator.ValidateFunc.SetDefaultReturn(&testutils.TestError{
			ErrorString:  "test error",
			Validator:    validator,
			ValidatorErr: validator.ValidateFunc,
		})
		return validator
	}

	// TestPlain ensures that the plain function returns the expected output and
	// produces 100% code coverage.
	func TestPlain(t *testing.T) {
		testCases := map[string]struct {
			// no input, no output, just testing for coverage.
		}{
			"plain": {},
		}
		for name, tc := range testCases {
			tc := tc // capture range variable
			t.Run(name, func(t *testing.T) {
				// build context
				validator := buildTestValidator()
				ctx, stop, err := wrapt.NewContext(nil)
				if err != nil {
					t.Fatal(err)
				}
				defer stop(1)
				ctx = validate.WithValidator(ctx, validator)

				// exercise
				err = plain()

				// compare
				if err == nil {
					validator.ValidateFunc.AssertExpectations(t)
					return
				} else if _, ok := err.(*testutils.TestError); !ok {
					t.Fatalf("unexpected error type: got %T, wanted *testutils.TestError", err)
				}

				// validate the error
				result, ok := validator.ValidateFunc.Calls[0].Result[2].(*validate.Result)
				if !ok {
					t.Fatal("call to validate did not return a validate.Result")
				}
				if diff := cmp.Diff(result.Result(), tc.wantErr, testutils.CmpOpts...); diff != "" {
					t.Errorf("wrong validate.Result returned (-want +got):\n%s", diff)
				}

				// validate the error message
				if diff := cmp.Diff(err.Error(), tc.wantErrorString); diff != "" {
					t.Errorf("wrong error string (-want +got):\n%s", diff)
				}
			})
		}
	}
	```
2024/06/06 10:47:00 $ go mod tidy
go: finding module for package github.com/google/go-cmp/cmp
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils/validate
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils
go: finding module for package github.com/metrumresearchgroup/wrapt
go: downloading github.com/metrumresearchgroup/wrapt v0.0.4
go: downloading github.com/metrumresearchgroup/pkgr v1.3.1
go: found github.com/google/go-cmp/cmp in github.com/google/go-cmp v0.6.0
go: found github.com/metrumresearchgroup/wrapt in github.com/metrumresearchgroup/wrapt v0.0.4
go: downloading github.com/stretchr/testify v1.8.4
go: downloading gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c
go: downloading github.com/kr/pretty v0.3.1
go: downloading github.com/rogpeppe/go-internal v1.12.0
go: finding module for package github.com/kr/text
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils/validate
go: downloading github.com/kr/text v0.2.0
go: found github.com/kr/text in github.com/kr/text v0.2.0
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils/validate
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils
go: plain tested by
	plain.test imports
	github.com/metrumresearchgroup/pkgr/testutils: module github.com/metrumresearchgroup/pkgr@latest found (v1.3.1), but does not contain package github.com/metrumresearchgroup/pkgr/testutils
go: plain tested by
	plain.test imports
	github.com/metrumresearchgroup/pkgr/testutils/validate: module github.com/metrumresearchgroup/pkgr@latest found (v1.3.1), but does not contain package github.com/metrumresearchgroup/pkgr/testutils/validate
2024/06/06 10:47:04 Evaluated model "openrouter/google/gemini-pro" using language "golang" and repository "golang/plain": encountered 1 problems: [exit status 1
go: finding module for package github.com/google/go-cmp/cmp
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils/validate
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils
go: finding module for package github.com/metrumresearchgroup/wrapt
go: downloading github.com/metrumresearchgroup/wrapt v0.0.4
go: downloading github.com/metrumresearchgroup/pkgr v1.3.1
go: found github.com/google/go-cmp/cmp in github.com/google/go-cmp v0.6.0
go: found github.com/metrumresearchgroup/wrapt in github.com/metrumresearchgroup/wrapt v0.0.4
go: downloading github.com/stretchr/testify v1.8.4
go: downloading gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c
go: downloading github.com/kr/pretty v0.3.1
go: downloading github.com/rogpeppe/go-internal v1.12.0
go: finding module for package github.com/kr/text
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils/validate
go: downloading github.com/kr/text v0.2.0
go: found github.com/kr/text in github.com/kr/text v0.2.0
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils/validate
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils
go: plain tested by
	plain.test imports
	github.com/metrumresearchgroup/pkgr/testutils: module github.com/metrumresearchgroup/pkgr@latest found (v1.3.1), but does not contain package github.com/metrumresearchgroup/pkgr/testutils
go: plain tested by
	plain.test imports
	github.com/metrumresearchgroup/pkgr/testutils/validate: module github.com/metrumresearchgroup/pkgr@latest found (v1.3.1), but does not contain package github.com/metrumresearchgroup/pkgr/testutils/validate

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:82
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/eval/eval-dev-quality/evaluate/evaluate.go:119
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:109
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/eval/eval-dev-quality/evaluate/evaluate.go:119
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:109
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/google/go-cmp/cmp
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils/validate
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils
go: finding module for package github.com/metrumresearchgroup/wrapt
go: downloading github.com/metrumresearchgroup/wrapt v0.0.4
go: downloading github.com/metrumresearchgroup/pkgr v1.3.1
go: found github.com/google/go-cmp/cmp in github.com/google/go-cmp v0.6.0
go: found github.com/metrumresearchgroup/wrapt in github.com/metrumresearchgroup/wrapt v0.0.4
go: downloading github.com/stretchr/testify v1.8.4
go: downloading gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c
go: downloading github.com/kr/pretty v0.3.1
go: downloading github.com/rogpeppe/go-internal v1.12.0
go: finding module for package github.com/kr/text
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils/validate
go: downloading github.com/kr/text v0.2.0
go: found github.com/kr/text in github.com/kr/text v0.2.0
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils/validate
go: finding module for package github.com/metrumresearchgroup/pkgr/testutils
go: plain tested by
	plain.test imports
	github.com/metrumresearchgroup/pkgr/testutils: module github.com/metrumresearchgroup/pkgr@latest found (v1.3.1), but does not contain package github.com/metrumresearchgroup/pkgr/testutils
go: plain tested by
	plain.test imports
	github.com/metrumresearchgroup/pkgr/testutils/validate: module github.com/metrumresearchgroup/pkgr@latest found (v1.3.1), but does not contain package github.com/metrumresearchgroup/pkgr/testutils/validate

plain.go]
