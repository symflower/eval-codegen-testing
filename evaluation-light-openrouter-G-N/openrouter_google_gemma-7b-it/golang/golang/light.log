2024/06/06 11:21:31 Evaluating model "openrouter/google/gemma-7b-it" using language "golang" and repository "golang/light"
2024/06/06 11:21:31 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/06 11:21:34 Model "openrouter/google/gemma-7b-it" responded (2241 ms) with:
	```go

	package light

	import "testing"

	func TestHasBalancedBrackets(t *testing.T) {
		type args struct {
			charArray string
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{"[(())", args{"(())"}, true},
			{"(())", args{"(())"}, true},
			{"(())", args{"(())()"}, true},
			{"([])", args{"([])"}, true},
			{"(())()(())", args{"(())()(())"}, true},
			{"()[()(())]", args{"()[()(())]", true},
			{"(())()(())", args{"(())()(())"}, true},
			{"()(())", args{"()(())"}, true},
			{"()(())", args{"()(())"}, true},
			{"()(())", args{"()(())"}, true},
			{"", args{""}, false},
			{"(]", args{"("}, false),
			{"[", args{"["}, false),
			{"[()]", args{"[()]"}, false),
			{"(())", args{"(()) "}, false),
			{"))", args{"))"}, false),
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if hasBalancedBrackets(tt.args.charArray) != tt.want {
					t.Errorf("hasBalancedBrackets() = %v, want %v", hasBalancedBrackets(tt.args.charArray), tt.want)
				}
			})
		}
	}
	```
2024/06/06 11:21:34 $ go mod tidy
2024/06/06 11:21:34 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light
balancedBrackets_test.go:25:26: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
balancedBrackets_test.go:25:26: missing ',' in composite literal

DONE 0 tests, 1 error in 0.039s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:21:34 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/06 11:21:35 Model "openrouter/google/gemma-7b-it" responded (991 ms) with:
	```go

	package light

	import "testing"

	func TestBinarySearch(t *testing.T) {
		a := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		x := 5

		result := binarySearch(a, x)

		if result != 4 {
			t.Errorf("The result is not correct. Expected: %d, Actual: %d", 4, result)
		}
	}
	```
2024/06/06 11:21:35 $ go mod tidy
2024/06/06 11:21:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
=== RUN   TestBinarySearch
--- PASS: TestBinarySearch (0.00s)
PASS
coverage: 3.8% of statements
ok  	light	0.005s	coverage: 3.8% of statements

DONE 1 tests in 0.335s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:21:35 Executes tests with 2 coverage objects
2024/06/06 11:21:35 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/06 11:21:39 Model "openrouter/google/gemma-7b-it" responded (4131 ms) with:
	```go
	package light

	import "testing"

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			x, y int
			want int
		}{
			{15, 30, 15},
			{5, 30, 0},
			{21, 30, 11},
			{25, 30, 12},
			{20, 20, 10},
		}

		for _, tc := range tests {
			got := callLoopConditionsOftenEnough(tc.x, tc.y)
			if got != tc.want {
				t.Errorf("callLoopConditionsOftenEnough() = %d, want %d", got, tc.want)
			}
		}
	}
	```
2024/06/06 11:21:39 $ go mod tidy
2024/06/06 11:21:39 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
=== RUN   TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 12, want 15
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 11
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 12
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 20, want 10
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 12, want 15
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 11
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 12
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 20, want 10

DONE 1 tests, 1 failure in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:21:40 Executes tests with 4 coverage objects
2024/06/06 11:21:40 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/06 11:21:41 Model "openrouter/google/gemma-7b-it" responded (1369 ms) with:
	```go
	package light

	import "testing"

	func TestCascadingIfElse(t *testing.T) {
		t.Run("Cascading if-else with different inputs", func(t *testing.T) {
			t.Assert.Equal(cascadingIfElse(1), 2)
			t.Assert.Equal(cascadingIfElse(3), 4)
			t.Assert.Equal(cascadingIfElse(2), 5)
			t.Assert.Equal(cascadingIfElse(4), 5)
			t.Assert.Equal(cascadingIfElse(5), 5)
			t.Assert.Equal(cascadingIfElse(6), 5)
		})
	}
	```
2024/06/06 11:21:41 $ go mod tidy
2024/06/06 11:21:41 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light [light.test]
./cascadingIfElse_test.go:7:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:8:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:9:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:10:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:11:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:12:5: t.Assert undefined (type *testing.T has no field or method Assert)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./cascadingIfElse_test.go:7:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:8:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:9:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:10:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:11:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:12:5: t.Assert undefined (type *testing.T has no field or method Assert)

DONE 0 tests, 6 errors in 0.135s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:21:41 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/06 11:21:49 Model "openrouter/google/gemma-7b-it" responded (8012 ms) with:
	```go
	package light

	import (
		"errors"
		"testing"
	)

	func TestComputeStepCount(t *testing.T) {
		tests := []struct {
			name string
			start int
			want int
			wantErr error
		}{
			{name: "Positive integer", start: 5, want: 6, wantErr: nil},
			{name: "Negative integer", start: -5, want: 0, wantErr: errors.New("Only positive integers are allowed")},
			{name: "Start at 1", start: 1, want: 0, wantErr: nil},
			{name: "Even number", start: 2, want: 1, wantErr: nil},
			{name: "Odd number", start: 3, want: 2, wantErr: nil},
			{name: "Large positive integer", start: 1000, want: 1000, wantErr: nil},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				gotStepCount, gotErr := computeStepCount(tc.start)
				if gotErr != tc.wantErr {
					t.Errorf("computeStepCount() = %v, want %v", gotErr, tc.wantErr)
				}
				if gotStepCount != tc.want {
					t.Errorf("computeStepCount() = %v, want %v", gotStepCount, tc.want)
				}
			})
		}
	}
	```
2024/06/06 11:21:49 $ go mod tidy
2024/06/06 11:21:49 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/Positive_integer
    collatzCalculator_test.go:30: computeStepCount() = 5, want 6
=== RUN   TestComputeStepCount/Negative_integer
    collatzCalculator_test.go:27: computeStepCount() = Only positive integers are allowed, want Only positive integers are allowed
=== RUN   TestComputeStepCount/Start_at_1
=== RUN   TestComputeStepCount/Even_number
=== RUN   TestComputeStepCount/Odd_number
    collatzCalculator_test.go:30: computeStepCount() = 7, want 2
=== RUN   TestComputeStepCount/Large_positive_integer
    collatzCalculator_test.go:30: computeStepCount() = 111, want 1000
--- FAIL: TestComputeStepCount (0.00s)
    --- FAIL: TestComputeStepCount/Positive_integer (0.00s)
    --- FAIL: TestComputeStepCount/Negative_integer (0.00s)
    --- PASS: TestComputeStepCount/Start_at_1 (0.00s)
    --- PASS: TestComputeStepCount/Even_number (0.00s)
    --- FAIL: TestComputeStepCount/Odd_number (0.00s)
    --- FAIL: TestComputeStepCount/Large_positive_integer (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestComputeStepCount/Positive_integer (0.00s)
    collatzCalculator_test.go:30: computeStepCount() = 5, want 6
    --- FAIL: TestComputeStepCount/Positive_integer (0.00s)

=== FAIL: . TestComputeStepCount/Negative_integer (0.00s)
    collatzCalculator_test.go:27: computeStepCount() = Only positive integers are allowed, want Only positive integers are allowed
    --- FAIL: TestComputeStepCount/Negative_integer (0.00s)

=== FAIL: . TestComputeStepCount/Odd_number (0.00s)
    collatzCalculator_test.go:30: computeStepCount() = 7, want 2
    --- FAIL: TestComputeStepCount/Odd_number (0.00s)

=== FAIL: . TestComputeStepCount/Large_positive_integer (0.00s)
    collatzCalculator_test.go:30: computeStepCount() = 111, want 1000
    --- FAIL: TestComputeStepCount/Large_positive_integer (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 7 tests, 5 failures in 0.374s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:21:50 Executes tests with 6 coverage objects
2024/06/06 11:21:50 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/06 11:21:51 Model "openrouter/google/gemma-7b-it" responded (1485 ms) with:
	```go
	package light

	import "testing"

	func TestConditionsAnd(t *testing.T) {
		t.Run("Returns true when x is A and y is B", func(t *testing.T) {
			if conditionsAnd('A', 'B') != true {
				t.Error("ConditionsAnd failed")
			}
		})

		t.Run("Returns false otherwise", func(t *testing.T) {
			if conditionsAnd('a', 'b') || conditionsAnd('A', 'a') || conditionsAnd('a', 'B') {
				t.Error("ConditionsAnd failed")
			}
		})
	}
	```
2024/06/06 11:21:51 $ go mod tidy
2024/06/06 11:21:51 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
=== RUN   TestConditionsAnd
=== RUN   TestConditionsAnd/Returns_true_when_x_is_A_and_y_is_B
=== RUN   TestConditionsAnd/Returns_false_otherwise
--- PASS: TestConditionsAnd (0.00s)
    --- PASS: TestConditionsAnd/Returns_true_when_x_is_A_and_y_is_B (0.00s)
    --- PASS: TestConditionsAnd/Returns_false_otherwise (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 3 tests in 0.343s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:21:52 Executes tests with 2 coverage objects
2024/06/06 11:21:52 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/06 11:21:55 Model "openrouter/google/gemma-7b-it" responded (3416 ms) with:
	```go
	package light

	import "testing"

	func TestEquilibriumIndices(t *testing.T) {
		sequence := []int{1, 2, 3, 4, 5}
		expected := "0;2"
		t.Run("Equilibrium Indices", func(t *testing.T) {
			actual := equilibriumIndices(sequence)
			t.Logf("Actual: %v", actual)
			t.Equal(expected, actual)
		})

		sequence = []int{1, 2, 2, 3, 4, 5}
		expected = "0;2;4"
		t.Run("Multiple Equilibrium Indices", func(t *testing.T) {
			actual := equilibriumIndices(sequence)
			t.Logf("Actual: %v", actual)
			t.Equal(expected, actual)
		})

		sequence = []int{1}
		expected = ""
		t.Run("Empty Sequence", func(t *testing.T) {
			actual := equilibriumIndices(sequence)
			t.Logf("Actual: %v", actual)
			t.Equal(expected, actual)
		})
	}
	```
2024/06/06 11:21:55 $ go mod tidy
2024/06/06 11:21:55 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light [light.test]
./equilibriumIndices_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:19:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:27:5: t.Equal undefined (type *testing.T has no field or method Equal)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:19:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:27:5: t.Equal undefined (type *testing.T has no field or method Equal)

DONE 0 tests, 3 errors in 0.135s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:21:55 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/06 11:21:58 Model "openrouter/google/gemma-7b-it" responded (3277 ms) with:
	```go
	package light

	import "stretchr/testify/assert"

	func TestForLoop(t *testing.T) {
		forLoop := light.ForLoop(5)

		assert.Equal(t, 15, forLoop)
	}

	func TestForLoop_Zero(t *testing.T) {
		forLoop := light.ForLoop(0)

		assert.Equal(t, 0, forLoop)
	}

	func TestForLoop_Negative(t *testing.T) {
		defer func() {
			r := recover()
			assert.Error(t, r, "should panic for negative input")
		}()

		light.ForLoop(-1)
	}
	```
2024/06/06 11:21:58 $ go mod tidy
2024/06/06 11:21:59 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light
forLoop_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
forLoop_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.042s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:21:59 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/06 11:22:03 Model "openrouter/google/gemma-7b-it" responded (4718 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestJacobiSymbol(t *testing.T) {
		tests := []struct {
			k    uint6 viciss   int
			n    uint6 viciss   int
			want  int
			wantErr bool
		}{
			{0 viciss, 3, 1, false},
			{1, 5, -1, false},
			{2, 7, 1, false},
			{3, 11, -1, false},
			{4 viciss, 13, 1, false},
			{-1, 5, 0 viciss, true},
			{0 Kün 8, 4 viciss, true},
			{4 viciss 7, 9, 1, false},
			{2, 10 viciss 3, true},
			{4 viciss 5, 7, -1 viciss 3, false},
		}

		for _, tc := range tests {
			jacobi, err := jacobiSymbol(tc.k, tc.n)
			if err != nil && !tc.wantErr {
				t.Fatal(err)
			}
			if jacobi != tc.want {
				t.Errorf("jacobiSymbol() = %d, want %d", jacobi, tc.want)
			}
		}
	}
	```
2024/06/06 11:22:03 $ go mod tidy
2024/06/06 11:22:03 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light
jacobiSymbol_test.go:9:14: expected ';', found viciss
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
jacobiSymbol_test.go:9:14: expected ';', found viciss

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:04 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/06 11:22:05 Model "openrouter/google/gemma-7b-it" responded (917 ms) with:
	```go
	package light

	import "testing"

	func TestKlarnerRadoSequence(t *testing.T) {
		limit := 5
		result := initialiseKlarnerRadoSequence(limit)
		expected := []int{1, 2, 3, 4, 5, 6}

		t.Log("Testing initializeKlarnerRadoSequence function...")

		t.Equal(expected, result)
	}
	```
2024/06/06 11:22:05 $ go mod tidy
2024/06/06 11:22:05 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light [light.test]
./klarnerRadoSequence_test.go:12:4: t.Equal undefined (type *testing.T has no field or method Equal)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:12:4: t.Equal undefined (type *testing.T has no field or method Equal)

DONE 0 tests, 1 error in 0.146s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:05 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/06 11:22:10 Model "openrouter/google/gemma-7b-it" responded (4691 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestMaximumValue(t *testing.T) {
		items := []Item{
			{2, 3 KünpsackProblem{3, 4 vicisspsackProblem{4 vicisspsackProblem{10 vicisspsackProblem{5, 4 vicisspsackProblem{3, 4 KünpsackProblem{4 KünpsackProblem{7, 4 vicisspsackProblem{4 vicisspsackProblem{8, 9}}}}}}}}},
		}

		maximumWeight := 10 KünpsackProblem{10 vicisspsackProblem{5, 3}}
		result := maximumValue(maximumWeight, items)

		want := 15
		got := result

		t.Log("Test Case: Basic Knapsack Problem")
		if got != want {
			t.Errorf("Expected: %d, Actual: %d", want, got)
		}
	}

	func TestMaximumValueLargeItem(t *testing.T) {
		items := []Item{
			{6 vicisspsackProblem{2, 3},},
		}

		maximumWeight := 5 vicisspsackProblem{4 vicisspsackProblem{4 vicisspsackProblem{8, 9}}}}
		result := maximumValue(maximumWeight, items)

		want := 15
		got := result

		t.Log("Test Case: Large Item")
		if got != want {
			t.Errorf("Expected: %d, Actual: %d", want, got)
		}
	}
	```
2024/06/06 11:22:10 $ go mod tidy
2024/06/06 11:22:10 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light
knapsack_test.go:9:9: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
knapsack_test.go:9:9: missing ',' in composite literal

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:10 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/06 11:22:14 Model "openrouter/google/gemma-7b-it" responded (3870 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestLargestProperDivisor(t *testing.T) {
		tests := []struct {
			aNumber int
			wantDivisor int
			wantError error
		}{
			{1, 0 viciss divisor not found},
			{2, 1, nil},
			{3 viciss divisor not found},
			{5, 1, nil},
			{6 viciss divisor not found},
			{1 Künumber too small},
		}

		for _, tc := range tests {
			divisor, err := largestProperDivisor(tc.aNumber)
			if err != tc.wantError {
				t.Errorf("largestProperDivisor() unexpected error: %v", err)
			}
			if divisor != tc.wantDivisor {
				t.Errorf("largestProperDivisor() = %d, want %d", divisor, tc.wantDivisor)
			}
		}
	}
	```
2024/06/06 11:22:14 $ go mod tidy
2024/06/06 11:22:14 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
WARN # light
largestProperDivisor_test.go:13:9: missing ',' in composite literal
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
largestProperDivisor_test.go:13:9: missing ',' in composite literal

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:14 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/06 11:22:16 Model "openrouter/google/gemma-7b-it" responded (2333 ms) with:
	```go

	package light

	import "testing"

	func TestMagicSquareOdd(t *testing.T) {
		t.Run("valid base", func(t *testing.T) {
			got, err := magicSquareOdd(5)
			if err != nil {
				t.Fatal(err)
			}
			t.Equal([][]int{
				{1, 2, 3, 4, 5},
				{6, 7, 8, 9, 10},
				{11, 12, 13, 14, 15},
				{16, 17, 18, 19, 20},
				{21, 22, 23, 24, 25},
			}, got)
		})

		t.Run("invalid base", func(t *testing.T) {
			_, err := magicSquareOdd(2)
			t.EqualError(err, errors.New("base must be odd and > 2"))
		})
	}
	```
2024/06/06 11:22:16 $ go mod tidy
2024/06/06 11:22:16 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light [light.test]
./magicSquareOdd_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./magicSquareOdd_test.go:22:5: t.EqualError undefined (type *testing.T has no field or method EqualError)
./magicSquareOdd_test.go:22:21: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./magicSquareOdd_test.go:22:5: t.EqualError undefined (type *testing.T has no field or method EqualError)
./magicSquareOdd_test.go:22:21: undefined: errors

DONE 0 tests, 3 errors in 0.184s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:16 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/06 11:22:22 Model "openrouter/google/gemma-7b-it" responded (5197 ms) with:
	```go
	package light

	import "stretchr/testify/assert"

	func TestMatchBytes(t *testing.T) {
		tests := []struct {
			s1   []byte
			s2   []byte
			want bool
		}{
			{[]byte{'a', 'b', 'c'}, []byte{'a', 'b', 'c'}, true},
			{[]byte{'a', 'b', 'c'}, []byte{'A', 'B', 'C'}, true},
			{[]byte{'a', 'b', 'c'}, []byte{'a', 'b', 'd'}, false},
			{[]byte{'A', 'B', 'C'}, []byte{'a', 'b', 'c'}, false},
			{[]byte{'a'}, []byte{'a'}, true},
			{[]byte{'a'}, []byte{'b'}, false},
			{[]byte{'a'}, []byte{'a', 'a'}, false},
			{[]byte{'z'}, []byte{'a'}, false},
			{[]byte{'A'}, []byte{'a'}, false},
			{[]byte{'a'}, []byte{'z'}, false},
		}

		for _, tc := range tests {
			t.Run(fmt.Sprintf("MatchBytes(%v, %v)", tc.s1, tc.s2), func(t *testing.T) {
				assert.Equal(t, tc.want, matchBytes(tc.s1, tc.s2))
			})
		}
	}
	```
2024/06/06 11:22:22 $ go mod tidy
2024/06/06 11:22:22 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light
matchBytes_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.038s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:22 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/06 11:22:25 Model "openrouter/google/gemma-7b-it" responded (3053 ms) with:
	```go
	package light

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestPascalsTriangle(t *testing.T) {
		rows := 5

		triangle, err := pascalsTriangle(rows)
		assert.Nil(t, err, "Should not encounter errors generating Pascal's Triangle")

		// Row 0 vicisstriangle of size 5
		expected := [][]int{
			[]int{1},
			[]int{1, 1},
			[]int{1, 2, 1},
			[]int{1, 3, 3 vicisstriangle[0 vicisstriangle[0 Kün][0 vicisstriangle[0 vicisstriangle[0 vicisstriangle[rows]'][rows]]
		}

		assert.Equal(t, expected, triangle, "Pascals Triangle generation incorrect")
	}
	```
2024/06/06 11:22:25 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/06 11:22:25 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light
pascalsTriangle_test.go:20:17: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
pascalsTriangle_test.go:20:17: missing ',' in composite literal

DONE 0 tests, 1 error in 0.075s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:25 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/06 11:22:32 Model "openrouter/google/gemma-7b-it" responded (6537 ms) with:
	```go
	package light

	import (
		"testing"

		"github.com/stretchr/testify/require"
	)

	func TestExtractDigits(t *testing.T) {
		cases := []struct {
			dirtyNumber string
			expectedCleanNumber string
			expectedError string
		}{
			{
				dirtyNumber: "123 456.789+098",
				expectedCleanNumber: "12345678909",
				expectedError: "",
			},
			{
				dirtyNumber: "123-456.789@gmail.com",
				expectedCleanNumber: "",
				expectedError: "punctuations not permitted",
			},
			{
				dirtyNumber: "abc123",
				expectedCleanNumber: "",
				expectedError: "letters not permitted",
			},
		}

		for _, tc := range cases {
			cleanNumber, err := extractDigits(tc.dirtyNumber)
			if tc.expectedError == "" {
				require.NoError(t, err)
				require.Equal(t, tc.expectedCleanNumber, cleanNumber)
			} else {
				require.Error(t, err)
				require.Equal(t, tc.expectedError, err.Error())
			}
		}
	}
	```
2024/06/06 11:22:32 $ go mod tidy
2024/06/06 11:22:32 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
=== RUN   TestExtractDigits
    phoneNumber_test.go:36: 
        	Error Trace:	/tmp/eval-dev-quality3149083375/light/phoneNumber_test.go:36
        	Error:      	Not equal: 
        	            	expected: "12345678909"
        	            	actual  : "123456789098"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-12345678909
        	            	+123456789098
        	Test:       	TestExtractDigits
--- FAIL: TestExtractDigits (0.00s)
FAIL
coverage: 3.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestExtractDigits (0.00s)
    phoneNumber_test.go:36: 
        	Error Trace:	/tmp/eval-dev-quality3149083375/light/phoneNumber_test.go:36
        	Error:      	Not equal: 
        	            	expected: "12345678909"
        	            	actual  : "123456789098"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-12345678909
        	            	+123456789098
        	Test:       	TestExtractDigits

DONE 1 tests, 1 failure in 0.462s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:33 Executes tests with 5 coverage objects
2024/06/06 11:22:33 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/06 11:22:34 Model "openrouter/google/gemma-7b-it" responded (1598 ms) with:
	```go

	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		t.Run("If I is 1, returns 0", func(t *testing.T) {
			if got := simpleIfElse(1); got != 0 {
				t.Errorf("Expected 0, got %d", got)
			}
		})

		t.Run("If I is not 1, returns 1", func(t *testing.T) {
			if got := simpleIfElse(2); got != 1 {
				t.Errorf("Expected 1, got %d", got)
			}
		})
	}
	```
2024/06/06 11:22:34 $ go mod tidy
2024/06/06 11:22:34 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
=== RUN   TestSimpleIfElse
=== RUN   TestSimpleIfElse/If_I_is_1,_returns_0
=== RUN   TestSimpleIfElse/If_I_is_not_1,_returns_1
--- PASS: TestSimpleIfElse (0.00s)
    --- PASS: TestSimpleIfElse/If_I_is_1,_returns_0 (0.00s)
    --- PASS: TestSimpleIfElse/If_I_is_not_1,_returns_1 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 3 tests in 0.366s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:22:35 Executes tests with 2 coverage objects
2024/06/06 11:22:35 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/06 11:22:38 Model "openrouter/google/gemma-7b-it" responded (2840 ms) with:
	```go
	package light

	import "stretchr/testify/assert"

	import "testing"

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			input   int
			expected int
		}{
			{1, 0},
			{2, 1},
		}

		for _, tc := range tests {
			actual := simpleSwitchWithReturn(tc.input)
			assert.Equal(t, tc.expected, actual)
		}
	}
	```
2024/06/06 11:22:38 $ go mod tidy
2024/06/06 11:22:38 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light
simpleSwitchWithReturn_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
simpleSwitchWithReturn_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.039s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:38 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/06 11:22:42 Model "openrouter/google/gemma-7b-it" responded (4045 ms) with:
	```go
	package light

	import "stretchr/testify/assert"

	func TestIsSorted(t *testing.T) {
		type args struct {
			a []int
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{name: "Empty slice", args: args{[]int{}}, want: true},
			{name: "Sorted slice", args: args{[]int{1, 2, 3, 4 vicisseller.IntMax}}, want: true},
			{name: "Unsorted slice", args: args{[]int{3, 2, 1}}, want: false},
			// Add more test cases to cover different scenarios.
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				result := isSorted(tc.args.a)
				assert.Equal(t, tc.want, result)
			})
		}
	}
	```
2024/06/06 11:22:42 $ go mod tidy
2024/06/06 11:22:42 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light
sort_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
sort_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.040s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:42 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/06 11:22:44 Model "openrouter/google/gemma-7b-it" responded (2372 ms) with:
	```go

	package light

	import "testing"

	func TestTypeArrayAccess(t *testing.T) {
		x := []int{123, 4, 5}
		t.Run("should return x[0] when x[0] is 123", func(t *testing.T) {
			if result := typeArrayAccess(x); result != 123 {
				t.Errorf("expected 123, but got %d", result)
			}
		})

		x = []int{4, 5, 6}
		t.Run("should return 3 when x[0] is not 123", func(t *testing.T) {
			if result := typeArrayAccess(x); result != 3 {
				t.Errorf("expected 3, but got %d", result)
			}
		})
	}
	```
2024/06/06 11:22:44 $ go mod tidy
2024/06/06 11:22:44 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
=== RUN   TestTypeArrayAccess
=== RUN   TestTypeArrayAccess/should_return_x[0]_when_x[0]_is_123
=== RUN   TestTypeArrayAccess/should_return_3_when_x[0]_is_not_123
--- PASS: TestTypeArrayAccess (0.00s)
    --- PASS: TestTypeArrayAccess/should_return_x[0]_when_x[0]_is_123 (0.00s)
    --- PASS: TestTypeArrayAccess/should_return_3_when_x[0]_is_not_123 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 3 tests in 0.348s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:22:45 Executes tests with 2 coverage objects
2024/06/06 11:22:45 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/06 11:22:49 Model "openrouter/google/gemma-7b-it" responded (4156 ms) with:
	```go
	package light

	import "testing"

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		input := []int{0, 8}
		want := 2
		got := typeArrayConsecutiveAccess(input)

		if got != want {
			t.Errorf("Incorrect count. Got %d, want %d", got, want)
		}

		input = []int{0, 9}
		want = 1
		got = typeArrayConsecutiveAccess(input)

		if got != want {
			t.Errorf("Incorrect count. Got %d, want %d", got, want)
		}

		input = []int{8, 8}
		want = 1
		got = typeArrayConsecutiveAccess(input)

		if got != want {
			t.Errorf("Incorrect count. Got %d, want %d", got, want)
		}
	}
	```
2024/06/06 11:22:49 $ go mod tidy
2024/06/06 11:22:49 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
--- PASS: TestTypeArrayConsecutiveAccess (0.00s)
PASS
coverage: 2.8% of statements
ok  	light	0.004s	coverage: 2.8% of statements

DONE 1 tests in 0.338s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/06 11:22:50 Executes tests with 3 coverage objects
2024/06/06 11:22:50 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/06 11:22:53 Model "openrouter/google/gemma-7b-it" responded (3834 ms) with:
	```go
	package light

	import "stretchr/testify/assert"

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		// Case: 2D array with 2 rows and 2 columns.
		input := [][]int{
			[]int{1, 2},
			[]int{3, 4 Kün},
		}
		output := typeArrayMultidimensionalArrayLength(input)
		assert.Equal(t, 2, output)

		// Case: 2D array with 2 rows and 1 column.
		input = [][]int{
			[]int{1},
			[]int{2},
		}
		output = typeArrayMultidimensionalArrayLength(input)
		assert.Equal(t, 1, output)

		// Case: 2D array with 0 vicissuler number of rows and columns.
		input = [][]int{
			[]int{1},
		}
		output = typeArrayMultidimensionalArrayLength(input)
		assert.Equal(t, 0 vicissuler, output)
	}
	```
2024/06/06 11:22:53 $ go mod tidy
2024/06/06 11:22:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
WARN invalid TestEvent: FAIL	light [setup failed]# light

bad output from test2json: FAIL	light [setup failed]
typeArrayMultidimensionalArrayLength_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

=== Errors
typeArrayMultidimensionalArrayLength_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:54 Querying model "openrouter/google/gemma-7b-it" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/06 11:22:58 Model "openrouter/google/gemma-7b-it" responded (4134 ms) with:
	```go
	package light

	import "testing"

	func TestValidDate(t *testing.T) {
		tests := []struct {
			day   int
			month int
			year  int
			want  bool
		}{
			{1, 1, 20 Künst, false},
			{31, 12, 20 vicisstest},
			{1, 2, 1970 vicisstest},
			{29, 2, 190 Künst},
			{30 vicisstest, 3, 20 vicisstest},
			{30 Künst, 4 Künst, 20 Künst},
			{30 vicisstest, 4 vicisstest, 20 Künst},
			{1, 3, 20 vicisstest},
			{30 vicisstest, 4 vicisstest},
			{30 Künst, 13, 20 Künst},
			{1, 4 Künst, 20 Künst},
		}

		for _, tc := range tests {
			got, want := validateDate(tc.day, tc.month, tc.year)
			if got && want {
				t.Skip(tc.day, tc.month, tc.year)
			}
		}
	}
	```
2024/06/06 11:22:58 $ go mod tidy
2024/06/06 11:22:58 $ symflower test --language golang --workspace /tmp/eval-dev-quality3149083375/light --coverage-file /tmp/eval-dev-quality3149083375/light/coverage.json
# light
validateDate_test.go:12:13: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
validateDate_test.go:12:13: missing ',' in composite literal

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/06 11:22:58 Evaluated model "openrouter/google/gemma-7b-it" using language "golang" and repository "golang/light": encountered 18 problems: [exit status 1
# light
balancedBrackets_test.go:25:26: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
balancedBrackets_test.go:25:26: missing ',' in composite literal

DONE 0 tests, 1 error in 0.039s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
balancedBrackets_test.go:25:26: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
balancedBrackets_test.go:25:26: missing ',' in composite literal

DONE 0 tests, 1 error in 0.039s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
=== RUN   TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 12, want 15
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 11
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 12
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 20, want 10
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 12, want 15
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 11
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 12
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 20, want 10

DONE 1 tests, 1 failure in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestCallLoopConditionsOftenEnough
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 12, want 15
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 11
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 12
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 20, want 10
--- FAIL: TestCallLoopConditionsOftenEnough (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestCallLoopConditionsOftenEnough (0.00s)
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 12, want 15
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 11
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 0, want 12
    callLoopConditionsOftenEnough_test.go:20: callLoopConditionsOftenEnough() = 20, want 10

DONE 1 tests, 1 failure in 0.331s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./cascadingIfElse_test.go:7:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:8:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:9:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:10:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:11:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:12:5: t.Assert undefined (type *testing.T has no field or method Assert)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./cascadingIfElse_test.go:7:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:8:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:9:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:10:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:11:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:12:5: t.Assert undefined (type *testing.T has no field or method Assert)

DONE 0 tests, 6 errors in 0.135s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./cascadingIfElse_test.go:7:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:8:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:9:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:10:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:11:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:12:5: t.Assert undefined (type *testing.T has no field or method Assert)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./cascadingIfElse_test.go:7:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:8:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:9:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:10:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:11:5: t.Assert undefined (type *testing.T has no field or method Assert)
./cascadingIfElse_test.go:12:5: t.Assert undefined (type *testing.T has no field or method Assert)

DONE 0 tests, 6 errors in 0.135s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

cascadingIfElse.go exit status 1
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/Positive_integer
    collatzCalculator_test.go:30: computeStepCount() = 5, want 6
=== RUN   TestComputeStepCount/Negative_integer
    collatzCalculator_test.go:27: computeStepCount() = Only positive integers are allowed, want Only positive integers are allowed
=== RUN   TestComputeStepCount/Start_at_1
=== RUN   TestComputeStepCount/Even_number
=== RUN   TestComputeStepCount/Odd_number
    collatzCalculator_test.go:30: computeStepCount() = 7, want 2
=== RUN   TestComputeStepCount/Large_positive_integer
    collatzCalculator_test.go:30: computeStepCount() = 111, want 1000
--- FAIL: TestComputeStepCount (0.00s)
    --- FAIL: TestComputeStepCount/Positive_integer (0.00s)
    --- FAIL: TestComputeStepCount/Negative_integer (0.00s)
    --- PASS: TestComputeStepCount/Start_at_1 (0.00s)
    --- PASS: TestComputeStepCount/Even_number (0.00s)
    --- FAIL: TestComputeStepCount/Odd_number (0.00s)
    --- FAIL: TestComputeStepCount/Large_positive_integer (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestComputeStepCount/Positive_integer (0.00s)
    collatzCalculator_test.go:30: computeStepCount() = 5, want 6
    --- FAIL: TestComputeStepCount/Positive_integer (0.00s)

=== FAIL: . TestComputeStepCount/Negative_integer (0.00s)
    collatzCalculator_test.go:27: computeStepCount() = Only positive integers are allowed, want Only positive integers are allowed
    --- FAIL: TestComputeStepCount/Negative_integer (0.00s)

=== FAIL: . TestComputeStepCount/Odd_number (0.00s)
    collatzCalculator_test.go:30: computeStepCount() = 7, want 2
    --- FAIL: TestComputeStepCount/Odd_number (0.00s)

=== FAIL: . TestComputeStepCount/Large_positive_integer (0.00s)
    collatzCalculator_test.go:30: computeStepCount() = 111, want 1000
    --- FAIL: TestComputeStepCount/Large_positive_integer (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 7 tests, 5 failures in 0.374s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/Positive_integer
    collatzCalculator_test.go:30: computeStepCount() = 5, want 6
=== RUN   TestComputeStepCount/Negative_integer
    collatzCalculator_test.go:27: computeStepCount() = Only positive integers are allowed, want Only positive integers are allowed
=== RUN   TestComputeStepCount/Start_at_1
=== RUN   TestComputeStepCount/Even_number
=== RUN   TestComputeStepCount/Odd_number
    collatzCalculator_test.go:30: computeStepCount() = 7, want 2
=== RUN   TestComputeStepCount/Large_positive_integer
    collatzCalculator_test.go:30: computeStepCount() = 111, want 1000
--- FAIL: TestComputeStepCount (0.00s)
    --- FAIL: TestComputeStepCount/Positive_integer (0.00s)
    --- FAIL: TestComputeStepCount/Negative_integer (0.00s)
    --- PASS: TestComputeStepCount/Start_at_1 (0.00s)
    --- PASS: TestComputeStepCount/Even_number (0.00s)
    --- FAIL: TestComputeStepCount/Odd_number (0.00s)
    --- FAIL: TestComputeStepCount/Large_positive_integer (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestComputeStepCount/Positive_integer (0.00s)
    collatzCalculator_test.go:30: computeStepCount() = 5, want 6
    --- FAIL: TestComputeStepCount/Positive_integer (0.00s)

=== FAIL: . TestComputeStepCount/Negative_integer (0.00s)
    collatzCalculator_test.go:27: computeStepCount() = Only positive integers are allowed, want Only positive integers are allowed
    --- FAIL: TestComputeStepCount/Negative_integer (0.00s)

=== FAIL: . TestComputeStepCount/Odd_number (0.00s)
    collatzCalculator_test.go:30: computeStepCount() = 7, want 2
    --- FAIL: TestComputeStepCount/Odd_number (0.00s)

=== FAIL: . TestComputeStepCount/Large_positive_integer (0.00s)
    collatzCalculator_test.go:30: computeStepCount() = 111, want 1000
    --- FAIL: TestComputeStepCount/Large_positive_integer (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 7 tests, 5 failures in 0.374s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./equilibriumIndices_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:19:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:27:5: t.Equal undefined (type *testing.T has no field or method Equal)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:19:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:27:5: t.Equal undefined (type *testing.T has no field or method Equal)

DONE 0 tests, 3 errors in 0.135s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./equilibriumIndices_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:19:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:27:5: t.Equal undefined (type *testing.T has no field or method Equal)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:19:5: t.Equal undefined (type *testing.T has no field or method Equal)
./equilibriumIndices_test.go:27:5: t.Equal undefined (type *testing.T has no field or method Equal)

DONE 0 tests, 3 errors in 0.135s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

equilibriumIndices.go exit status 1
# light
forLoop_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
forLoop_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.042s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
forLoop_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
forLoop_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.042s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

forLoop.go exit status 1
# light
jacobiSymbol_test.go:9:14: expected ';', found viciss
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
jacobiSymbol_test.go:9:14: expected ';', found viciss

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
jacobiSymbol_test.go:9:14: expected ';', found viciss
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
jacobiSymbol_test.go:9:14: expected ';', found viciss

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

jacobiSymbol.go exit status 1
# light [light.test]
./klarnerRadoSequence_test.go:12:4: t.Equal undefined (type *testing.T has no field or method Equal)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:12:4: t.Equal undefined (type *testing.T has no field or method Equal)

DONE 0 tests, 1 error in 0.146s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./klarnerRadoSequence_test.go:12:4: t.Equal undefined (type *testing.T has no field or method Equal)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:12:4: t.Equal undefined (type *testing.T has no field or method Equal)

DONE 0 tests, 1 error in 0.146s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

klarnerRadoSequence.go exit status 1
# light
knapsack_test.go:9:9: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
knapsack_test.go:9:9: missing ',' in composite literal

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
knapsack_test.go:9:9: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
knapsack_test.go:9:9: missing ',' in composite literal

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

knapsack.go exit status 1
WARN # light
largestProperDivisor_test.go:13:9: missing ',' in composite literal
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
largestProperDivisor_test.go:13:9: missing ',' in composite literal

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
WARN # light
largestProperDivisor_test.go:13:9: missing ',' in composite literal
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
largestProperDivisor_test.go:13:9: missing ',' in composite literal

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

largestProperDivisor.go exit status 1
# light [light.test]
./magicSquareOdd_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./magicSquareOdd_test.go:22:5: t.EqualError undefined (type *testing.T has no field or method EqualError)
./magicSquareOdd_test.go:22:21: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./magicSquareOdd_test.go:22:5: t.EqualError undefined (type *testing.T has no field or method EqualError)
./magicSquareOdd_test.go:22:21: undefined: errors

DONE 0 tests, 3 errors in 0.184s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./magicSquareOdd_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./magicSquareOdd_test.go:22:5: t.EqualError undefined (type *testing.T has no field or method EqualError)
./magicSquareOdd_test.go:22:21: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:11:5: t.Equal undefined (type *testing.T has no field or method Equal)
./magicSquareOdd_test.go:22:5: t.EqualError undefined (type *testing.T has no field or method EqualError)
./magicSquareOdd_test.go:22:21: undefined: errors

DONE 0 tests, 3 errors in 0.184s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

magicSquareOdd.go exit status 1
# light
matchBytes_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.038s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
matchBytes_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.038s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

matchBytes.go exit status 1
# light
pascalsTriangle_test.go:20:17: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
pascalsTriangle_test.go:20:17: missing ',' in composite literal

DONE 0 tests, 1 error in 0.075s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
pascalsTriangle_test.go:20:17: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
pascalsTriangle_test.go:20:17: missing ',' in composite literal

DONE 0 tests, 1 error in 0.075s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
=== RUN   TestExtractDigits
    phoneNumber_test.go:36: 
        	Error Trace:	/tmp/eval-dev-quality3149083375/light/phoneNumber_test.go:36
        	Error:      	Not equal: 
        	            	expected: "12345678909"
        	            	actual  : "123456789098"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-12345678909
        	            	+123456789098
        	Test:       	TestExtractDigits
--- FAIL: TestExtractDigits (0.00s)
FAIL
coverage: 3.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestExtractDigits (0.00s)
    phoneNumber_test.go:36: 
        	Error Trace:	/tmp/eval-dev-quality3149083375/light/phoneNumber_test.go:36
        	Error:      	Not equal: 
        	            	expected: "12345678909"
        	            	actual  : "123456789098"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-12345678909
        	            	+123456789098
        	Test:       	TestExtractDigits

DONE 1 tests, 1 failure in 0.462s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:113
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
=== RUN   TestExtractDigits
    phoneNumber_test.go:36: 
        	Error Trace:	/tmp/eval-dev-quality3149083375/light/phoneNumber_test.go:36
        	Error:      	Not equal: 
        	            	expected: "12345678909"
        	            	actual  : "123456789098"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-12345678909
        	            	+123456789098
        	Test:       	TestExtractDigits
--- FAIL: TestExtractDigits (0.00s)
FAIL
coverage: 3.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestExtractDigits (0.00s)
    phoneNumber_test.go:36: 
        	Error Trace:	/tmp/eval-dev-quality3149083375/light/phoneNumber_test.go:36
        	Error:      	Not equal: 
        	            	expected: "12345678909"
        	            	actual  : "123456789098"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-12345678909
        	            	+123456789098
        	Test:       	TestExtractDigits

DONE 1 tests, 1 failure in 0.462s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light
simpleSwitchWithReturn_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
simpleSwitchWithReturn_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.039s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
simpleSwitchWithReturn_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
simpleSwitchWithReturn_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.039s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

simpleSwitchWithReturn.go exit status 1
# light
sort_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
sort_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.040s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
sort_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
sort_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.040s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

sort.go exit status 1
WARN invalid TestEvent: FAIL	light [setup failed]# light

bad output from test2json: FAIL	light [setup failed]
typeArrayMultidimensionalArrayLength_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

=== Errors
typeArrayMultidimensionalArrayLength_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
WARN invalid TestEvent: FAIL	light [setup failed]# light

bad output from test2json: FAIL	light [setup failed]
typeArrayMultidimensionalArrayLength_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

=== Errors
typeArrayMultidimensionalArrayLength_test.go:3:8: package stretchr/testify/assert is not in std (/home/eval/go/src/stretchr/testify/assert)

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayMultidimensionalArrayLength.go exit status 1
# light
validateDate_test.go:12:13: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
validateDate_test.go:12:13: missing ',' in composite literal

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/eval/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:96
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/eval/eval-dev-quality/language/golang/language.go:116
github.com/symflower/eval-dev-quality/evaluate.Repository
	/home/eval/eval-dev-quality/evaluate/repository.go:57
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/eval/eval-dev-quality/evaluate/evaluate.go:209
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/eval/eval-dev-quality/evaluate/evaluate.go:253
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/eval/eval-dev-quality/evaluate/evaluate.go:199
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:284
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/eval/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/eval/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/eval/go/src/runtime/proc.go:267
runtime.goexit
	/home/eval/go/src/runtime/asm_amd64.s:1650
# light
validateDate_test.go:12:13: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
validateDate_test.go:12:13: missing ',' in composite literal

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

validateDate.go]
